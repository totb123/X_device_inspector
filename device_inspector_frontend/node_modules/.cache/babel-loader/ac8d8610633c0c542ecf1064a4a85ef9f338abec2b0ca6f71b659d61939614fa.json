{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { getStatus, updateStatus } from '../services/statusService';\nimport { InspectionStatus } from '../types/inspectionType';\nconst convertStatusString = statusString => {\n  switch (statusString) {\n    case 'NORMAL':\n      return InspectionStatus.NORMAL;\n    case 'UNCHECKED':\n      return InspectionStatus.UNCHECKED;\n    case 'DEFECTIVE':\n      return InspectionStatus.DEFECTIVE;\n    default:\n      break;\n  }\n};\nexport default function useStatusHandler(inspectionId) {\n  _s();\n  const [status, setStatus] = useState(undefined);\n  const [loading, setLoading] = useState(false);\n  const get = async () => {\n    setLoading(true);\n    getStatus(inspectionId).then(value => setStatus(convertStatusString(value)));\n    setLoading(false);\n  };\n  const update = async newStatus => {\n    setLoading(true);\n    updateStatus(inspectionId, newStatus).then(() => setStatus(newStatus));\n    setLoading(false);\n  };\n  return {\n    status: status,\n    statusLoading: loading,\n    statusUpdate: update,\n    statusGet: get\n  };\n}\n_s(useStatusHandler, \"c9SkTamAg0lztjAyIHoGbZkPeRQ=\");","map":{"version":3,"names":["useState","getStatus","updateStatus","InspectionStatus","convertStatusString","statusString","NORMAL","UNCHECKED","DEFECTIVE","useStatusHandler","inspectionId","_s","status","setStatus","undefined","loading","setLoading","get","then","value","update","newStatus","statusLoading","statusUpdate","statusGet"],"sources":["/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/src/hooks/useStatusUpdate.ts"],"sourcesContent":["import { useState } from 'react'\nimport { \n  getStatus, \n  updateStatus \n} from '../services/statusService'\nimport { InspectionStatus } from '../types/inspectionType'\n\nconst convertStatusString = (\n  statusString: String\n): InspectionStatus | undefined => {\n  switch (statusString) {\n    case 'NORMAL':\n      return InspectionStatus.NORMAL \n      \n    case 'UNCHECKED':\n      return InspectionStatus.UNCHECKED\n      \n    case 'DEFECTIVE':\n      return InspectionStatus.DEFECTIVE\n      \n    default:\n      break\n  }\n}\n\nexport default function useStatusHandler(\n  inspectionId: number\n) {\n  const [status, setStatus] = useState<\n  InspectionStatus | undefined\n  >(undefined)\n  const [loading, setLoading] = useState(false)\n  const get = async () => {\n    setLoading(true)\n    getStatus(inspectionId).then(\n      value => setStatus(convertStatusString(value))\n    )\n    setLoading(false)\n  }\n  const update = async (newStatus: InspectionStatus) => {\n    setLoading(true)\n    updateStatus(inspectionId, newStatus).then(\n      () => setStatus(newStatus)\n    )\n    setLoading(false)\n  }\n  return {\n    status: status,\n    statusLoading: loading, \n    statusUpdate: update,\n    statusGet: get\n  }\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SACEC,SAAS,EACTC,YAAY,QACP,2BAA2B;AAClC,SAASC,gBAAgB,QAAQ,yBAAyB;AAE1D,MAAMC,mBAAmB,GACvBC,YAAoB,IACa;EACjC,QAAQA,YAAY;IAClB,KAAK,QAAQ;MACX,OAAOF,gBAAgB,CAACG,MAAM;IAEhC,KAAK,WAAW;MACd,OAAOH,gBAAgB,CAACI,SAAS;IAEnC,KAAK,WAAW;MACd,OAAOJ,gBAAgB,CAACK,SAAS;IAEnC;MACE;EACJ;AACF,CAAC;AAED,eAAe,SAASC,gBAAgBA,CACtCC,YAAoB,EACpB;EAAAC,EAAA;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAElCc,SAAS,CAAC;EACZ,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMiB,GAAG,GAAG,MAAAA,CAAA,KAAY;IACtBD,UAAU,CAAC,IAAI,CAAC;IAChBf,SAAS,CAACS,YAAY,CAAC,CAACQ,IAAI,CAC1BC,KAAK,IAAIN,SAAS,CAACT,mBAAmB,CAACe,KAAK,CAAC,CAC/C,CAAC;IACDH,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EACD,MAAMI,MAAM,GAAG,MAAOC,SAA2B,IAAK;IACpDL,UAAU,CAAC,IAAI,CAAC;IAChBd,YAAY,CAACQ,YAAY,EAAEW,SAAS,CAAC,CAACH,IAAI,CACxC,MAAML,SAAS,CAACQ,SAAS,CAC3B,CAAC;IACDL,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EACD,OAAO;IACLJ,MAAM,EAAEA,MAAM;IACdU,aAAa,EAAEP,OAAO;IACtBQ,YAAY,EAAEH,MAAM;IACpBI,SAAS,EAAEP;EACb,CAAC;AACH;AAACN,EAAA,CA3BuBF,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}