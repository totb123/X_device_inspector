{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMutation } from 'react-query';\nimport { updateCurrentParty } from '../../../hooks/useCurrentPartyGet';\nexport default function updateCurrentPartyHandler(specificationId) {\n  _s();\n  const mutation = useMutation(async side => await updateCurrentParty(specificationId, side));\n  return {\n    update: mutation.mutate,\n    updateStatus: mutation.status\n  };\n}\n_s(updateCurrentPartyHandler, \"Kvw+Q3+Z705KOo+cvu2gXTQDxwg=\", false, function () {\n  return [useMutation];\n});","map":{"version":3,"names":["useMutation","updateCurrentParty","updateCurrentPartyHandler","specificationId","_s","mutation","side","update","mutate","updateStatus","status"],"sources":["/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/src/features/currentParty/hooks/useCurrentPartyHandler.ts"],"sourcesContent":["import { useMutation } from 'react-query'\nimport { updateCurrentParty } from '../../../hooks/useCurrentPartyGet'\n\nexport default function updateCurrentPartyHandler(\n  specificationId: number\n) {\n  const mutation = useMutation(\n    async (\n      side: string\n    ) => await updateCurrentParty(specificationId, side))\n\n  return {\n    update: mutation.mutate, \n    updateStatus: mutation.status\n  }\n}"],"mappings":";AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,kBAAkB,QAAQ,mCAAmC;AAEtE,eAAe,SAASC,yBAAyBA,CAC/CC,eAAuB,EACvB;EAAAC,EAAA;EACA,MAAMC,QAAQ,GAAGL,WAAW,CAC1B,MACEM,IAAY,IACT,MAAML,kBAAkB,CAACE,eAAe,EAAEG,IAAI,CAAC,CAAC;EAEvD,OAAO;IACLC,MAAM,EAAEF,QAAQ,CAACG,MAAM;IACvBC,YAAY,EAAEJ,QAAQ,CAACK;EACzB,CAAC;AACH;AAACN,EAAA,CAZuBF,yBAAyB;EAAA,QAG9BF,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}