{"ast":null,"code":"var _jsxFileName = \"/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/src/features/latestInspectionImage/context/latestInspectionImageContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { defaultImageContext } from '../types/latestInspectionImageContextType';\nimport { useLastImageGet } from '../hooks/useLastImageGet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ImageContext = /*#__PURE__*/React.createContext(defaultImageContext);\nconst ImageUpdateContext = /*#__PURE__*/React.createContext(_c = updatedImage => {});\n_c2 = ImageUpdateContext;\nexport function useImage() {\n  _s();\n  return useContext(ImageContext);\n}\n_s(useImage, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function useUpdateImage() {\n  _s2();\n  return useContext(ImageUpdateContext);\n}\n_s2(useUpdateImage, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const LatestInspectionImageContextProvider = ({\n  children\n}) => {\n  _s3();\n  const [image, setImage] = useState(defaultImageContext);\n  const [sectorId, setSectorId] = useState(1);\n  const updateImage = updatedImage => {\n    setImage({\n      ...image,\n      ...updatedImage\n    });\n  };\n  const {\n    lastImageString,\n    updateSectorId,\n    lastImageStatus,\n    lastImageUpdatedAt\n  } = useLastImageGet(sectorId, 4000);\n  useEffect(() => {\n    if (lastImageStatus === 'success') {\n      setImage({\n        latestImage: {\n          href: lastImageString,\n          updatedAt: lastImageUpdatedAt\n        },\n        sectorId: updateSectorId\n      });\n    }\n  }, [lastImageStatus, lastImageString]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ImageContext.Provider, {\n      value: image,\n      children: /*#__PURE__*/_jsxDEV(ImageUpdateContext.Provider, {\n        value: updateImage,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s3(LatestInspectionImageContextProvider, \"nvaC+eBsU73BF7sS+6yoa+wqREo=\", false, function () {\n  return [useLastImageGet];\n});\n_c3 = LatestInspectionImageContextProvider;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ImageUpdateContext$React.createContext\");\n$RefreshReg$(_c2, \"ImageUpdateContext\");\n$RefreshReg$(_c3, \"LatestInspectionImageContextProvider\");","map":{"version":3,"names":["React","useContext","useEffect","useState","defaultImageContext","useLastImageGet","jsxDEV","_jsxDEV","Fragment","_Fragment","ImageContext","createContext","ImageUpdateContext","_c","updatedImage","_c2","useImage","_s","useUpdateImage","_s2","LatestInspectionImageContextProvider","children","_s3","image","setImage","sectorId","setSectorId","updateImage","lastImageString","updateSectorId","lastImageStatus","lastImageUpdatedAt","latestImage","href","updatedAt","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/src/features/latestInspectionImage/context/latestInspectionImageContext.tsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport {\n  ImageContextType as ContextType, \n  defaultImageContext\n} from '../types/latestInspectionImageContextType'\nimport { useLastImageGet } from '../hooks/useLastImageGet'\ntype ImageContextProps = {\n  children: React.ReactNode\n}\n\nconst ImageContext =\n React.createContext<ContextType>(defaultImageContext)\nconst ImageUpdateContext = React.createContext(\n  (updatedImage: Partial<ContextType>) => {}\n)\nexport function useImage()  {\n  return useContext(ImageContext)\n}\n\nexport function useUpdateImage() {\n  return useContext(ImageUpdateContext)\n}\nexport const LatestInspectionImageContextProvider: \nReact.FC<ImageContextProps> = (\n  {children}\n) => {\n  const [image, setImage] = useState(defaultImageContext)\n  const [sectorId, setSectorId] = useState(1)\n\n  const updateImage = (updatedImage: Partial<ContextType>) => {\n    setImage({...image, ...updatedImage})\n  }\n  const {\n    lastImageString, \n    updateSectorId, \n    lastImageStatus, \n    lastImageUpdatedAt\n  } =  useLastImageGet(sectorId, 4000) \n  useEffect(() => {\n    if (lastImageStatus === 'success')\n      {setImage({\n        latestImage: {\n          href: lastImageString,\n          updatedAt: lastImageUpdatedAt\n        },\n        sectorId: updateSectorId\n  })}\n  },[lastImageStatus, lastImageString])\n  return (\n    <>\n      <ImageContext.Provider value={image}>\n        <ImageUpdateContext.Provider value={updateImage}>\n          {children}\n        </ImageUpdateContext.Provider>\n      </ImageContext.Provider>\n    </>\n  )\n}"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,SAEEC,mBAAmB,QACd,2CAA2C;AAClD,SAASC,eAAe,QAAQ,0BAA0B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAK1D,MAAMC,YAAY,gBACjBV,KAAK,CAACW,aAAa,CAAcP,mBAAmB,CAAC;AACtD,MAAMQ,kBAAkB,gBAAGZ,KAAK,CAACW,aAAa,CAAAE,EAAA,GAC3CC,YAAkC,IAAK,CAAC,CAC3C,CAAC;AAAAC,GAAA,GAFKH,kBAAkB;AAGxB,OAAO,SAASI,QAAQA,CAAA,EAAI;EAAAC,EAAA;EAC1B,OAAOhB,UAAU,CAACS,YAAY,CAAC;AACjC;AAACO,EAAA,CAFeD,QAAQ;AAIxB,OAAO,SAASE,cAAcA,CAAA,EAAG;EAAAC,GAAA;EAC/B,OAAOlB,UAAU,CAACW,kBAAkB,CAAC;AACvC;AAACO,GAAA,CAFeD,cAAc;AAG9B,OAAO,MAAME,oCACc,GAAGA,CAC5B;EAACC;AAAQ,CAAC,KACP;EAAAC,GAAA;EACH,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAACC,mBAAmB,CAAC;EACvD,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC;EAE3C,MAAMwB,WAAW,GAAIb,YAAkC,IAAK;IAC1DU,QAAQ,CAAC;MAAC,GAAGD,KAAK;MAAE,GAAGT;IAAY,CAAC,CAAC;EACvC,CAAC;EACD,MAAM;IACJc,eAAe;IACfC,cAAc;IACdC,eAAe;IACfC;EACF,CAAC,GAAI1B,eAAe,CAACoB,QAAQ,EAAE,IAAI,CAAC;EACpCvB,SAAS,CAAC,MAAM;IACd,IAAI4B,eAAe,KAAK,SAAS,EAC/B;MAACN,QAAQ,CAAC;QACRQ,WAAW,EAAE;UACXC,IAAI,EAAEL,eAAe;UACrBM,SAAS,EAAEH;QACb,CAAC;QACDN,QAAQ,EAAEI;MAChB,CAAC,CAAC;IAAA;EACF,CAAC,EAAC,CAACC,eAAe,EAAEF,eAAe,CAAC,CAAC;EACrC,oBACErB,OAAA,CAAAE,SAAA;IAAAY,QAAA,eACEd,OAAA,CAACG,YAAY,CAACyB,QAAQ;MAACC,KAAK,EAAEb,KAAM;MAAAF,QAAA,eAClCd,OAAA,CAACK,kBAAkB,CAACuB,QAAQ;QAACC,KAAK,EAAET,WAAY;QAAAN,QAAA,EAC7CA;MAAQ;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACkB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT;EAAC,gBACxB,CAAC;AAEP,CAAC;AAAAlB,GAAA,CAnCYF,oCACc;EAAA,QAcpBf,eAAe;AAAA;AAAAoC,GAAA,GAfTrB,oCACc;AAAA,IAAAP,EAAA,EAAAE,GAAA,EAAA0B,GAAA;AAAAC,YAAA,CAAA7B,EAAA;AAAA6B,YAAA,CAAA3B,GAAA;AAAA2B,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}