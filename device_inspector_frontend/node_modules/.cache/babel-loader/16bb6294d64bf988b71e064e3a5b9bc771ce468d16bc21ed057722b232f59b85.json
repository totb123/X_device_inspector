{"ast":null,"code":"var _jsxFileName = \"/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/device_inspector_frontend/src/features/inspectionsCheck/components/main.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Title from 'antd/es/typography/Title';\nimport { UnveridiedInspectionsList } from './unverifiedInspectionsList';\nimport { useUnverifiedInspectionModal } from '../hooks/useUnverifiedInspectionModal';\nimport { InspectionModal } from '../../../components/inspectionModal';\nimport { UnverifiedInspectionsProvider } from '../context/inspectionsVerificationContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MainPage = () => {\n  _s();\n  const [isChangeStatus, setIsChangeStatus] = useState(false);\n  const {\n    toggleModal,\n    isModalShown,\n    modalData\n  } = useUnverifiedInspectionModal();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"\\u041F\\u0440\\u043E\\u0432\\u0435\\u0440\\u043A\\u0430 \\u043F\\u043B\\u0430\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(UnverifiedInspectionsProvider, {\n      children: [/*#__PURE__*/_jsxDEV(UnveridiedInspectionsList, {\n        toggleModal: toggleModal,\n        isChangeStatus: isChangeStatus,\n        setIsChangeStatus: setIsChangeStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this), modalData !== undefined ? /*#__PURE__*/_jsxDEV(InspectionModal, {\n        modalData: modalData,\n        isModalVisible: isModalShown,\n        handleModal: toggleModal,\n        setIsChangeStatus: setIsChangeStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(MainPage, \"GERxeAqcdCEyZRpn0RmwB7HmpiA=\", false, function () {\n  return [useUnverifiedInspectionModal];\n});\n_c = MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","Title","UnveridiedInspectionsList","useUnverifiedInspectionModal","InspectionModal","UnverifiedInspectionsProvider","jsxDEV","_jsxDEV","Fragment","_Fragment","MainPage","_s","isChangeStatus","setIsChangeStatus","toggleModal","isModalShown","modalData","children","fileName","_jsxFileName","lineNumber","columnNumber","undefined","isModalVisible","handleModal","_c","$RefreshReg$"],"sources":["/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/device_inspector_frontend/src/features/inspectionsCheck/components/main.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport Title from 'antd/es/typography/Title'\nimport { \n  UnveridiedInspectionsList \n} from './unverifiedInspectionsList'\nimport { \n  useUnverifiedInspectionModal \n} from '../hooks/useUnverifiedInspectionModal'\nimport { InspectionModal } from '../../../components/inspectionModal'\nimport { \n  UnverifiedInspectionsProvider \n} from '../context/inspectionsVerificationContext'\nexport const MainPage:React.FC = () => {\n  const [\n    isChangeStatus, \n    setIsChangeStatus] = useState<boolean>(false)\n  const {\n    toggleModal,\n    isModalShown,\n    modalData} = useUnverifiedInspectionModal()\n\n  return <>\n    <Title>Проверка плат</Title>\n    <UnverifiedInspectionsProvider>\n      <UnveridiedInspectionsList \n        toggleModal={toggleModal} \n        isChangeStatus={isChangeStatus} \n        setIsChangeStatus={setIsChangeStatus}\n      />\n      {\n        modalData !== undefined\n          ? <InspectionModal \n            modalData={modalData}\n            isModalVisible={isModalShown}\n            handleModal={toggleModal} \n            setIsChangeStatus={setIsChangeStatus}\n          />\n          : <></>\n      }\n    </UnverifiedInspectionsProvider>\n  </>\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,SACEC,yBAAyB,QACpB,6BAA6B;AACpC,SACEC,4BAA4B,QACvB,uCAAuC;AAC9C,SAASC,eAAe,QAAQ,qCAAqC;AACrE,SACEC,6BAA6B,QACxB,2CAA2C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAClD,OAAO,MAAMC,QAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC,MAAM,CACJC,cAAc,EACdC,iBAAiB,CAAC,GAAGb,QAAQ,CAAU,KAAK,CAAC;EAC/C,MAAM;IACJc,WAAW;IACXC,YAAY;IACZC;EAAS,CAAC,GAAGb,4BAA4B,CAAC,CAAC;EAE7C,oBAAOI,OAAA,CAAAE,SAAA;IAAAQ,QAAA,gBACLV,OAAA,CAACN,KAAK;MAAAgB,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC5Bd,OAAA,CAACF,6BAA6B;MAAAY,QAAA,gBAC5BV,OAAA,CAACL,yBAAyB;QACxBY,WAAW,EAAEA,WAAY;QACzBF,cAAc,EAAEA,cAAe;QAC/BC,iBAAiB,EAAEA;MAAkB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC,EAEAL,SAAS,KAAKM,SAAS,gBACnBf,OAAA,CAACH,eAAe;QAChBY,SAAS,EAAEA,SAAU;QACrBO,cAAc,EAAER,YAAa;QAC7BS,WAAW,EAAEV,WAAY;QACzBD,iBAAiB,EAAEA;MAAkB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC,gBACAd,OAAA,CAAAE,SAAA,mBAAI,CAAC;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEkB,CAAC;EAAA,eAChC,CAAC;AACL,CAAC;AAAAV,EAAA,CA7BYD,QAAiB;EAAA,QAObP,4BAA4B;AAAA;AAAAsB,EAAA,GAPhCf,QAAiB;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}