{"ast":null,"code":"var _jsxFileName = \"/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/src/features/latestInspectionImage/components/sectorPicker.tsx\",\n  _s = $RefreshSig$();\nimport { Button, Form, Space } from 'antd';\nimport React from 'react';\nimport { useImage } from '../context/latestInspectionImageContext';\nimport { SectorInput } from '../../../components/sectorInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SectorPicker = () => {\n  _s();\n  const [pickedSector, setPickedSector] = React.useState();\n  const image = useImage();\n  const handleSubmit = () => {\n    image.updateSector(pickedSector);\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: /*#__PURE__*/_jsxDEV(Space, {\n      direction: \"vertical\",\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(SectorInput, {\n          isMultiple: false,\n          allowClear: false,\n          onChange: selectedSector => setPickedSector(selectedSector)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: pickedSector === undefined,\n        onClick: handleSubmit,\n        children: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 10\n  }, this);\n};\n_s(SectorPicker, \"rcomw8rDN3ik9JmNRyECHZwAcsQ=\", false, function () {\n  return [useImage];\n});\n_c = SectorPicker;\nvar _c;\n$RefreshReg$(_c, \"SectorPicker\");","map":{"version":3,"names":["Button","Form","Space","React","useImage","SectorInput","jsxDEV","_jsxDEV","Fragment","_Fragment","SectorPicker","_s","pickedSector","setPickedSector","useState","image","handleSubmit","updateSector","children","direction","isMultiple","allowClear","onChange","selectedSector","fileName","_jsxFileName","lineNumber","columnNumber","disabled","undefined","onClick","_c","$RefreshReg$"],"sources":["/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/src/features/latestInspectionImage/components/sectorPicker.tsx"],"sourcesContent":["import { Button, Form, Select, Space, Spin } from 'antd'\nimport React, { useEffect } from 'react'\n\nimport { TSector } from '../../../types/sectorType'\n\nimport { \n  useImage, \n} from '../context/latestInspectionImageContext'\nimport { SectorInput } from '../../../components/sectorInput'\n\nexport const SectorPicker: React.FC = () => {\n  \n  const [pickedSector, setPickedSector] = React.useState<number>() \n  const image = useImage()\n  const handleSubmit = (\n  ) => {\n    image.updateSector(pickedSector)\n  }\n  return <Form>\n    <Space direction='vertical'>\n      <>\n        <SectorInput\n          isMultiple={false}\n          allowClear={false}\n          onChange={\n            selectedSector => \n              setPickedSector(selectedSector)\n          }\n        />\n      </>\n      <Button\n        disabled={pickedSector === undefined}\n        onClick={handleSubmit}  \n      >\n        Подтвердить\n      </Button>\n    </Space>\n  </Form>\n}"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,IAAI,EAAUC,KAAK,QAAc,MAAM;AACxD,OAAOC,KAAK,MAAqB,OAAO;AAIxC,SACEC,QAAQ,QACH,yCAAyC;AAChD,SAASC,WAAW,QAAQ,iCAAiC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7D,OAAO,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE1C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,KAAK,CAACW,QAAQ,CAAS,CAAC;EAChE,MAAMC,KAAK,GAAGX,QAAQ,CAAC,CAAC;EACxB,MAAMY,YAAY,GAAGA,CAAA,KAChB;IACHD,KAAK,CAACE,YAAY,CAACL,YAAY,CAAC;EAClC,CAAC;EACD,oBAAOL,OAAA,CAACN,IAAI;IAAAiB,QAAA,eACVX,OAAA,CAACL,KAAK;MAACiB,SAAS,EAAC,UAAU;MAAAD,QAAA,gBACzBX,OAAA,CAAAE,SAAA;QAAAS,QAAA,eACEX,OAAA,CAACF,WAAW;UACVe,UAAU,EAAE,KAAM;UAClBC,UAAU,EAAE,KAAM;UAClBC,QAAQ,EACNC,cAAc,IACZV,eAAe,CAACU,cAAc;QACjC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC,gBACF,CAAC,eACHpB,OAAA,CAACP,MAAM;QACL4B,QAAQ,EAAEhB,YAAY,KAAKiB,SAAU;QACrCC,OAAO,EAAEd,YAAa;QAAAE,QAAA,EACvB;MAED;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AACT,CAAC;AAAAhB,EAAA,CA5BYD,YAAsB;EAAA,QAGnBN,QAAQ;AAAA;AAAA2B,EAAA,GAHXrB,YAAsB;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}