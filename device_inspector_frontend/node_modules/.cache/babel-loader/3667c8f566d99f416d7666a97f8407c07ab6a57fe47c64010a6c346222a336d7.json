{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PresetStatusColorTypes = void 0;\nexports.isPresetColor = isPresetColor;\nexports.isPresetStatusColor = isPresetStatusColor;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _interface = require(\"../theme/interface\");\nconst inverseColors = _interface.PresetColors.map(color => `${color}-inverse`);\nconst PresetStatusColorTypes = exports.PresetStatusColorTypes = ['success', 'processing', 'error', 'default', 'warning'];\n/**\n * determine if the color keyword belongs to the `Ant Design` {@link PresetColors}.\n * @param color color to be judged\n * @param includeInverse whether to include reversed colors\n */\nfunction isPresetColor(color) {\n  let includeInverse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  if (includeInverse) {\n    return [].concat((0, _toConsumableArray2.default)(inverseColors), (0, _toConsumableArray2.default)(_interface.PresetColors)).includes(color);\n  }\n  return _interface.PresetColors.includes(color);\n}\nfunction isPresetStatusColor(color) {\n  return PresetStatusColorTypes.includes(color);\n}","map":{"version":3,"names":["_interopRequireDefault","require","default","Object","defineProperty","exports","value","PresetStatusColorTypes","isPresetColor","isPresetStatusColor","_toConsumableArray2","_interface","inverseColors","PresetColors","map","color","includeInverse","arguments","length","undefined","concat","includes"],"sources":["/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/device_inspector_frontend/node_modules/antd/lib/_util/colors.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PresetStatusColorTypes = void 0;\nexports.isPresetColor = isPresetColor;\nexports.isPresetStatusColor = isPresetStatusColor;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _interface = require(\"../theme/interface\");\nconst inverseColors = _interface.PresetColors.map(color => `${color}-inverse`);\nconst PresetStatusColorTypes = exports.PresetStatusColorTypes = ['success', 'processing', 'error', 'default', 'warning'];\n/**\n * determine if the color keyword belongs to the `Ant Design` {@link PresetColors}.\n * @param color color to be judged\n * @param includeInverse whether to include reversed colors\n */\nfunction isPresetColor(color) {\n  let includeInverse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  if (includeInverse) {\n    return [].concat((0, _toConsumableArray2.default)(inverseColors), (0, _toConsumableArray2.default)(_interface.PresetColors)).includes(color);\n  }\n  return _interface.PresetColors.includes(color);\n}\nfunction isPresetStatusColor(color) {\n  return PresetStatusColorTypes.includes(color);\n}"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAA8C,CAAC,CAACC,OAAO;AAC5FC,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,sBAAsB,GAAG,KAAK,CAAC;AACvCF,OAAO,CAACG,aAAa,GAAGA,aAAa;AACrCH,OAAO,CAACI,mBAAmB,GAAGA,mBAAmB;AACjD,IAAIC,mBAAmB,GAAGV,sBAAsB,CAACC,OAAO,CAAC,0CAA0C,CAAC,CAAC;AACrG,IAAIU,UAAU,GAAGV,OAAO,CAAC,oBAAoB,CAAC;AAC9C,MAAMW,aAAa,GAAGD,UAAU,CAACE,YAAY,CAACC,GAAG,CAACC,KAAK,IAAK,GAAEA,KAAM,UAAS,CAAC;AAC9E,MAAMR,sBAAsB,GAAGF,OAAO,CAACE,sBAAsB,GAAG,CAAC,SAAS,EAAE,YAAY,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,CAAC;AACxH;AACA;AACA;AACA;AACA;AACA,SAASC,aAAaA,CAACO,KAAK,EAAE;EAC5B,IAAIC,cAAc,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI;EAC7F,IAAID,cAAc,EAAE;IAClB,OAAO,EAAE,CAACI,MAAM,CAAC,CAAC,CAAC,EAAEV,mBAAmB,CAACR,OAAO,EAAEU,aAAa,CAAC,EAAE,CAAC,CAAC,EAAEF,mBAAmB,CAACR,OAAO,EAAES,UAAU,CAACE,YAAY,CAAC,CAAC,CAACQ,QAAQ,CAACN,KAAK,CAAC;EAC9I;EACA,OAAOJ,UAAU,CAACE,YAAY,CAACQ,QAAQ,CAACN,KAAK,CAAC;AAChD;AACA,SAASN,mBAAmBA,CAACM,KAAK,EAAE;EAClC,OAAOR,sBAAsB,CAACc,QAAQ,CAACN,KAAK,CAAC;AAC/C"},"metadata":{},"sourceType":"script","externalDependencies":[]}