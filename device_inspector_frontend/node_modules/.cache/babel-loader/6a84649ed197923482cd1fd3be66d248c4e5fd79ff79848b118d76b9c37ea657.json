{"ast":null,"code":"var _jsxFileName = \"/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/device_inspector_frontend/src/components/statusInput.tsx\",\n  _s = $RefreshSig$();\nimport { Select, Spin } from 'antd';\nimport React from 'react';\nimport { useStatusGet } from '../hooks/useInspectionStatusGet';\nimport { InspectionStatus } from '../types/inspectionType';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StatusInput = ({\n  onChange,\n  isMultiple,\n  allowClear,\n  defaultValue\n}) => {\n  _s();\n  const [statuses, isLoading] = useStatusGet();\n  const changeLabelByValue = value => {\n    switch (value) {\n      case InspectionStatus.NORMAL:\n        return 'Проверено';\n      case InspectionStatus.UNCHECKED:\n        return 'Не проверено';\n      case InspectionStatus.DEFECTIVE:\n        return 'Брак';\n      case InspectionStatus.REQUIRE_VERIFICATION:\n        return 'Требуется проверка';\n      default:\n        return value;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '200px'\n    },\n    children: [\" \", isLoading === 'success' ? /*#__PURE__*/_jsxDEV(Select, {\n      onChange: onChange,\n      allowClear: allowClear,\n      mode: isMultiple ? 'multiple' : undefined,\n      defaultValue: defaultValue,\n      disabled: isLoading !== 'success',\n      options: statuses.map(status => ({\n        value: status,\n        label: changeLabelByValue(status)\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 12\n  }, this);\n};\n_s(StatusInput, \"zHcrdouxRZkseZgK06U/jbuzO+g=\", false, function () {\n  return [useStatusGet];\n});\n_c = StatusInput;\nvar _c;\n$RefreshReg$(_c, \"StatusInput\");","map":{"version":3,"names":["Select","Spin","React","useStatusGet","InspectionStatus","jsxDEV","_jsxDEV","StatusInput","onChange","isMultiple","allowClear","defaultValue","_s","statuses","isLoading","changeLabelByValue","value","NORMAL","UNCHECKED","DEFECTIVE","REQUIRE_VERIFICATION","style","width","children","mode","undefined","disabled","options","map","status","label","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/device_inspector_frontend/src/components/statusInput.tsx"],"sourcesContent":["import { Select, Spin } from 'antd'\nimport React from 'react'\nimport { useStatusGet } from '../hooks/useInspectionStatusGet'\nimport { InspectionStatus } from '../types/inspectionType'\n\ntype StatusSelectProps = {\n  isMultiple?: boolean\n  allowClear?: boolean\n  defaultValue?: string[]\n  onChange: (values: any) => void\n}\n\nexport const StatusInput: React.FC<StatusSelectProps> = ({\n  onChange,\n  isMultiple,\n  allowClear,\n  defaultValue,\n}) => {\n  const [statuses, isLoading] = useStatusGet()\n  const changeLabelByValue = (value: String) => {\n    switch (value) {\n      case InspectionStatus.NORMAL:\n        return 'Проверено'\n      case InspectionStatus.UNCHECKED:\n        return 'Не проверено'\n      case InspectionStatus.DEFECTIVE:\n        return 'Брак'\n      case InspectionStatus.REQUIRE_VERIFICATION:\n        return 'Требуется проверка'\n      default:\n        return value\n    }\n  }\n  return  (<div style={{width: '200px'}}> {\n    isLoading === 'success' \n      ? <Select\n        onChange={onChange}\n        allowClear={allowClear}\n        mode={isMultiple ? 'multiple' : undefined}\n        defaultValue={defaultValue}\n        disabled={isLoading !== 'success'}\n        options={(statuses as String[]).map(status => ({\n          value: status,\n          label: changeLabelByValue(status),\n        }))}\n      />\n      : <Spin />\n    \n  }</div>)\n}\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,IAAI,QAAQ,MAAM;AACnC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,iCAAiC;AAC9D,SAASC,gBAAgB,QAAQ,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAS1D,OAAO,MAAMC,WAAwC,GAAGA,CAAC;EACvDC,QAAQ;EACRC,UAAU;EACVC,UAAU;EACVC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,QAAQ,EAAEC,SAAS,CAAC,GAAGX,YAAY,CAAC,CAAC;EAC5C,MAAMY,kBAAkB,GAAIC,KAAa,IAAK;IAC5C,QAAQA,KAAK;MACX,KAAKZ,gBAAgB,CAACa,MAAM;QAC1B,OAAO,WAAW;MACpB,KAAKb,gBAAgB,CAACc,SAAS;QAC7B,OAAO,cAAc;MACvB,KAAKd,gBAAgB,CAACe,SAAS;QAC7B,OAAO,MAAM;MACf,KAAKf,gBAAgB,CAACgB,oBAAoB;QACxC,OAAO,oBAAoB;MAC7B;QACE,OAAOJ,KAAK;IAChB;EACF,CAAC;EACD,oBAASV,OAAA;IAAKe,KAAK,EAAE;MAACC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,GAAC,GAAC,EACtCT,SAAS,KAAK,SAAS,gBACnBR,OAAA,CAACN,MAAM;MACPQ,QAAQ,EAAEA,QAAS;MACnBE,UAAU,EAAEA,UAAW;MACvBc,IAAI,EAAEf,UAAU,GAAG,UAAU,GAAGgB,SAAU;MAC1Cd,YAAY,EAAEA,YAAa;MAC3Be,QAAQ,EAAEZ,SAAS,KAAK,SAAU;MAClCa,OAAO,EAAGd,QAAQ,CAAce,GAAG,CAACC,MAAM,KAAK;QAC7Cb,KAAK,EAAEa,MAAM;QACbC,KAAK,EAAEf,kBAAkB,CAACc,MAAM;MAClC,CAAC,CAAC;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,gBACA5B,OAAA,CAACL,IAAI;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAER,CAAC;AACT,CAAC;AAAAtB,EAAA,CArCYL,WAAwC;EAAA,QAMrBJ,YAAY;AAAA;AAAAgC,EAAA,GAN/B5B,WAAwC;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}