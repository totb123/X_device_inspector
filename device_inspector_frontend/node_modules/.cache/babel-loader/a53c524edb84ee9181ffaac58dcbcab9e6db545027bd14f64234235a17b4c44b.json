{"ast":null,"code":"var _jsxFileName = \"/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/device_inspector_frontend/src/features/inspectionsCheck/context/inspectionsVerificationContext.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n// eslint-disable-next-line @stylistic/max-len\nimport useUnverifiedInspectionsGet from '../hooks/useUnverifiedInspectionsGet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InspectionsVerificationContext = /*#__PURE__*/React.createContext(null);\nconst UnverifiedInspectionsProvider = children => {\n  _s();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(10);\n  const {\n    inspectionsData,\n    inspectionsStatus,\n    inspectionsRefetch,\n    inspectionsTotal\n  } = useUnverifiedInspectionsGet(currentPage, pageSize);\n  const handleRefetch = () => {\n    inspectionsRefetch();\n  };\n  const handlePageSizeChange = (currentPage, size) => {\n    setCurrentPage(currentPage);\n    setPageSize(size);\n  };\n  return /*#__PURE__*/_jsxDEV(InspectionsVerificationContext.Provider, {\n    value: {\n      inspections: inspectionsData,\n      inspectionsStatus: inspectionsStatus,\n      inspectionsTotal: inspectionsTotal,\n      inspectionsRefetch: handleRefetch,\n      changePageSize: handlePageSizeChange\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(UnverifiedInspectionsProvider, \"Y1GUkooftvUGrZRqoHJGQc039B0=\", false, function () {\n  return [useUnverifiedInspectionsGet];\n});\n_c = UnverifiedInspectionsProvider;\nexport { UnverifiedInspectionsProvider, useUnverifiedInspectionsGet };\nvar _c;\n$RefreshReg$(_c, \"UnverifiedInspectionsProvider\");","map":{"version":3,"names":["React","useState","useUnverifiedInspectionsGet","jsxDEV","_jsxDEV","InspectionsVerificationContext","createContext","UnverifiedInspectionsProvider","children","_s","currentPage","setCurrentPage","pageSize","setPageSize","inspectionsData","inspectionsStatus","inspectionsRefetch","inspectionsTotal","handleRefetch","handlePageSizeChange","size","Provider","value","inspections","changePageSize","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/device_inspector_frontend/src/features/inspectionsCheck/context/inspectionsVerificationContext.tsx"],"sourcesContent":["import React, { ReactNode, useState } from 'react'\n// eslint-disable-next-line @stylistic/max-len\nimport useUnverifiedInspectionsGet from '../hooks/useUnverifiedInspectionsGet'\nimport { TInspection } from '../../../types/inspectionType'\nimport { UseQueryResult } from 'react-query'\ntype TInspectionsVerificationContext = {\n  inspections: TInspection[] | undefined\n  inspectionsStatus: 'loading' | 'error' | 'success' | 'idle'\n  inspectionsTotal: UseQueryResult\n  inspectionsRefetch: () => void\n  changePageSize: (page: number, size: number) => void\n}\n\nconst InspectionsVerificationContext = React.createContext<\nTInspectionsVerificationContext | null>(null)\n\nconst UnverifiedInspectionsProvider: React.FC<\nReact.ReactNode> = children => {\n\n  const [currentPage, setCurrentPage] = useState<number>(1)\n  const [pageSize, setPageSize] = useState(10)\n  const {\n    inspectionsData,\n    inspectionsStatus,\n    inspectionsRefetch,\n    inspectionsTotal\n  } = useUnverifiedInspectionsGet(currentPage, pageSize)\n\n  const handleRefetch = () => {\n    inspectionsRefetch()\n  }\n\n  const handlePageSizeChange = (currentPage: number, size: number) => {\n    setCurrentPage(currentPage)\n    setPageSize(size)\n  }\n\n  return (\n    <InspectionsVerificationContext.Provider value={{ \n      inspections: inspectionsData,\n      inspectionsStatus: inspectionsStatus,\n      inspectionsTotal: inspectionsTotal,\n      inspectionsRefetch: handleRefetch,\n      changePageSize: handlePageSizeChange\n    }}>\n      {children}\n    </InspectionsVerificationContext.Provider>\n  )\n}\n\nexport { UnverifiedInspectionsProvider, useUnverifiedInspectionsGet }"],"mappings":";;AAAA,OAAOA,KAAK,IAAeC,QAAQ,QAAQ,OAAO;AAClD;AACA,OAAOC,2BAA2B,MAAM,sCAAsC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAW9E,MAAMC,8BAA8B,gBAAGL,KAAK,CAACM,aAAa,CAClB,IAAI,CAAC;AAE7C,MAAMC,6BACU,GAAGC,QAAQ,IAAI;EAAAC,EAAA;EAE7B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAS,CAAC,CAAC;EACzD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM;IACJa,eAAe;IACfC,iBAAiB;IACjBC,kBAAkB;IAClBC;EACF,CAAC,GAAGf,2BAA2B,CAACQ,WAAW,EAAEE,QAAQ,CAAC;EAEtD,MAAMM,aAAa,GAAGA,CAAA,KAAM;IAC1BF,kBAAkB,CAAC,CAAC;EACtB,CAAC;EAED,MAAMG,oBAAoB,GAAGA,CAACT,WAAmB,EAAEU,IAAY,KAAK;IAClET,cAAc,CAACD,WAAW,CAAC;IAC3BG,WAAW,CAACO,IAAI,CAAC;EACnB,CAAC;EAED,oBACEhB,OAAA,CAACC,8BAA8B,CAACgB,QAAQ;IAACC,KAAK,EAAE;MAC9CC,WAAW,EAAET,eAAe;MAC5BC,iBAAiB,EAAEA,iBAAiB;MACpCE,gBAAgB,EAAEA,gBAAgB;MAClCD,kBAAkB,EAAEE,aAAa;MACjCM,cAAc,EAAEL;IAClB,CAAE;IAAAX,QAAA,EACCA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC8B,CAAC;AAE9C,CAAC;AAAAnB,EAAA,CAhCKF,6BACU;EAAA,QASVL,2BAA2B;AAAA;AAAA2B,EAAA,GAV3BtB,6BACU;AAiChB,SAASA,6BAA6B,EAAEL,2BAA2B;AAAE,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}