{"ast":null,"code":"export async function getComments(inspectionId) {\n  const res = await fetch(\n  // eslint-disable-next-line @stylistic/max-len\n  `${process.env.REACT_APP_API_BASE_URL}/comment?inspection_id=${inspectionId.toString()}`);\n  return await res.json();\n}\nexport async function pushComment(inspectionId, comment) {\n  const res = await fetch(\n  // eslint-disable-next-line @stylistic/max-len\n  `${process.env.REACT_APP_API_BASE_URL}/comment?inspection_id=${inspectionId.toString()}`, {\n    method: 'POST',\n    mode: 'cors',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(comment)\n  });\n  return await res.json();\n}","map":{"version":3,"names":["getComments","inspectionId","res","fetch","process","env","REACT_APP_API_BASE_URL","toString","json","pushComment","comment","method","mode","headers","body","JSON","stringify"],"sources":["/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/device_inspector_frontend/src/services/commentService.ts"],"sourcesContent":["import { TComment } from '../types/commentType'\n\nexport async function getComments(\n  inspectionId: number\n): Promise<TComment[]> {\n  const res = await fetch(\n    // eslint-disable-next-line @stylistic/max-len\n    `${process.env.REACT_APP_API_BASE_URL}/comment?inspection_id=${inspectionId.toString()}`\n  )\n  return await res.json()\n}\n\nexport async function pushComment(\n  inspectionId: number,\n  comment: TComment\n) {\n  const res = await fetch(\n    // eslint-disable-next-line @stylistic/max-len\n    `${process.env.REACT_APP_API_BASE_URL}/comment?inspection_id=${inspectionId.toString()}`, {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(comment)\n    }\n  )\n  return await res.json()\n}\n"],"mappings":"AAEA,OAAO,eAAeA,WAAWA,CAC/BC,YAAoB,EACC;EACrB,MAAMC,GAAG,GAAG,MAAMC,KAAK;EACrB;EACC,GAAEC,OAAO,CAACC,GAAG,CAACC,sBAAuB,0BAAyBL,YAAY,CAACM,QAAQ,CAAC,CAAE,EACzF,CAAC;EACD,OAAO,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;AACzB;AAEA,OAAO,eAAeC,WAAWA,CAC/BR,YAAoB,EACpBS,OAAiB,EACjB;EACA,MAAMR,GAAG,GAAG,MAAMC,KAAK;EACrB;EACC,GAAEC,OAAO,CAACC,GAAG,CAACC,sBAAuB,0BAAyBL,YAAY,CAACM,QAAQ,CAAC,CAAE,EAAC,EAAE;IACxFI,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE,MAAM;IACZC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,OAAO;EAC9B,CACF,CAAC;EACD,OAAO,MAAMR,GAAG,CAACM,IAAI,CAAC,CAAC;AACzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}