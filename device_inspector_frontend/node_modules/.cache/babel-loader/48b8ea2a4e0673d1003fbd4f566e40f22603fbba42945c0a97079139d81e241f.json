{"ast":null,"code":"export async function getInspectionsTotal(generatedQuery) {\n  const params = generatedQuery;\n  const res = await fetch(`${process.env.REACT_APP_API_BASE_URL}/inspections/count?${params}`);\n  return parseInt(await res.text());\n}\nexport async function getInspections(generatedQuery) {\n  const params = generatedQuery;\n  // eslint-disable-next-line @stylistic/max-len\n  const res = await fetch(`${process.env.REACT_APP_API_BASE_URL}/inspections?${params}`, {\n    cache: 'no-cache'\n  });\n  return await res.json();\n}","map":{"version":3,"names":["getInspectionsTotal","generatedQuery","params","res","fetch","process","env","REACT_APP_API_BASE_URL","parseInt","text","getInspections","cache","json"],"sources":["/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/device_inspector_frontend/src/services/inspectionService.ts"],"sourcesContent":["import {TInspection} from '../types/inspectionType'\n\nexport async function getInspectionsTotal(\n  generatedQuery: URLSearchParams\n): Promise<number> {\n  const params = generatedQuery\n  const res =  await fetch(\n    `${process.env.REACT_APP_API_BASE_URL}/inspections/count?${params}`)\n  return parseInt(await res.text())\n}\n\nexport async function getInspections(\n  generatedQuery: URLSearchParams\n): Promise<TInspection[]> {\n  const params = generatedQuery\n  // eslint-disable-next-line @stylistic/max-len\n  const res = await fetch(\n    `${process.env.REACT_APP_API_BASE_URL}/inspections?${params}`,\n    {cache: 'no-cache'}\n  )\n  return await res.json()\n}"],"mappings":"AAEA,OAAO,eAAeA,mBAAmBA,CACvCC,cAA+B,EACd;EACjB,MAAMC,MAAM,GAAGD,cAAc;EAC7B,MAAME,GAAG,GAAI,MAAMC,KAAK,CACrB,GAAEC,OAAO,CAACC,GAAG,CAACC,sBAAuB,sBAAqBL,MAAO,EAAC,CAAC;EACtE,OAAOM,QAAQ,CAAC,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC,CAAC;AACnC;AAEA,OAAO,eAAeC,cAAcA,CAClCT,cAA+B,EACP;EACxB,MAAMC,MAAM,GAAGD,cAAc;EAC7B;EACA,MAAME,GAAG,GAAG,MAAMC,KAAK,CACpB,GAAEC,OAAO,CAACC,GAAG,CAACC,sBAAuB,gBAAeL,MAAO,EAAC,EAC7D;IAACS,KAAK,EAAE;EAAU,CACpB,CAAC;EACD,OAAO,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;AACzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}