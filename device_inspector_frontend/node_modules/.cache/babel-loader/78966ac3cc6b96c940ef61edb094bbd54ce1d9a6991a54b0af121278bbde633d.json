{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMutation, useQuery } from 'react-query';\nimport { editDMs, getBoards } from '../services/boardService';\nexport default function useBoardsGet(multiboardId) {\n  _s();\n  const {\n    data,\n    status,\n    refetch\n  } = useQuery(['boards', multiboardId], () => getBoards(multiboardId));\n  const mutation = useMutation(async dto => await editDMs(dto), {\n    onSuccess: () => {\n      refetch();\n    }\n  });\n  return {\n    boards: data,\n    boardsStatus: status,\n    boardsRefetch: refetch,\n    boardsEditDMs: mutation.mutate,\n    boardsEditDMsStatus: mutation.status\n  };\n}\n_s(useBoardsGet, \"5whXNxmiNi1vFjTVEIbWv1oBmkA=\", false, function () {\n  return [useQuery, useMutation];\n});","map":{"version":3,"names":["useMutation","useQuery","editDMs","getBoards","useBoardsGet","multiboardId","_s","data","status","refetch","mutation","dto","onSuccess","boards","boardsStatus","boardsRefetch","boardsEditDMs","mutate","boardsEditDMsStatus"],"sources":["/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/src/features/inspectionsHistory/hooks/useBoardHandler.ts"],"sourcesContent":["import { useMutation, useQuery } from 'react-query'\nimport { editDMs, getBoards } from '../services/boardService'\nimport { TEditDMs } from '../types/editDMs'\n\nexport default function useBoardsGet(multiboardId: number) {\n  const {\n    data, \n    status, \n    refetch\n  } = useQuery(['boards', multiboardId], () => getBoards(multiboardId))\n\n  const mutation = useMutation(\n    async (\n      dto: TEditDMs\n    ) => await editDMs(dto), {\n      onSuccess: () => {\n        refetch()\n      }\n    })\n    \n  return {\n    boards: data,\n    boardsStatus: status,\n    boardsRefetch: refetch,\n    boardsEditDMs: mutation.mutate,\n    boardsEditDMsStatus: mutation.status\n  }\n}\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,aAAa;AACnD,SAASC,OAAO,EAAEC,SAAS,QAAQ,0BAA0B;AAG7D,eAAe,SAASC,YAAYA,CAACC,YAAoB,EAAE;EAAAC,EAAA;EACzD,MAAM;IACJC,IAAI;IACJC,MAAM;IACNC;EACF,CAAC,GAAGR,QAAQ,CAAC,CAAC,QAAQ,EAAEI,YAAY,CAAC,EAAE,MAAMF,SAAS,CAACE,YAAY,CAAC,CAAC;EAErE,MAAMK,QAAQ,GAAGV,WAAW,CAC1B,MACEW,GAAa,IACV,MAAMT,OAAO,CAACS,GAAG,CAAC,EAAE;IACvBC,SAAS,EAAEA,CAAA,KAAM;MACfH,OAAO,CAAC,CAAC;IACX;EACF,CAAC,CAAC;EAEJ,OAAO;IACLI,MAAM,EAAEN,IAAI;IACZO,YAAY,EAAEN,MAAM;IACpBO,aAAa,EAAEN,OAAO;IACtBO,aAAa,EAAEN,QAAQ,CAACO,MAAM;IAC9BC,mBAAmB,EAAER,QAAQ,CAACF;EAChC,CAAC;AACH;AAACF,EAAA,CAvBuBF,YAAY;EAAA,QAK9BH,QAAQ,EAEKD,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}