{"ast":null,"code":"const generateParams = settings => {\n  const params = new URLSearchParams();\n  // TODO: срочно переписать этот мусор, когда будет время\n  params.append('sector_id', settings.sectorId.toString());\n  params.append('side', settings.side);\n  params.append('specification_id', settings.specificationId.toString());\n  settings.coordinates.forEach(coordinate => params.append('coordinates', coordinate));\n  return params;\n};\nexport const getCoordinates = async (sector_id, side, specification_id) => {\n  const res = await fetch(\n  // eslint-disable-next-line @stylistic/max-len\n  `${process.env.REACT_APP_API_BASE_URL}/get_coordinates?sector_id=${sector_id}&side=${side}&specification=${specification_id}`);\n  return await res.json();\n};\nexport const updateCoordinates = async settings => {\n  const res = await fetch(\n  // eslint-disable-next-line @stylistic/max-len\n  `${process.env.REACT_APP_API_BASE_URL}/change_coordinates?${generateParams(settings)}`);\n};","map":{"version":3,"names":["generateParams","settings","params","URLSearchParams","append","sectorId","toString","side","specificationId","coordinates","forEach","coordinate","getCoordinates","sector_id","specification_id","res","fetch","process","env","REACT_APP_API_BASE_URL","json","updateCoordinates"],"sources":["/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/device_inspector_frontend/src/features/settings/services/coordinatesService.ts"],"sourcesContent":["import { TSettings } from '../types/settingsType'\n\nconst generateParams = (settings: TSettings) => {\n  const params = new URLSearchParams()\n  // TODO: срочно переписать этот мусор, когда будет время\n  params.append('sector_id', settings.sectorId.toString())\n  params.append('side', settings.side)\n  params.append('specification_id', settings.specificationId.toString())\n  settings.coordinates.forEach(coordinate => params.append(\n    'coordinates', coordinate\n  ))\n  return params\n}\n\nexport const getCoordinates = async (\n  sector_id: number, \n  side: string,\n  specification_id: number\n): Promise<TSettings> => {\n  const res = await fetch(\n    // eslint-disable-next-line @stylistic/max-len\n    `${process.env.REACT_APP_API_BASE_URL}/get_coordinates?sector_id=${sector_id}&side=${side}&specification=${specification_id}`\n  )\n  return await res.json()\n}\n\nexport const updateCoordinates = async (\n  settings: TSettings\n) => {\n  const res = await fetch(\n    // eslint-disable-next-line @stylistic/max-len\n    `${process.env.REACT_APP_API_BASE_URL}/change_coordinates?${generateParams(settings)}`)\n}"],"mappings":"AAEA,MAAMA,cAAc,GAAIC,QAAmB,IAAK;EAC9C,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;EACpC;EACAD,MAAM,CAACE,MAAM,CAAC,WAAW,EAAEH,QAAQ,CAACI,QAAQ,CAACC,QAAQ,CAAC,CAAC,CAAC;EACxDJ,MAAM,CAACE,MAAM,CAAC,MAAM,EAAEH,QAAQ,CAACM,IAAI,CAAC;EACpCL,MAAM,CAACE,MAAM,CAAC,kBAAkB,EAAEH,QAAQ,CAACO,eAAe,CAACF,QAAQ,CAAC,CAAC,CAAC;EACtEL,QAAQ,CAACQ,WAAW,CAACC,OAAO,CAACC,UAAU,IAAIT,MAAM,CAACE,MAAM,CACtD,aAAa,EAAEO,UACjB,CAAC,CAAC;EACF,OAAOT,MAAM;AACf,CAAC;AAED,OAAO,MAAMU,cAAc,GAAG,MAAAA,CAC5BC,SAAiB,EACjBN,IAAY,EACZO,gBAAwB,KACD;EACvB,MAAMC,GAAG,GAAG,MAAMC,KAAK;EACrB;EACC,GAAEC,OAAO,CAACC,GAAG,CAACC,sBAAuB,8BAA6BN,SAAU,SAAQN,IAAK,kBAAiBO,gBAAiB,EAC9H,CAAC;EACD,OAAO,MAAMC,GAAG,CAACK,IAAI,CAAC,CAAC;AACzB,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAG,MAC/BpB,QAAmB,IAChB;EACH,MAAMc,GAAG,GAAG,MAAMC,KAAK;EACrB;EACC,GAAEC,OAAO,CAACC,GAAG,CAACC,sBAAuB,uBAAsBnB,cAAc,CAACC,QAAQ,CAAE,EAAC,CAAC;AAC3F,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}