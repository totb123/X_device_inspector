{"ast":null,"code":"var _jsxFileName = \"/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/src/features/latestInspectionImage/context/latestInspectionImageContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { defaultImageContext } from '../types/latestInspectionImageContextType';\nimport { useLastImageGet } from '../hooks/useLastImageGet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ImageContext = /*#__PURE__*/React.createContext(defaultImageContext);\nconst ImageUpdateContext = /*#__PURE__*/React.createContext(_c = updateSector => {});\n_c2 = ImageUpdateContext;\nexport function useImage() {\n  _s();\n  return useContext(ImageContext);\n}\n_s(useImage, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function useUpdateImage() {\n  _s2();\n  return useContext(ImageUpdateContext);\n}\n_s2(useUpdateImage, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const LatestInspectionImageContextProvider = ({\n  children\n}) => {\n  _s3();\n  const [image, setImage] = useState(defaultImageContext);\n  const [sector, setSector] = useState();\n  const {\n    lastImageString,\n    updateSectorId,\n    lastImageStatus,\n    lastImageUpdatedAt\n  } = useLastImageGet(4000);\n  const updateSector = updatedSector => {\n    if (updatedSector === undefined) {\n      setSector(undefined);\n      return;\n    }\n    setSector(updatedSector);\n  };\n  useEffect(() => {\n    if (sector === undefined) setImage(defaultImageContext);else updateSectorId(sector.id);\n  }, [sector, setImage]);\n  useEffect(() => {\n    if (lastImageStatus === 'success') {\n      setImage({\n        latestImage: lastImageString,\n        selectedSector: sector\n      });\n    }\n  }, [lastImageStatus, lastImageString]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ImageContext.Provider, {\n      value: image,\n      children: /*#__PURE__*/_jsxDEV(ImageUpdateContext.Provider, {\n        value: updateSector,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s3(LatestInspectionImageContextProvider, \"nKbWjABPBAliFOeFg/qGIT7Oo4s=\", false, function () {\n  return [useLastImageGet];\n});\n_c3 = LatestInspectionImageContextProvider;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ImageUpdateContext$React.createContext\");\n$RefreshReg$(_c2, \"ImageUpdateContext\");\n$RefreshReg$(_c3, \"LatestInspectionImageContextProvider\");","map":{"version":3,"names":["React","useContext","useEffect","useState","defaultImageContext","useLastImageGet","jsxDEV","_jsxDEV","Fragment","_Fragment","ImageContext","createContext","ImageUpdateContext","_c","updateSector","_c2","useImage","_s","useUpdateImage","_s2","LatestInspectionImageContextProvider","children","_s3","image","setImage","sector","setSector","lastImageString","updateSectorId","lastImageStatus","lastImageUpdatedAt","updatedSector","undefined","id","latestImage","selectedSector","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/src/features/latestInspectionImage/context/latestInspectionImageContext.tsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport {\n  ImageContextType as ContextType, \n  defaultImageContext\n} from '../types/latestInspectionImageContextType'\nimport { useLastImageGet } from '../hooks/useLastImageGet'\nimport { TSector } from '../../../types/sectorType'\ntype ImageContextProps = {\n  children: React.ReactNode\n}\n\nconst ImageContext =\n React.createContext<ContextType>(defaultImageContext)\nconst ImageUpdateContext = React.createContext(\n  (updateSector: TSector | undefined) => {}\n)\nexport function useImage()  {\n  return useContext(ImageContext)\n}\n\nexport function useUpdateImage() {\n  return useContext(ImageUpdateContext)\n}\nexport const LatestInspectionImageContextProvider: \nReact.FC<ImageContextProps> = (\n  {children}\n) => {\n  const [image, setImage] = useState(defaultImageContext)\n\n  const [sector, setSector] = useState<TSector>()\n  const {\n    lastImageString, \n    updateSectorId, \n    lastImageStatus, \n    lastImageUpdatedAt\n  } =  useLastImageGet(4000) \n\n  const updateSector = (updatedSector: TSector | undefined) => {\n    if (updatedSector === undefined) {\n      setSector(undefined)\n      return\n    }\n    setSector(updatedSector)\n  }\n\n  useEffect(() => {\n    if(sector === undefined) setImage(defaultImageContext)\n    else updateSectorId(sector.id)\n  }, [sector, setImage])\n\n  useEffect(() => {\n    if (lastImageStatus === 'success'){\n      setImage({\n        latestImage: lastImageString,\n        selectedSector: sector\n      })\n    }\n  },[lastImageStatus, lastImageString])\n\n  return (\n    <>\n      <ImageContext.Provider value={image}>\n        <ImageUpdateContext.Provider value={updateSector}>\n          {children}\n        </ImageUpdateContext.Provider>\n      </ImageContext.Provider>\n    </>\n  )\n}"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,SAEEC,mBAAmB,QACd,2CAA2C;AAClD,SAASC,eAAe,QAAQ,0BAA0B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAM1D,MAAMC,YAAY,gBACjBV,KAAK,CAACW,aAAa,CAAcP,mBAAmB,CAAC;AACtD,MAAMQ,kBAAkB,gBAAGZ,KAAK,CAACW,aAAa,CAAAE,EAAA,GAC3CC,YAAiC,IAAK,CAAC,CAC1C,CAAC;AAAAC,GAAA,GAFKH,kBAAkB;AAGxB,OAAO,SAASI,QAAQA,CAAA,EAAI;EAAAC,EAAA;EAC1B,OAAOhB,UAAU,CAACS,YAAY,CAAC;AACjC;AAACO,EAAA,CAFeD,QAAQ;AAIxB,OAAO,SAASE,cAAcA,CAAA,EAAG;EAAAC,GAAA;EAC/B,OAAOlB,UAAU,CAACW,kBAAkB,CAAC;AACvC;AAACO,GAAA,CAFeD,cAAc;AAG9B,OAAO,MAAME,oCACc,GAAGA,CAC5B;EAACC;AAAQ,CAAC,KACP;EAAAC,GAAA;EACH,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAACC,mBAAmB,CAAC;EAEvD,MAAM,CAACqB,MAAM,EAAEC,SAAS,CAAC,GAAGvB,QAAQ,CAAU,CAAC;EAC/C,MAAM;IACJwB,eAAe;IACfC,cAAc;IACdC,eAAe;IACfC;EACF,CAAC,GAAIzB,eAAe,CAAC,IAAI,CAAC;EAE1B,MAAMS,YAAY,GAAIiB,aAAkC,IAAK;IAC3D,IAAIA,aAAa,KAAKC,SAAS,EAAE;MAC/BN,SAAS,CAACM,SAAS,CAAC;MACpB;IACF;IACAN,SAAS,CAACK,aAAa,CAAC;EAC1B,CAAC;EAED7B,SAAS,CAAC,MAAM;IACd,IAAGuB,MAAM,KAAKO,SAAS,EAAER,QAAQ,CAACpB,mBAAmB,CAAC,MACjDwB,cAAc,CAACH,MAAM,CAACQ,EAAE,CAAC;EAChC,CAAC,EAAE,CAACR,MAAM,EAAED,QAAQ,CAAC,CAAC;EAEtBtB,SAAS,CAAC,MAAM;IACd,IAAI2B,eAAe,KAAK,SAAS,EAAC;MAChCL,QAAQ,CAAC;QACPU,WAAW,EAAEP,eAAe;QAC5BQ,cAAc,EAAEV;MAClB,CAAC,CAAC;IACJ;EACF,CAAC,EAAC,CAACI,eAAe,EAAEF,eAAe,CAAC,CAAC;EAErC,oBACEpB,OAAA,CAAAE,SAAA;IAAAY,QAAA,eACEd,OAAA,CAACG,YAAY,CAAC0B,QAAQ;MAACC,KAAK,EAAEd,KAAM;MAAAF,QAAA,eAClCd,OAAA,CAACK,kBAAkB,CAACwB,QAAQ;QAACC,KAAK,EAAEvB,YAAa;QAAAO,QAAA,EAC9CA;MAAQ;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACkB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT;EAAC,gBACxB,CAAC;AAEP,CAAC;AAAAnB,GAAA,CA7CYF,oCACc;EAAA,QAWpBf,eAAe;AAAA;AAAAqC,GAAA,GAZTtB,oCACc;AAAA,IAAAP,EAAA,EAAAE,GAAA,EAAA2B,GAAA;AAAAC,YAAA,CAAA9B,EAAA;AAAA8B,YAAA,CAAA5B,GAAA;AAAA4B,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}