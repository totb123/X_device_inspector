{"ast":null,"code":"\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.changeConfirmLocale = changeConfirmLocale;\nexports.getConfirmLocale = getConfirmLocale;\nvar _en_US = _interopRequireDefault(require(\"../locale/en_US\"));\nlet runtimeLocale = Object.assign({}, _en_US.default.Modal);\nlet localeList = [];\nconst generateLocale = () => localeList.reduce((merged, locale) => Object.assign(Object.assign({}, merged), locale), _en_US.default.Modal);\nfunction changeConfirmLocale(newLocale) {\n  if (newLocale) {\n    const cloneLocale = Object.assign({}, newLocale);\n    localeList.push(cloneLocale);\n    runtimeLocale = generateLocale();\n    return () => {\n      localeList = localeList.filter(locale => locale !== cloneLocale);\n      runtimeLocale = generateLocale();\n    };\n  }\n  runtimeLocale = Object.assign({}, _en_US.default.Modal);\n}\nfunction getConfirmLocale() {\n  return runtimeLocale;\n}","map":{"version":3,"names":["_interopRequireDefault","require","default","Object","defineProperty","exports","value","changeConfirmLocale","getConfirmLocale","_en_US","runtimeLocale","assign","Modal","localeList","generateLocale","reduce","merged","locale","newLocale","cloneLocale","push","filter"],"sources":["/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/device_inspector_frontend/node_modules/antd/lib/modal/locale.js"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.changeConfirmLocale = changeConfirmLocale;\nexports.getConfirmLocale = getConfirmLocale;\nvar _en_US = _interopRequireDefault(require(\"../locale/en_US\"));\nlet runtimeLocale = Object.assign({}, _en_US.default.Modal);\nlet localeList = [];\nconst generateLocale = () => localeList.reduce((merged, locale) => Object.assign(Object.assign({}, merged), locale), _en_US.default.Modal);\nfunction changeConfirmLocale(newLocale) {\n  if (newLocale) {\n    const cloneLocale = Object.assign({}, newLocale);\n    localeList.push(cloneLocale);\n    runtimeLocale = generateLocale();\n    return () => {\n      localeList = localeList.filter(locale => locale !== cloneLocale);\n      runtimeLocale = generateLocale();\n    };\n  }\n  runtimeLocale = Object.assign({}, _en_US.default.Modal);\n}\nfunction getConfirmLocale() {\n  return runtimeLocale;\n}"],"mappings":"AAAA,YAAY;AACZ,YAAY;;AAEZ,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAA8C,CAAC,CAACC,OAAO;AAC5FC,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,mBAAmB,GAAGA,mBAAmB;AACjDF,OAAO,CAACG,gBAAgB,GAAGA,gBAAgB;AAC3C,IAAIC,MAAM,GAAGT,sBAAsB,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC;AAC/D,IAAIS,aAAa,GAAGP,MAAM,CAACQ,MAAM,CAAC,CAAC,CAAC,EAAEF,MAAM,CAACP,OAAO,CAACU,KAAK,CAAC;AAC3D,IAAIC,UAAU,GAAG,EAAE;AACnB,MAAMC,cAAc,GAAGA,CAAA,KAAMD,UAAU,CAACE,MAAM,CAAC,CAACC,MAAM,EAAEC,MAAM,KAAKd,MAAM,CAACQ,MAAM,CAACR,MAAM,CAACQ,MAAM,CAAC,CAAC,CAAC,EAAEK,MAAM,CAAC,EAAEC,MAAM,CAAC,EAAER,MAAM,CAACP,OAAO,CAACU,KAAK,CAAC;AAC1I,SAASL,mBAAmBA,CAACW,SAAS,EAAE;EACtC,IAAIA,SAAS,EAAE;IACb,MAAMC,WAAW,GAAGhB,MAAM,CAACQ,MAAM,CAAC,CAAC,CAAC,EAAEO,SAAS,CAAC;IAChDL,UAAU,CAACO,IAAI,CAACD,WAAW,CAAC;IAC5BT,aAAa,GAAGI,cAAc,CAAC,CAAC;IAChC,OAAO,MAAM;MACXD,UAAU,GAAGA,UAAU,CAACQ,MAAM,CAACJ,MAAM,IAAIA,MAAM,KAAKE,WAAW,CAAC;MAChET,aAAa,GAAGI,cAAc,CAAC,CAAC;IAClC,CAAC;EACH;EACAJ,aAAa,GAAGP,MAAM,CAACQ,MAAM,CAAC,CAAC,CAAC,EAAEF,MAAM,CAACP,OAAO,CAACU,KAAK,CAAC;AACzD;AACA,SAASJ,gBAAgBA,CAAA,EAAG;EAC1B,OAAOE,aAAa;AACtB"},"metadata":{},"sourceType":"script","externalDependencies":[]}