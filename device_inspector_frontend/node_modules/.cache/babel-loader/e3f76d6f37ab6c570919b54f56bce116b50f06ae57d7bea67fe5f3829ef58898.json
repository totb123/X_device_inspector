{"ast":null,"code":"var _jsxFileName = \"/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/src/features/inspectionsSearch/components/inspectionList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { List, Pagination, Spin, Typography } from 'antd';\nimport Paragraph from 'antd/es/typography/Paragraph';\nimport useInspectionsSearchGet from '../hooks/useInspectionGet';\nimport { InspectionCard } from '../../../components/inspectionCard';\nimport { useFilter } from '../context/searchFilterContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InspectionList = props => {\n  _s();\n  const updatePaginationValues = (page, size) => {\n    setCurrentPage(val => page);\n    setPageSize(val => size);\n  };\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(10);\n  const filter = useFilter();\n  const {\n    inspectionsData,\n    inspectionsStatus,\n    inspectionsRefetch,\n    inspectionsTotal\n  } = useInspectionsSearchGet(filter, currentPage, pageSize);\n  useEffect(() => {\n    inspectionsRefetch();\n    inspectionsTotal.refetch();\n    return () => {};\n  }, [filter, currentPage, pageSize, inspectionsTotal.refetch]);\n  useEffect(() => {\n    if (props.isChangeStatus) {\n      inspectionsRefetch();\n      inspectionsTotal.refetch();\n      props.setIsChangeStatus(false);\n    }\n  }, [props.isChangeStatus]);\n  if (inspectionsStatus == 'error') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Paragraph, {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: inspectionsData === null || inspectionsData === void 0 ? void 0 : inspectionsData.toString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: inspectionsTotal.status == 'success' ? /*#__PURE__*/_jsxDEV(Pagination\n      // defaultCurrent={1}  \n      , {\n        current: currentPage,\n        pageSize: pageSize,\n        onChange: updatePaginationValues,\n        total: inspectionsTotal.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), inspectionsStatus == 'loading' ? /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(List, {\n      children: inspectionsData.sort((a, b) => a.time.valueOf() - b.time.valueOf()).reverse().map(element => /*#__PURE__*/_jsxDEV(InspectionCard, {\n        highlightedDatamatrices: filter.datamatrices,\n        inspection: element,\n        handleModal: () => {\n          props.toggleModal(inspectionsData, element.id);\n        }\n      }, element.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(InspectionList, \"h8Dp3XhYjPAfB9WPf/4yJXI+HkA=\", false, function () {\n  return [useFilter, useInspectionsSearchGet];\n});\n_c = InspectionList;\nvar _c;\n$RefreshReg$(_c, \"InspectionList\");","map":{"version":3,"names":["React","useEffect","useState","List","Pagination","Spin","Typography","Paragraph","useInspectionsSearchGet","InspectionCard","useFilter","jsxDEV","_jsxDEV","InspectionList","props","_s","updatePaginationValues","page","size","setCurrentPage","val","setPageSize","currentPage","pageSize","filter","inspectionsData","inspectionsStatus","inspectionsRefetch","inspectionsTotal","refetch","isChangeStatus","setIsChangeStatus","children","fileName","_jsxFileName","lineNumber","columnNumber","toString","status","current","onChange","total","data","sort","a","b","time","valueOf","reverse","map","element","highlightedDatamatrices","datamatrices","inspection","handleModal","toggleModal","id","_c","$RefreshReg$"],"sources":["/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/src/features/inspectionsSearch/components/inspectionList.tsx"],"sourcesContent":["\nimport React, {Dispatch, SetStateAction, useEffect, useState} from 'react'\n\nimport {List, Pagination, Spin, Typography} from 'antd'\nimport Paragraph from 'antd/es/typography/Paragraph'\nimport useInspectionsSearchGet from '../hooks/useInspectionGet'\nimport { InspectionCard } from '../../../components/inspectionCard'\nimport { useFilter } from '../context/searchFilterContext'\n\n\ntype InspectionListProps = {\n  toggleModal: Function\n  isChangeStatus: boolean\n  setIsChangeStatus: Function\n}\n\nexport const InspectionList: React.FC<InspectionListProps> = props => {\n\n\n  const updatePaginationValues = (\n    page: number, size: number\n  ) => {\n    setCurrentPage(val => page)\n    setPageSize(val => size)\n  }\n  const [currentPage, setCurrentPage] = useState<number>(1)\n  const [pageSize, setPageSize] = useState(10)\n  const filter = useFilter()\n  const {\n    inspectionsData,\n    inspectionsStatus,\n    inspectionsRefetch,\n    inspectionsTotal\n  } = useInspectionsSearchGet(filter, currentPage, pageSize)\n  useEffect(() => {\n    (inspectionsRefetch as Function)()\n    inspectionsTotal.refetch()\n    return () => {\n    }\n  }, [filter, currentPage, pageSize, inspectionsTotal.refetch])\n\n  useEffect(() => {\n    if (props.isChangeStatus) {\n      (inspectionsRefetch as Function)()\n      inspectionsTotal.refetch()\n      props.setIsChangeStatus(false)\n    }\n  }, [props.isChangeStatus])\n\n  if (inspectionsStatus == 'error') {\n    return <div>\n      <Paragraph>\n        Error\n      </Paragraph>\n      <Typography>\n        {inspectionsData?.toString()}\n      </Typography>\n    </div>\n  }\n  \n  return (\n    <div>\n      <div>\n        {\n          inspectionsTotal.status == 'success'\n            ? <Pagination \n              // defaultCurrent={1}  \n              current={currentPage}\n              pageSize={pageSize}\n              onChange={updatePaginationValues}\n              total={inspectionsTotal.data}\n            />\n            : <Spin/>\n        }\n      </div>\n      {\n        inspectionsStatus == 'loading'\n          ? <Spin/>\n          : <List>\n            {\n              inspectionsData!.sort(\n                (a,b) => a.time.valueOf() - b.time.valueOf()\n              ).reverse().map(element =>\n                <InspectionCard\n                  key={element.id}\n                  highlightedDatamatrices={filter.datamatrices}\n                  inspection={element}\n                  handleModal={() => {\n                    props.toggleModal(\n                      inspectionsData!,\n                      element.id)\n                  }}\n                />)\n            }\n          </List>\n      }\n    </div>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}