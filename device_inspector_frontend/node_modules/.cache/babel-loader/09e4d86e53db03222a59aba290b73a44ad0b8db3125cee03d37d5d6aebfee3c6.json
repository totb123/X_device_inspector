{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMutation, useQuery } from 'react-query';\nimport { getComments, pushComment } from '../../../services/commentService';\nexport default function useCommentsHandler(inspectionId) {\n  _s();\n  const {\n    data,\n    status,\n    refetch\n  } = useQuery(['comments', inspectionId], {\n    queryFn: () => getComments(inspectionId)\n  });\n  const mutation = useMutation(async comment => await pushComment(inspectionId, comment), {\n    onSuccess: () => {\n      refetch();\n    }\n  });\n  return {\n    comments: data,\n    commentsStatus: status,\n    commentsRefetch: refetch,\n    addComment: mutation.mutate,\n    addCommentStatus: mutation.status\n  };\n}\n_s(useCommentsHandler, \"5whXNxmiNi1vFjTVEIbWv1oBmkA=\", false, function () {\n  return [useQuery, useMutation];\n});","map":{"version":3,"names":["useMutation","useQuery","getComments","pushComment","useCommentsHandler","inspectionId","_s","data","status","refetch","queryFn","mutation","comment","onSuccess","comments","commentsStatus","commentsRefetch","addComment","mutate","addCommentStatus"],"sources":["/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/src/features/inspectionsHistory/hooks/useCommentsHandler.ts"],"sourcesContent":["import { useMutation, useQuery } from 'react-query'\n\nimport { getComments, pushComment } from '../../../services/commentService'\nimport { TComment } from '../../../types/commentType'\n\nexport default function useCommentsHandler(inspectionId: number) {\n  const {\n    data, \n    status, \n    refetch\n  } = useQuery(\n    ['comments',inspectionId], \n    {\n      queryFn: () =>  getComments(inspectionId),\n    }\n  )\n\n  const mutation = useMutation(\n    async (\n      comment: TComment\n    ) => await pushComment(inspectionId, comment), {\n      onSuccess: () => {\n        refetch()\n      }\n    })\n\n  return {\n    comments: data,\n    commentsStatus: status,\n    commentsRefetch: refetch,\n    addComment: mutation.mutate, \n    addCommentStatus: mutation.status\n  }\n}"],"mappings":";AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,aAAa;AAEnD,SAASC,WAAW,EAAEC,WAAW,QAAQ,kCAAkC;AAG3E,eAAe,SAASC,kBAAkBA,CAACC,YAAoB,EAAE;EAAAC,EAAA;EAC/D,MAAM;IACJC,IAAI;IACJC,MAAM;IACNC;EACF,CAAC,GAAGR,QAAQ,CACV,CAAC,UAAU,EAACI,YAAY,CAAC,EACzB;IACEK,OAAO,EAAEA,CAAA,KAAOR,WAAW,CAACG,YAAY;EAC1C,CACF,CAAC;EAED,MAAMM,QAAQ,GAAGX,WAAW,CAC1B,MACEY,OAAiB,IACd,MAAMT,WAAW,CAACE,YAAY,EAAEO,OAAO,CAAC,EAAE;IAC7CC,SAAS,EAAEA,CAAA,KAAM;MACfJ,OAAO,CAAC,CAAC;IACX;EACF,CAAC,CAAC;EAEJ,OAAO;IACLK,QAAQ,EAAEP,IAAI;IACdQ,cAAc,EAAEP,MAAM;IACtBQ,eAAe,EAAEP,OAAO;IACxBQ,UAAU,EAAEN,QAAQ,CAACO,MAAM;IAC3BC,gBAAgB,EAAER,QAAQ,CAACH;EAC7B,CAAC;AACH;AAACF,EAAA,CA5BuBF,kBAAkB;EAAA,QAKpCH,QAAQ,EAOKD,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}