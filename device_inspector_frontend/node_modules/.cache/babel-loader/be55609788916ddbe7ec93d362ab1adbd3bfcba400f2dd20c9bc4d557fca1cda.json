{"ast":null,"code":"var _jsxFileName = \"/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/src/features/latestInspectionImage/components/sectorPicker.tsx\",\n  _s = $RefreshSig$();\nimport { Button, Select, Space, Spin } from 'antd';\nimport React from 'react';\nimport { useSectorGet } from '../../../hooks/useSectorGet';\nimport mapSectorIds from '../../../utils/sectorMapper';\nimport { useUpdateImage } from '../context/latestInspectionImageContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SectorPicker = () => {\n  _s();\n  const {\n    sectors,\n    sectorsStatus\n  } = useSectorGet();\n  const updateImageData = useUpdateImage();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Space, {\n      children: [sectorsStatus == 'success' ? /*#__PURE__*/_jsxDEV(Select, {\n        options: mapSectorIds(sectors)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: sectorsStatus !== 'success',\n        children: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(SectorPicker, \"aOXbTlS/+giAySy0BzWuIYJOCY0=\", false, function () {\n  return [useSectorGet, useUpdateImage];\n});\n_c = SectorPicker;\nvar _c;\n$RefreshReg$(_c, \"SectorPicker\");","map":{"version":3,"names":["Button","Select","Space","Spin","React","useSectorGet","mapSectorIds","useUpdateImage","jsxDEV","_jsxDEV","Fragment","_Fragment","SectorPicker","_s","sectors","sectorsStatus","updateImageData","children","options","fileName","_jsxFileName","lineNumber","columnNumber","disabled","_c","$RefreshReg$"],"sources":["/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/src/features/latestInspectionImage/components/sectorPicker.tsx"],"sourcesContent":["import { Button, Select, Space, Spin } from 'antd'\nimport React from 'react'\nimport { useSectorGet } from '../../../hooks/useSectorGet'\nimport mapSectorIds from '../../../utils/sectorMapper'\nimport { TSector } from '../../../types/sectorType'\nimport { useUpdateImage } from '../context/latestInspectionImageContext'\nexport const SectorPicker: React.FC = () => {\n  const {sectors, sectorsStatus} = useSectorGet()\n  const updateImageData = useUpdateImage()\n  return <>\n    <Space>\n      {sectorsStatus == 'success' \n        ? <Select\n          options={mapSectorIds(sectors as TSector[])}\n        />\n        : <Spin />\n      }\n      <Button disabled={sectorsStatus !== 'success'}>\n        Подтвердить\n      </Button>\n    </Space>\n  </>\n}"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,IAAI,QAAQ,MAAM;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,6BAA6B;AAC1D,OAAOC,YAAY,MAAM,6BAA6B;AAEtD,SAASC,cAAc,QAAQ,yCAAyC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACxE,OAAO,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1C,MAAM;IAACC,OAAO;IAAEC;EAAa,CAAC,GAAGV,YAAY,CAAC,CAAC;EAC/C,MAAMW,eAAe,GAAGT,cAAc,CAAC,CAAC;EACxC,oBAAOE,OAAA,CAAAE,SAAA;IAAAM,QAAA,eACLR,OAAA,CAACP,KAAK;MAAAe,QAAA,GACHF,aAAa,IAAI,SAAS,gBACvBN,OAAA,CAACR,MAAM;QACPiB,OAAO,EAAEZ,YAAY,CAACQ,OAAoB;MAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,gBACAb,OAAA,CAACN,IAAI;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEZb,OAAA,CAACT,MAAM;QAACuB,QAAQ,EAAER,aAAa,KAAK,SAAU;QAAAE,QAAA,EAAC;MAE/C;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC,gBACR,CAAC;AACL,CAAC;AAAAT,EAAA,CAhBYD,YAAsB;EAAA,QACAP,YAAY,EACrBE,cAAc;AAAA;AAAAiB,EAAA,GAF3BZ,YAAsB;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}