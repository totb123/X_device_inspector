{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n/* global Reflect, Promise */\n\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n  };\n  return extendStatics(d, b);\n};\nfunction __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() {\n    this.constructor = d;\n  }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nfunction __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\nfunction __spreadArray(to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n  return to;\n}\nvar objectToClassName = function (obj) {\n  return Object.keys(obj).filter(function (key) {\n    return obj[key];\n  }).join(' ');\n};\nvar arePointsEqual = function (p1, p2) {\n  return p1.x === p2.x && p1.y === p2.y;\n};\nvar arePointListEqual = function (arr1, arr2) {\n  if (!arr1 && arr2 || arr1 && !arr2 || arr1.length !== arr2.length) return false;\n  return arr1.every(function (point, i) {\n    return arePointsEqual(point, arr2[i]);\n  });\n};\nvar roundPointCoordinates = function (_a, p) {\n  var x = _a.x,\n    y = _a.y;\n  if (p === void 0) {\n    p = 1;\n  }\n  return {\n    x: Math.round((x + Number.EPSILON) * p) / p,\n    y: Math.round((y + Number.EPSILON) * p) / p\n  };\n};\nvar findPointByPosition = function (points, position, r) {\n  if (r === void 0) {\n    r = 0;\n  }\n  var index = points.findIndex(function (point) {\n    return Math.max(Math.abs(point.x - position.x), Math.abs(point.y - position.y)) <= r;\n  });\n  return {\n    point: __assign({}, points[index] || {\n      x: NaN,\n      y: NaN\n    }),\n    index: index\n  };\n};\nvar getDistance = function (p1, p2) {\n  return Math.hypot(p2.x - p1.x, p2.y - p1.y);\n};\nvar getAngle = function (p1, p2) {\n  return Math.atan2(p2.y - p1.y, p2.x - p1.x);\n};\nvar approximateToAnAngleMultiplicity = function (startPoint, endPoint, minAngle) {\n  var r = getDistance(startPoint, endPoint);\n  var angle = getAngle(startPoint, endPoint);\n  var newAngle = Math.round(angle / minAngle) * minAngle;\n  return {\n    x: startPoint.x + r * Math.cos(newAngle),\n    y: startPoint.y + r * Math.sin(newAngle)\n  };\n};\nvar approximateToAngles = function (startPoint, endPoint, angles) {\n  var r = getDistance(startPoint, endPoint);\n  var angle = getAngle(startPoint, endPoint);\n  var nearestAngle = angles.reduce(function (prev, now) {\n    return Math.abs(now - angle) < Math.abs(prev - angle) ? now : prev;\n  }, Infinity);\n  if (nearestAngle !== Infinity) {\n    endPoint.x = startPoint.x + r * Math.cos(nearestAngle);\n    endPoint.y = startPoint.y + r * Math.sin(nearestAngle);\n  }\n  return endPoint;\n};\nvar calculateAnglesBeetwenPoints = function (points) {\n  var angles = [];\n  for (var i = 1; i < points.length; i++) {\n    var alpha = Math.atan2(points[i].y - points[i - 1].y, points[i].x - points[i - 1].x);\n    var alpha2 = alpha + Math.PI;\n    angles.push(alpha, alpha2 > Math.PI ? alpha2 - 2 * Math.PI : alpha2);\n  }\n  return angles.filter(function (val, idx, arr) {\n    return arr.indexOf(val) === idx;\n  });\n};\nfunction getClippedImageCanvas(src, path, callback, crop) {\n  if (crop === void 0) {\n    crop = true;\n  }\n  var image = new Image();\n  image.crossOrigin = 'Anonymous';\n  var canvas = document.createElement('canvas');\n  var ctx = canvas.getContext('2d');\n  if (!ctx) {\n    return callback(new Error('CTX is null'), canvas);\n  }\n  image.onerror = function () {\n    callback(new Error('Failed to load image'), canvas);\n  };\n  image.onload = function () {\n    try {\n      canvas.width = image.naturalWidth + 2;\n      canvas.height = image.naturalHeight + 2;\n      ctx.drawImage(image, 0, 0);\n      if (path.length < 3) {\n        callback(null, canvas);\n        return;\n      }\n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(canvas.width, 0);\n      ctx.lineTo(canvas.width, canvas.height);\n      ctx.lineTo(0, canvas.height);\n      ctx.lineTo(0, 0);\n      ctx.lineTo(path[0].x + 1, path[0].y + 1);\n      path.slice(1).forEach(function (_a) {\n        var x = _a.x,\n          y = _a.y;\n        return ctx.lineTo(x + 1, y + 1);\n      });\n      ctx.lineTo(path[0].x + 1, path[0].y + 1);\n      ctx.lineTo(0, 0);\n      ctx.closePath();\n      ctx.clip('evenodd');\n      ctx.globalCompositeOperation = 'destination-out';\n      ctx.fill();\n      if (crop) {\n        var xAxis = path.map(function (_a) {\n          var x = _a.x;\n          return x + 1;\n        });\n        var yAxis = path.map(function (_a) {\n          var y = _a.y;\n          return y + 1;\n        });\n        var _a = [Math.min.apply(null, xAxis), Math.min.apply(null, yAxis)],\n          minX = _a[0],\n          minY = _a[1];\n        var _b = [Math.max.apply(null, xAxis), Math.max.apply(null, yAxis)],\n          maxX = _b[0],\n          maxY = _b[1];\n        var _c = [maxX - minX, maxY - minY],\n          width = _c[0],\n          height = _c[1];\n        var imageData = ctx.getImageData(minX, minY, width, height);\n        canvas.width = width;\n        canvas.height = height;\n        ctx.putImageData(imageData, 0, 0);\n      }\n      callback(null, canvas);\n    } catch (err) {\n      callback(err instanceof Error ? err : new Error(String(err)), canvas);\n    }\n  };\n  image.src = src;\n}\nvar SVGHelper = /** @class */function () {\n  function SVGHelper(getSvgElement) {\n    this.getSvgElement = getSvgElement;\n  }\n  SVGHelper.prototype.getSvg = function () {\n    var svg = this.getSvgElement();\n    if (!svg) throw new Error('SVG is null');\n    return svg;\n  };\n  SVGHelper.prototype.getCTM = function () {\n    var svg = this.getSvg();\n    var ctm = svg.getCTM();\n    if (ctm === null) {\n      // https://www.w3.org/TR/SVGTiny12/coords.html#TransformMatrixDefined\n      var svgChild = svg.querySelector('rect[visibility=\"hidden\"]');\n      ctm = svgChild.getCTM();\n    }\n    if (!ctm) throw new Error('CTM is null');\n    return ctm;\n  };\n  SVGHelper.prototype.getViewboxSize = function () {\n    return this.getSvg().viewBox.baseVal;\n  };\n  SVGHelper.prototype.getRealSize = function () {\n    var svg = this.getSvg();\n    // Firefox have problems with SVGSVGElement.width.baseVal.value\n    return {\n      width: svg.clientWidth,\n      height: svg.clientHeight\n    };\n  };\n  SVGHelper.prototype.getViewboxOffset = function () {\n    var svg = this.getSvg();\n    var _a = this.getRealSize(),\n      rWidth = _a.width,\n      rHeight = _a.height;\n    var _b = this.getViewboxSize(),\n      vWidth = _b.width,\n      vHeight = _b.height;\n    var point = Object.assign(svg.createSVGPoint(), {\n      x: rWidth,\n      y: rHeight\n    });\n    var ctm = this.getCTM();\n    var _c = point.matrixTransform(ctm.inverse()),\n      x = _c.x,\n      y = _c.y;\n    // only for preserveAspectRatio=\"xMidYMid meet\" !!!\n    return {\n      x: x - vWidth,\n      y: y - vHeight\n    };\n  };\n  SVGHelper.prototype.convertViewboxPointsToReal = function (points) {\n    var svg = this.getSvg();\n    var ctm = this.getCTM();\n    return points.map(function (_a) {\n      var x = _a.x,\n        y = _a.y;\n      var p = Object.assign(svg.createSVGPoint(), {\n        x: x,\n        y: y\n      }).matrixTransform(ctm);\n      return roundPointCoordinates(p);\n    });\n  };\n  SVGHelper.prototype.convertRealPointsToViewbox = function (points) {\n    var svg = this.getSvg();\n    var ctm = this.getCTM().inverse();\n    return points.map(function (_a) {\n      var x = _a.x,\n        y = _a.y;\n      var p = Object.assign(svg.createSVGPoint(), {\n        x: x,\n        y: y\n      }).matrixTransform(ctm);\n      return roundPointCoordinates(p, 1e3);\n    });\n  };\n  SVGHelper.prototype.getBorderPoints = function (repeatFirst) {\n    if (repeatFirst === void 0) {\n      repeatFirst = true;\n    }\n    var _a = this.getViewboxSize(),\n      width = _a.width,\n      height = _a.height;\n    var _b = this.getViewboxOffset(),\n      offsetX = _b.x,\n      offsetY = _b.y;\n    var arr = [{\n      x: -offsetX,\n      y: -offsetY\n    }, {\n      x: width + offsetX,\n      y: -offsetY\n    }, {\n      x: width + offsetX,\n      y: height + offsetY\n    }, {\n      x: -offsetX,\n      y: height + offsetY\n    }];\n    if (repeatFirst) {\n      arr.push({\n        x: -offsetX,\n        y: -offsetY\n      });\n    }\n    return arr;\n  };\n  SVGHelper.prototype.isAboveTheBorder = function (_a) {\n    var x = _a.x,\n      y = _a.y;\n    var _b = this.getViewboxSize(),\n      width = _b.width,\n      height = _b.height;\n    var _c = this.getViewboxOffset(),\n      offsetX = _c.x,\n      offsetY = _c.y;\n    return x < -offsetX || x > width + offsetX || y < -offsetY || y > height + offsetY;\n  };\n  SVGHelper.prototype.getMouseCoordinates = function (event) {\n    var e = event;\n    var _a = e.changedTouches && e.touches ? e.changedTouches[0] || e.touches[0] : e,\n      clientX = _a.clientX,\n      clientY = _a.clientY;\n    var svg = this.getSvg();\n    var ctm = svg.getScreenCTM();\n    if (!ctm) throw new Error('ScreenCTM is null');\n    var point = svg.createSVGPoint();\n    point.x = clientX;\n    point.y = clientY;\n    var _b = point.matrixTransform(ctm.inverse()),\n      x = _b.x,\n      y = _b.y;\n    return {\n      x: x,\n      y: y\n    };\n  };\n  return SVGHelper;\n}();\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nvar withDraggable = function (Component) {\n  return /** @class */function (_super) {\n    __extends(DraggableHOC, _super);\n    function DraggableHOC() {\n      var _this = _super !== null && _super.apply(this, arguments) || this;\n      _this.ref = React.createRef();\n      _this.svg = new SVGHelper(function () {\n        var _a, _b;\n        return (_b = (_a = _this.ref) === null || _a === void 0 ? void 0 : _a.current) === null || _b === void 0 ? void 0 : _b.ownerSVGElement;\n      });\n      _this.dragLastPosition = null;\n      _this.wasMoved = false;\n      _this.onMouseTouchDown = function (e) {\n        if (e.target === _this.ref.current && _this.props.draggable) {\n          e.stopImmediatePropagation();\n          e.preventDefault();\n          var target = e.target;\n          _this.dragLastPosition = _this.getMousePosition(e);\n          if (target.ownerSVGElement) {\n            target.ownerSVGElement.focus({\n              preventScroll: true\n            });\n          }\n        }\n      };\n      _this.onMouseTouchMove = function (e) {\n        if (_this.dragLastPosition) {\n          e.stopImmediatePropagation();\n          e.preventDefault();\n          var _a = _this.getMousePosition(e),\n            x = _a.x,\n            y = _a.y;\n          var dx = x - _this.dragLastPosition.x;\n          var dy = y - _this.dragLastPosition.y;\n          if (!_this.wasMoved && _this.props.onDragStart) {\n            _this.props.onDragStart({\n              x: _this.dragLastPosition.x,\n              y: _this.dragLastPosition.y,\n              dx: dx,\n              dy: dy\n            });\n          }\n          if (_this.props.onDrag) {\n            _this.props.onDrag({\n              dx: dx,\n              dy: dy\n            });\n          }\n          _this.dragLastPosition = {\n            x: x,\n            y: y\n          };\n          _this.wasMoved = true;\n        }\n      };\n      _this.onMouseTouchUp = function (e) {\n        if (_this.dragLastPosition && _this.wasMoved) {\n          e.stopImmediatePropagation();\n          e.preventDefault();\n          if (e instanceof MouseEvent || !e.touches) {\n            window.addEventListener('click', function (e) {\n              return e.stopPropagation();\n            }, {\n              capture: true,\n              once: true\n            });\n          }\n          if (_this.props.onDragEnd) {\n            _this.props.onDragEnd({\n              x: _this.dragLastPosition.x,\n              y: _this.dragLastPosition.y\n            });\n          }\n        }\n        _this.dragLastPosition = null;\n        _this.wasMoved = false;\n      };\n      return _this;\n    }\n    DraggableHOC.prototype.render = function () {\n      var _a = this.props,\n        draggable = _a.draggable;\n      _a.onDrag;\n      _a.onDragStart;\n      _a.onDragEnd;\n      var rest = __rest(_a, [\"draggable\", \"onDrag\", \"onDragStart\", \"onDragEnd\"]);\n      return React.createElement(Component, __assign({\n        ref: this.ref\n      }, rest, {\n        draggable: draggable\n      }));\n    };\n    DraggableHOC.prototype.componentDidUpdate = function (prevProps) {\n      if (prevProps.draggable && !this.props.draggable) {\n        // cleanup after props.draggable changed to false\n        if (this.dragLastPosition && this.wasMoved) {\n          if (this.props.onDragEnd) {\n            this.props.onDragEnd({\n              x: this.dragLastPosition.x,\n              y: this.dragLastPosition.y\n            });\n          }\n          this.dragLastPosition = null;\n          this.wasMoved = false;\n        }\n      }\n    };\n    DraggableHOC.prototype.componentDidMount = function () {\n      window.addEventListener('mousedown', this.onMouseTouchDown, true);\n      window.addEventListener('mousemove', this.onMouseTouchMove, true);\n      window.addEventListener('mouseup', this.onMouseTouchUp, true);\n      window.addEventListener('touchstart', this.onMouseTouchDown, true);\n      window.addEventListener('touchmove', this.onMouseTouchMove, true);\n      window.addEventListener('touchend', this.onMouseTouchUp, true);\n    };\n    DraggableHOC.prototype.componentWillUnmount = function () {\n      window.removeEventListener('mousedown', this.onMouseTouchDown);\n      window.removeEventListener('mousemove', this.onMouseTouchMove);\n      window.removeEventListener('mouseup', this.onMouseTouchUp);\n      window.removeEventListener('touchstart', this.onMouseTouchDown);\n      window.removeEventListener('touchmove', this.onMouseTouchMove);\n      window.removeEventListener('touchend', this.onMouseTouchUp);\n    };\n    DraggableHOC.prototype.getMousePosition = function (ev) {\n      var e = ev;\n      return this.svg.getMouseCoordinates(e);\n    };\n    return DraggableHOC;\n  }(React.Component);\n};\nvar SVGPolyline = withDraggable(React.forwardRef(function SVGPolyline(_a, ref) {\n  var path = _a.path,\n    animate = _a.animate,\n    draggable = _a.draggable;\n  return React.createElement(\"polyline\", {\n    ref: ref,\n    style: {\n      cursor: draggable ? 'move' : ''\n    },\n    points: path.map(function (_a) {\n      var x = _a.x,\n        y = _a.y;\n      return x + \",\" + y;\n    }).join(' '),\n    fill: \"rgba(0,0,0,0)\",\n    stroke: \"white\",\n    strokeWidth: \"1.5\",\n    shapeRendering: \"geometricPrecision\",\n    strokeDasharray: \"3\",\n    strokeDashoffset: \"0\",\n    vectorEffect: \"non-scaling-stroke\"\n  }, animate && React.createElement(\"animate\", {\n    attributeName: \"stroke-dashoffset\",\n    values: \"0;1000;0\",\n    dur: \"100s\",\n    repeatCount: \"indefinite\"\n  }));\n}));\nfunction SVGPolygon(_a) {\n  var path = _a.path;\n  return React.createElement(\"polygon\", {\n    style: {\n      pointerEvents: 'none',\n      transform: 'translate(-1px, -1px)'\n    },\n    points: path.map(function (_a) {\n      var x = _a.x,\n        y = _a.y;\n      return x + \",\" + y;\n    }).join(' '),\n    fill: \"rgba(0, 0, 0, 0.5)\",\n    fillRule: \"evenodd\",\n    stroke: \"null\",\n    shapeRendering: \"geometricPrecision\"\n  });\n}\nvar SVGPoint = withDraggable(React.forwardRef(function SVGPoint(_a, ref) {\n  var x = _a.x,\n    y = _a.y,\n    onClickTouchEvent = _a.onClickTouchEvent,\n    draggable = _a.draggable,\n    style = _a.style;\n  var _b = style.cursor,\n    cursor = _b === void 0 ? draggable ? 'move' : 'default' : _b,\n    rest = __rest(style, [\"cursor\"]);\n  return React.createElement(\"rect\", {\n    style: __assign({\n      cursor: cursor\n    }, rest),\n    ref: ref,\n    x: x - 10,\n    y: y - 10,\n    onClick: function (e) {\n      e.stopPropagation();\n      e.preventDefault();\n      onClickTouchEvent(e);\n    },\n    onTouchEnd: function (e) {\n      e.stopPropagation();\n      e.preventDefault();\n      onClickTouchEvent(e);\n    },\n    width: \"20px\",\n    height: \"20\",\n    fill: \"rgba(0, 0, 0, 0)\",\n    stroke: \"white\",\n    strokeWidth: \"1.25\",\n    vectorEffect: \"non-scaling-stroke\"\n  });\n}));\nvar pathActions;\n(function (pathActions) {\n  pathActions[\"ADD\"] = \"ADD\";\n  pathActions[\"DELETE\"] = \"DELETE\";\n  pathActions[\"MODIFY\"] = \"MODIFY\";\n  pathActions[\"MOVE\"] = \"MOVE\";\n  pathActions[\"RESET\"] = \"RESET\";\n  pathActions[\"CHANGE\"] = \"CHANGE\";\n})(pathActions || (pathActions = {}));\nfunction pathReducer(state, action) {\n  var length = state.points.length;\n  switch (action.type) {\n    case pathActions.ADD:\n      {\n        if (state.closed) return [state, false];\n        if (length > 0 && arePointsEqual(state.points[length - 1], action.payload) || length > 1 && arePointsEqual(state.points[length - 2], action.payload)) {\n          return [state, false];\n        }\n        var needToBeClosed = length > 2 && arePointsEqual(state.points[0], action.payload);\n        if (needToBeClosed) return [{\n          points: __spreadArray([], state.points),\n          closed: true\n        }, true];\n        return [{\n          points: __spreadArray(__spreadArray([], state.points, true), [action.payload]),\n          closed: false\n        }, true];\n      }\n    case pathActions.DELETE:\n      {\n        return [{\n          points: __spreadArray([], state.points.filter(function (_, idx) {\n            return action.payload !== idx;\n          })),\n          closed: length > 4 && state.closed\n        }, true];\n      }\n    case pathActions.MODIFY:\n      {\n        var _a = state.points[action.payload.index],\n          sx_1 = _a.x,\n          sy_1 = _a.y;\n        var newPoints = state.points.map(function (_a) {\n          var x = _a.x,\n            y = _a.y;\n          if (x === sx_1 && y === sy_1) {\n            return {\n              x: action.payload.x,\n              y: action.payload.y\n            };\n          }\n          return {\n            x: x,\n            y: y\n          };\n        });\n        return [{\n          points: newPoints,\n          closed: state.closed\n        }, !!(action.payload.x || action.payload.y)];\n      }\n    case pathActions.MOVE:\n      {\n        return [{\n          points: state.points.map(function (_a) {\n            var x = _a.x,\n              y = _a.y;\n            return {\n              x: x + action.payload.x,\n              y: y + action.payload.y\n            };\n          }),\n          closed: state.closed\n        }, !!(action.payload.x || action.payload.y)];\n      }\n    case pathActions.CHANGE:\n      {\n        var wasModified = !arePointListEqual(action.payload, state.points);\n        return [{\n          points: action.payload,\n          closed: wasModified ? action.payload.length > 2 : state.closed\n        }, wasModified];\n      }\n    case pathActions.RESET:\n      return [{\n        points: [],\n        closed: false\n      }, !!state.points.length];\n    default:\n      return [state, false];\n  }\n}\nvar ReactLasso = /** @class */function (_super) {\n  __extends(ReactLasso, _super);\n  function ReactLasso(props) {\n    var _this = _super.call(this, props) || this;\n    _this.imageRef = React.createRef();\n    _this.svgRef = React.createRef();\n    _this.svg = new SVGHelper(function () {\n      var _a;\n      return (_a = _this.svgRef) === null || _a === void 0 ? void 0 : _a.current;\n    });\n    _this.angles = [];\n    _this.path = {\n      points: [],\n      closed: false\n    };\n    _this.lastEmittedPoints = [];\n    _this.lastUpdatedPoints = [];\n    _this.imgError = false;\n    _this.setPathFromPropsOnMediaLoad = true;\n    _this.hidePointer = function () {\n      var lastPoint = _this.path.points[_this.path.points.length - 1] || {\n        x: 0,\n        y: 0\n      };\n      _this.setPointer(__assign({}, lastPoint), true); // tricky way to hide pointer line\n    };\n    // Events\n    _this.onShapeDrag = function (_a) {\n      var dx = _a.dx,\n        dy = _a.dy;\n      var newPath = _this.path.points.map(function (_a) {\n        var x = _a.x,\n          y = _a.y;\n        return {\n          x: x + dx,\n          y: y + dy\n        };\n      });\n      if (!newPath.some(function (point) {\n        return _this.svg.isAboveTheBorder(point);\n      })) {\n        _this.dispatchPathAction({\n          type: pathActions.MOVE,\n          payload: {\n            x: dx,\n            y: dy\n          }\n        });\n      }\n    };\n    _this.onPointDrag = function (idx, _a) {\n      var dx = _a.dx,\n        dy = _a.dy;\n      var point = __assign({}, _this.path.points[idx]);\n      point.x += dx;\n      point.y += dy;\n      if (!_this.svg.isAboveTheBorder(point)) {\n        _this.dispatchPathAction({\n          type: pathActions.MODIFY,\n          payload: __assign(__assign({}, point), {\n            index: idx\n          })\n        });\n      }\n    };\n    _this.onPointClick = function (idx) {\n      if (_this.isLoaded() && !_this.props.disabled && !_this.path.closed) {\n        _this.dispatchPathAction({\n          type: pathActions.ADD,\n          payload: _this.path.points[idx]\n        });\n      }\n    };\n    _this.onDragEnd = function () {\n      _this.checkIfPathUpdated(false);\n    };\n    _this.onMediaLoaded = function (e) {\n      if (_this.setPathFromPropsOnMediaLoad) {\n        _this.setPathStateFromProps();\n        _this.setPathFromPropsOnMediaLoad = false;\n      }\n      _this.imgError = false;\n      _this.props.onImageLoad(e);\n    };\n    _this.onMediaError = function (e) {\n      _this.dispatchPathAction({\n        type: pathActions.RESET\n      });\n      _this.imgError = true;\n      _this.props.onImageError(e);\n    };\n    _this.onClickTouchEvent = function (e) {\n      if (_this.isLoaded() && !_this.props.disabled) {\n        if (_this.path.closed) {\n          if (e.target === _this.svgRef.current) {\n            _this.dispatchPathAction({\n              type: pathActions.RESET\n            });\n          }\n          return;\n        }\n        var pointer = _this.getMousePosition(e)[0];\n        if (!_this.svg.isAboveTheBorder(pointer)) {\n          _this.dispatchPathAction({\n            type: pathActions.ADD,\n            payload: roundPointCoordinates(pointer, 1e3),\n            pointer: pointer\n          });\n        } else {\n          _this.hidePointer();\n        }\n      }\n    };\n    _this.onClick = function (e) {\n      _this.onClickTouchEvent(e);\n    };\n    _this.onTouchEnd = function (e) {\n      if (e.cancelable) {\n        e.preventDefault();\n        _this.onClickTouchEvent(e);\n      }\n      _this.hidePointer();\n    };\n    _this.onMouseTouchMove = function (e) {\n      if (_this.isLoaded()) {\n        var pointer = _this.getMousePosition(e)[0];\n        _this.setPointer(pointer);\n      }\n    };\n    _this.onContextMenu = function (e) {\n      if (_this.isLoaded()) {\n        e.preventDefault();\n        if (!_this.props.disabled && !_this.path.closed) {\n          var _a = _this.getMousePosition(e),\n            pointer = _a[0],\n            index = _a[1].index;\n          if (index > -1) {\n            _this.dispatchPathAction({\n              type: pathActions.DELETE,\n              payload: index,\n              pointer: pointer\n            });\n          } else {\n            _this.setPointer(pointer);\n          }\n        }\n      }\n    };\n    _this.state = {\n      path: {\n        points: [],\n        closed: false\n      },\n      pointer: {\n        x: props.viewBox.width / 2,\n        y: props.viewBox.width / 2\n      }\n    };\n    return _this;\n  }\n  ReactLasso.prototype.render = function () {\n    var _this = this;\n    return React.createElement(\"div\", {\n      className: objectToClassName({\n        ReactFreeSelect__Component: true,\n        ReactFreeSelect__Closed: this.state.path.closed,\n        ReactFreeSelect__Disabled: this.props.disabled\n      }),\n      style: __assign({\n        display: 'inline-block',\n        position: 'relative',\n        margin: '0',\n        padding: '0',\n        fontSize: '0',\n        cursor: this.props.disabled ? 'not-allowed' : 'default'\n      }, this.props.style)\n    }, React.createElement(\"img\", {\n      ref: this.imageRef,\n      src: this.props.src,\n      alt: this.props.imageAlt,\n      crossOrigin: this.props.crossOrigin,\n      style: this.props.imageStyle,\n      onLoad: this.onMediaLoaded,\n      onError: this.onMediaError\n    }), React.createElement(\"svg\", {\n      ref: this.svgRef,\n      style: {\n        position: 'absolute',\n        top: '0',\n        left: '0',\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden',\n        userSelect: 'none',\n        touchAction: 'none'\n      },\n      viewBox: \"0 0 \" + this.props.viewBox.width + \" \" + this.props.viewBox.height,\n      onMouseMove: this.onMouseTouchMove,\n      onTouchMove: this.onMouseTouchMove,\n      onClick: this.onClick,\n      onTouchEnd: this.onTouchEnd,\n      onContextMenu: this.onContextMenu,\n      onMouseLeave: this.hidePointer\n    }, React.createElement(\"rect\", {\n      visibility: \"hidden\"\n    }), !!this.state.path.points.length && React.createElement(SVGPolygon, {\n      path: this.getPolygonPoints()\n    }), React.createElement(SVGPolyline, {\n      draggable: this.state.path.closed && !this.props.disabled,\n      onDrag: this.onShapeDrag,\n      onDragEnd: this.onDragEnd,\n      animate: !this.props.disabled,\n      path: this.getPolylinePoints()\n    }), this.getRoundedPoints().map(function (_a, idx) {\n      var x = _a.x,\n        y = _a.y;\n      return React.createElement(SVGPoint, {\n        key: idx,\n        x: x,\n        y: y,\n        draggable: !_this.props.disabled,\n        style: {\n          cursor: !idx && _this.state.path.points.length > 2 && !_this.state.path.closed ? 'pointer' : undefined\n        },\n        onDrag: function (_a) {\n          var dx = _a.dx,\n            dy = _a.dy;\n          return _this.onPointDrag(idx, {\n            dx: dx,\n            dy: dy\n          });\n        },\n        onDragEnd: _this.onDragEnd,\n        onClickTouchEvent: function () {\n          return _this.onPointClick(idx);\n        }\n      });\n    })));\n  };\n  ReactLasso.prototype.componentDidUpdate = function (prevProps) {\n    if (!prevProps.disabled && this.props.disabled && !this.path.closed) {\n      this.hidePointer();\n    }\n    if (prevProps.src && prevProps.src !== this.props.src) {\n      this.dispatchPathAction({\n        type: pathActions.RESET\n      });\n    } else if (!arePointListEqual(prevProps.value, this.props.value)) {\n      if (this.isLoaded()) {\n        this.setPathStateFromProps();\n      } else {\n        this.setPathFromPropsOnMediaLoad = true;\n      }\n    }\n  };\n  ReactLasso.prototype.convertPoints = function (points) {\n    var aspectRatio = this.getAspectRatio();\n    return this.svg.convertViewboxPointsToReal(points).map(function (_a) {\n      var x = _a.x,\n        y = _a.y;\n      return {\n        x: Math.round(x / aspectRatio.x),\n        y: Math.round(y / aspectRatio.y)\n      };\n    });\n  };\n  ReactLasso.prototype.checkIfPathUpdated = function (wasClosedBefore) {\n    if (this.path.closed || wasClosedBefore) {\n      var convertedPoints = this.convertPoints(this.path.points);\n      if (!arePointListEqual(convertedPoints, this.lastUpdatedPoints)) {\n        this.emitOnComplete(convertedPoints);\n        this.lastUpdatedPoints = convertedPoints.map(function (_a) {\n          var x = _a.x,\n            y = _a.y;\n          return {\n            x: x,\n            y: y\n          };\n        });\n      }\n    }\n  };\n  ReactLasso.prototype.emitOnChange = function (_a) {\n    var points = _a.points;\n    if (this.props.onChange) {\n      var convertedPoints = this.convertPoints(points);\n      this.lastEmittedPoints = convertedPoints;\n      this.props.onChange(convertedPoints);\n    }\n  };\n  ReactLasso.prototype.emitOnComplete = function (convertedPoints) {\n    if (this.props.onComplete) {\n      this.props.onComplete(convertedPoints);\n    }\n  };\n  ReactLasso.prototype.setPointer = function (_a, force) {\n    var x = _a.x,\n      y = _a.y;\n    if (force === void 0) {\n      force = false;\n    }\n    if (force || !this.props.disabled) {\n      this.setState({\n        path: this.path,\n        pointer: {\n          x: x,\n          y: y\n        }\n      });\n    }\n  };\n  ReactLasso.prototype.dispatchPathAction = function (action) {\n    var wasClosedBefore = this.path.closed;\n    var _a = pathReducer(this.path, action),\n      newPathState = _a[0],\n      wasModified = _a[1];\n    newPathState.points = newPathState.points.map(function (point) {\n      return roundPointCoordinates(point, 1e3);\n    });\n    if (wasModified) {\n      this.path = newPathState;\n      this.setState({\n        pointer: action.pointer || this.path.points[this.path.points.length - 1] || {\n          x: 0,\n          y: 0\n        },\n        path: newPathState\n      });\n      this.angles = calculateAnglesBeetwenPoints(newPathState.points);\n      this.emitOnChange(newPathState);\n      if (![pathActions.MODIFY, pathActions.MOVE].includes(action.type)) {\n        this.checkIfPathUpdated(wasClosedBefore); // optimized version of onChange\n      }\n    }\n  };\n\n  ReactLasso.prototype.isLoaded = function () {\n    if (this.imgError || !this.svgRef.current) return false;\n    var svg = this.svgRef.current;\n    return !!(svg.width.baseVal.value && svg.height.baseVal.value);\n  };\n  ReactLasso.prototype.getAspectRatio = function () {\n    if (!this.imageRef.current) {\n      return {\n        x: NaN,\n        y: NaN\n      };\n    }\n    // original * aspectRatio = size\n    return {\n      x: this.imageRef.current.clientWidth / this.imageRef.current.naturalWidth,\n      y: this.imageRef.current.clientHeight / this.imageRef.current.naturalHeight\n    };\n  };\n  ReactLasso.prototype.setPathStateFromProps = function () {\n    if (arePointListEqual(this.lastEmittedPoints, this.props.value)) return;\n    var aspectRatio = this.getAspectRatio();\n    var value = this.svg.convertRealPointsToViewbox(this.props.value.map(function (_a) {\n      var x = _a.x,\n        y = _a.y;\n      return {\n        x: x * aspectRatio.x,\n        y: y * aspectRatio.y\n      };\n    }));\n    this.dispatchPathAction({\n      type: pathActions.CHANGE,\n      payload: value\n    });\n  };\n  ReactLasso.prototype.getRoundedPoints = function () {\n    return this.state.path.points.map(function (point) {\n      return roundPointCoordinates(point);\n    });\n  };\n  ReactLasso.prototype.getBorder = function () {\n    return this.svg.getBorderPoints().map(function (point) {\n      return roundPointCoordinates(point);\n    }).map(function (_a) {\n      var x = _a.x,\n        y = _a.y;\n      return {\n        x: x - 1,\n        y: y + 1\n      };\n    }); // fishy bug here so i have to margin area\n  };\n\n  ReactLasso.prototype.getPolygonPoints = function () {\n    var roundedPoints = this.getRoundedPoints();\n    var border = this.getBorder();\n    return this.state.path.closed ? __spreadArray(__spreadArray(__spreadArray([], border, true), roundedPoints, true), [roundedPoints[0], border[0]]) : border;\n  };\n  ReactLasso.prototype.getPolylinePoints = function () {\n    var roundedPoints = this.getRoundedPoints();\n    return roundedPoints.concat(this.state.path.closed ? roundedPoints[0] : roundPointCoordinates(this.state.pointer));\n  };\n  ReactLasso.prototype.getMousePosition = function (e, lookupForNearlyPoints, lookupForApproximation) {\n    if (lookupForNearlyPoints === void 0) {\n      lookupForNearlyPoints = true;\n    }\n    if (lookupForApproximation === void 0) {\n      lookupForApproximation = true;\n    }\n    var pointer = this.svg.getMouseCoordinates(e);\n    if (lookupForApproximation) {\n      var ctrlCmdPressed = navigator.platform.includes('Mac') ? e.metaKey : e.ctrlKey;\n      var lastPoint = this.path.points[this.path.points.length - 1];\n      // straighten path from last point\n      if (ctrlCmdPressed && lastPoint) {\n        if (e.shiftKey) {\n          // lookup for parallel lines\n          pointer = approximateToAngles(lastPoint, pointer, this.angles);\n        } else {\n          // angle approximation to 15 deg\n          pointer = approximateToAnAngleMultiplicity(lastPoint, pointer, Math.PI / 12);\n        }\n      }\n    }\n    var _a = findPointByPosition(this.path.points, pointer, 10),\n      point = _a.point,\n      index = _a.index;\n    if (lookupForNearlyPoints && index > -1) {\n      pointer = __assign({}, point);\n    }\n    return [pointer, {\n      point: point,\n      index: index\n    }];\n  };\n  ReactLasso.propTypes = {\n    value: PropTypes.arrayOf(PropTypes.exact({\n      x: PropTypes.number.isRequired,\n      y: PropTypes.number.isRequired\n    })),\n    style: PropTypes.shape({}),\n    viewBox: PropTypes.exact({\n      width: PropTypes.number.isRequired,\n      height: PropTypes.number.isRequired\n    }),\n    disabled: PropTypes.bool,\n    onChange: PropTypes.func,\n    onComplete: PropTypes.func,\n    src: PropTypes.string.isRequired,\n    imageAlt: PropTypes.string,\n    crossOrigin: PropTypes.string,\n    imageStyle: PropTypes.shape({}),\n    onImageLoad: PropTypes.func,\n    onImageError: PropTypes.func\n  };\n  ReactLasso.defaultProps = {\n    value: [],\n    style: {},\n    imageStyle: {},\n    viewBox: {\n      width: 1e3,\n      height: 1e3\n    },\n    disabled: false,\n    onImageError: Function.prototype,\n    onImageLoad: Function.prototype\n  };\n  return ReactLasso;\n}(React.Component);\nexport { ReactLasso as Component, ReactLasso, ReactLasso as default, getClippedImageCanvas as getCanvas };","map":{"version":3,"names":["objectToClassName","obj","Object","keys","filter","key","join","arePointsEqual","p1","p2","x","y","arePointListEqual","arr1","arr2","length","every","point","i","roundPointCoordinates","_a","p","Math","round","Number","EPSILON","findPointByPosition","points","position","r","index","findIndex","max","abs","__assign","NaN","getDistance","hypot","getAngle","atan2","approximateToAnAngleMultiplicity","startPoint","endPoint","minAngle","angle","newAngle","cos","sin","approximateToAngles","angles","nearestAngle","reduce","prev","now","Infinity","calculateAnglesBeetwenPoints","alpha","alpha2","PI","push","val","idx","arr","indexOf","getClippedImageCanvas","src","path","callback","crop","image","Image","crossOrigin","canvas","document","createElement","ctx","getContext","Error","onerror","onload","width","naturalWidth","height","naturalHeight","drawImage","beginPath","moveTo","lineTo","slice","forEach","closePath","clip","globalCompositeOperation","fill","xAxis","map","yAxis","min","apply","minX","minY","_b","maxX","maxY","_c","imageData","getImageData","putImageData","err","String","SVGHelper","getSvgElement","prototype","getSvg","svg","getCTM","ctm","svgChild","querySelector","getViewboxSize","viewBox","baseVal","getRealSize","clientWidth","clientHeight","getViewboxOffset","rWidth","rHeight","vWidth","vHeight","assign","createSVGPoint","matrixTransform","inverse","convertViewboxPointsToReal","convertRealPointsToViewbox","getBorderPoints","repeatFirst","offsetX","offsetY","isAboveTheBorder","getMouseCoordinates","event","e","changedTouches","touches","clientX","clientY","getScreenCTM","withDraggable","Component","_super","__extends","DraggableHOC","_this","arguments","ref","React","createRef","current","ownerSVGElement","dragLastPosition","wasMoved","onMouseTouchDown","target","props","draggable","stopImmediatePropagation","preventDefault","getMousePosition","focus","preventScroll","onMouseTouchMove","dx","dy","onDragStart","onDrag","onMouseTouchUp","MouseEvent","window","addEventListener","stopPropagation","capture","once","onDragEnd","render","rest","__rest","componentDidUpdate","prevProps","componentDidMount","componentWillUnmount","removeEventListener","ev","SVGPolyline","forwardRef","animate","style","cursor","stroke","strokeWidth","shapeRendering","strokeDasharray","strokeDashoffset","vectorEffect","attributeName","values","dur","repeatCount","SVGPolygon","pointerEvents","transform","fillRule","SVGPoint","onClickTouchEvent","onClick","onTouchEnd","pathActions","pathReducer","state","action","type","ADD","closed","payload","needToBeClosed","__spreadArray","DELETE","_","MODIFY","sx_1","sy_1","newPoints","MOVE","CHANGE","wasModified","RESET","ReactLasso","call","imageRef","svgRef","lastEmittedPoints","lastUpdatedPoints","imgError","setPathFromPropsOnMediaLoad","hidePointer","lastPoint","setPointer","onShapeDrag","newPath","some","dispatchPathAction","onPointDrag","onPointClick","isLoaded","disabled","checkIfPathUpdated","onMediaLoaded","setPathStateFromProps","onImageLoad","onMediaError","onImageError","pointer","cancelable","onContextMenu","className","ReactFreeSelect__Component","ReactFreeSelect__Closed","ReactFreeSelect__Disabled","display","margin","padding","fontSize","alt","imageAlt","imageStyle","onLoad","onError","top","left","overflow","userSelect","touchAction","onMouseMove","onTouchMove","onMouseLeave","visibility","getPolygonPoints","getPolylinePoints","getRoundedPoints","undefined","value","convertPoints","aspectRatio","getAspectRatio","wasClosedBefore","convertedPoints","emitOnComplete","emitOnChange","onChange","onComplete","force","setState","newPathState","includes","getBorder","roundedPoints","border","concat","lookupForNearlyPoints","lookupForApproximation","ctrlCmdPressed","navigator","platform","metaKey","ctrlKey","shiftKey","propTypes","PropTypes","arrayOf","exact","number","isRequired","shape","bool","func","string","defaultProps","Function"],"sources":["/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/node_modules/react-lasso-select/src/helpers.ts","/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/node_modules/react-lasso-select/src/SVGHelpers.ts","/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/node_modules/react-lasso-select/src/withDraggable.tsx","/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/node_modules/react-lasso-select/src/SVGPolyline.tsx","/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/node_modules/react-lasso-select/src/SVGPolygon.tsx","/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/node_modules/react-lasso-select/src/SVGPoint.tsx","/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/node_modules/react-lasso-select/src/pathReducer.ts","/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/node_modules/react-lasso-select/src/index.tsx"],"sourcesContent":["export interface Point {\n  x: number;\n  y: number;\n}\n\nexport interface Vector {\n  dx: number;\n  dy: number;\n}\n\nexport interface Size {\n  width: number;\n  height: number;\n}\n\nexport interface Dictionary<T> {\n  [key: string]: T;\n}\n\nexport type touchOrMouseEvent<T> = React.MouseEvent<T, MouseEvent> | React.TouchEvent<T>;\nexport type touchAndMouseEvent<T> = React.MouseEvent<T, MouseEvent> & React.TouchEvent<T>;\n\nexport const objectToClassName = (obj: Dictionary<boolean>) => {\n  return Object.keys(obj)\n    .filter((key) => obj[key])\n    .join(' ');\n};\n\nexport const arePointsEqual = (p1: Point, p2: Point) => p1.x === p2.x && p1.y === p2.y;\n\nexport const arePointListEqual = (arr1: Point[], arr2: Point[]) => {\n  if ((!arr1 && arr2) || (arr1 && !arr2) || arr1.length !== arr2.length) return false;\n  return arr1.every((point, i) => arePointsEqual(point, arr2[i]));\n};\n\nexport const roundPointCoordinates = ({ x, y }: Point, p = 1): Point => ({\n  x: Math.round((x + Number.EPSILON) * p) / p,\n  y: Math.round((y + Number.EPSILON) * p) / p\n});\n\nexport const findPointByPosition = (\n  points: Point[],\n  position: Point,\n  r = 0\n): { point: Point; index: number } => {\n  const index = points.findIndex(\n    (point) => Math.max(Math.abs(point.x - position.x), Math.abs(point.y - position.y)) <= r\n  );\n  return { point: { ...(points[index] || { x: NaN, y: NaN }) }, index };\n};\n\nexport const getDistance = (p1: Point, p2: Point) => {\n  return Math.hypot(p2.x - p1.x, p2.y - p1.y);\n};\n\nexport const getAngle = (p1: Point, p2: Point) => {\n  return Math.atan2(p2.y - p1.y, p2.x - p1.x);\n};\n\nexport const approximateToAnAngleMultiplicity = (\n  startPoint: Point,\n  endPoint: Point,\n  minAngle: number\n): Point => {\n  const r = getDistance(startPoint, endPoint);\n  const angle = getAngle(startPoint, endPoint);\n  const newAngle = Math.round(angle / minAngle) * minAngle;\n  return {\n    x: startPoint.x + r * Math.cos(newAngle),\n    y: startPoint.y + r * Math.sin(newAngle)\n  };\n};\n\nexport const approximateToAngles = (\n  startPoint: Point,\n  endPoint: Point,\n  angles: number[]\n): Point => {\n  const r = getDistance(startPoint, endPoint);\n  const angle = getAngle(startPoint, endPoint);\n  const nearestAngle = angles.reduce(\n    (prev, now) => (Math.abs(now - angle) < Math.abs(prev - angle) ? now : prev),\n    Infinity\n  );\n  if (nearestAngle !== Infinity) {\n    endPoint.x = startPoint.x + r * Math.cos(nearestAngle);\n    endPoint.y = startPoint.y + r * Math.sin(nearestAngle);\n  }\n  return endPoint;\n};\n\nexport const calculateAnglesBeetwenPoints = (points: Point[]) => {\n  const angles: number[] = [];\n  for (let i = 1; i < points.length; i++) {\n    const alpha = Math.atan2(points[i].y - points[i - 1].y, points[i].x - points[i - 1].x);\n    const alpha2 = alpha + Math.PI;\n    angles.push(alpha, alpha2 > Math.PI ? alpha2 - 2 * Math.PI : alpha2);\n  }\n  return angles.filter((val, idx, arr) => arr.indexOf(val) === idx);\n};\n\nexport function getClippedImageCanvas(\n  src: string,\n  path: Point[],\n  callback: (err: Error | null, canvas: HTMLCanvasElement) => void,\n  crop = true\n) {\n  const image = new Image();\n  image.crossOrigin = 'Anonymous';\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n  if (!ctx) {\n    return callback(new Error('CTX is null'), canvas);\n  }\n  image.onerror = () => {\n    callback(new Error('Failed to load image'), canvas);\n  };\n  image.onload = () => {\n    try {\n      canvas.width = image.naturalWidth + 2;\n      canvas.height = image.naturalHeight + 2;\n      ctx.drawImage(image, 0, 0);\n      if (path.length < 3) {\n        callback(null, canvas);\n        return;\n      }\n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(canvas.width, 0);\n      ctx.lineTo(canvas.width, canvas.height);\n      ctx.lineTo(0, canvas.height);\n      ctx.lineTo(0, 0);\n      ctx.lineTo(path[0].x + 1, path[0].y + 1);\n      path.slice(1).forEach(({ x, y }) => ctx.lineTo(x + 1, y + 1));\n      ctx.lineTo(path[0].x + 1, path[0].y + 1);\n      ctx.lineTo(0, 0);\n      ctx.closePath();\n      ctx.clip('evenodd');\n      ctx.globalCompositeOperation = 'destination-out';\n      ctx.fill();\n      if (crop) {\n        const xAxis = path.map(({ x }) => x + 1);\n        const yAxis = path.map(({ y }) => y + 1);\n        const [minX, minY] = [Math.min.apply(null, xAxis), Math.min.apply(null, yAxis)];\n        const [maxX, maxY] = [Math.max.apply(null, xAxis), Math.max.apply(null, yAxis)];\n        const [width, height] = [maxX - minX, maxY - minY];\n        const imageData = ctx.getImageData(minX, minY, width, height);\n        canvas.width = width;\n        canvas.height = height;\n        ctx.putImageData(imageData, 0, 0);\n      }\n      callback(null, canvas);\n    } catch (err) {\n      callback(err instanceof Error ? err : new Error(String(err)), canvas);\n    }\n  };\n  image.src = src;\n}\n","import { Point, roundPointCoordinates, Size, touchOrMouseEvent } from './helpers';\n\nexport class SVGHelper {\n  public getSvgElement: () => SVGSVGElement | null | undefined;\n  constructor(getSvgElement: () => SVGSVGElement | null | undefined) {\n    this.getSvgElement = getSvgElement;\n  }\n  getSvg() {\n    const svg = this.getSvgElement();\n    if (!svg) throw new Error('SVG is null');\n    return svg;\n  }\n  getCTM() {\n    const svg = this.getSvg();\n    let ctm = svg.getCTM();\n    if (ctm === null) {\n      // https://www.w3.org/TR/SVGTiny12/coords.html#TransformMatrixDefined\n      const svgChild = svg.querySelector('rect[visibility=\"hidden\"]') as SVGRectElement;\n      ctm = svgChild.getCTM();\n    }\n    if (!ctm) throw new Error('CTM is null');\n    return ctm;\n  }\n  getViewboxSize() {\n    return this.getSvg().viewBox.baseVal;\n  }\n  getRealSize(): Size {\n    const svg = this.getSvg();\n    // Firefox have problems with SVGSVGElement.width.baseVal.value\n    return {\n      width: svg.clientWidth,\n      height: svg.clientHeight\n    };\n  }\n  getViewboxOffset(): Point {\n    const svg = this.getSvg();\n    const { width: rWidth, height: rHeight } = this.getRealSize();\n    const { width: vWidth, height: vHeight } = this.getViewboxSize();\n    const point = Object.assign(svg.createSVGPoint(), {\n      x: rWidth,\n      y: rHeight\n    });\n    const ctm = this.getCTM();\n    const { x, y } = point.matrixTransform(ctm.inverse());\n    // only for preserveAspectRatio=\"xMidYMid meet\" !!!\n    return {\n      x: x - vWidth,\n      y: y - vHeight\n    };\n  }\n  convertViewboxPointsToReal(points: Point[]): Point[] {\n    const svg = this.getSvg();\n    const ctm = this.getCTM();\n    return points.map(({ x, y }) => {\n      const p = Object.assign(svg.createSVGPoint(), { x, y }).matrixTransform(ctm);\n      return roundPointCoordinates(p);\n    });\n  }\n  convertRealPointsToViewbox(points: Point[]): Point[] {\n    const svg = this.getSvg();\n    const ctm = this.getCTM().inverse();\n    return points.map(({ x, y }) => {\n      const p = Object.assign(svg.createSVGPoint(), { x, y }).matrixTransform(ctm);\n      return roundPointCoordinates(p, 1e3);\n    });\n  }\n  getBorderPoints(repeatFirst = true) {\n    const { width, height } = this.getViewboxSize();\n    const { x: offsetX, y: offsetY } = this.getViewboxOffset();\n    const arr: Point[] = [\n      { x: -offsetX, y: -offsetY },\n      { x: width + offsetX, y: -offsetY },\n      { x: width + offsetX, y: height + offsetY },\n      { x: -offsetX, y: height + offsetY }\n    ];\n    if (repeatFirst) {\n      arr.push({ x: -offsetX, y: -offsetY });\n    }\n    return arr;\n  }\n  isAboveTheBorder({ x, y }: Point) {\n    const { width, height } = this.getViewboxSize();\n    const { x: offsetX, y: offsetY } = this.getViewboxOffset();\n    return x < -offsetX || x > width + offsetX || y < -offsetY || y > height + offsetY;\n  }\n  getMouseCoordinates(event: touchOrMouseEvent<SVGSVGElement>): Point {\n    const e = event as React.MouseEvent<SVGSVGElement, MouseEvent> &\n      React.TouchEvent<SVGSVGElement>;\n    const { clientX, clientY } =\n      e.changedTouches && e.touches ? e.changedTouches[0] || e.touches[0] : e;\n    const svg = this.getSvg();\n    const ctm = svg.getScreenCTM();\n    if (!ctm) throw new Error('ScreenCTM is null');\n    const point = svg.createSVGPoint();\n    point.x = clientX;\n    point.y = clientY;\n    const { x, y } = point.matrixTransform(ctm.inverse());\n    return { x, y };\n  }\n}\n","import React from 'react';\nimport { SVGHelper } from './SVGHelpers';\n\nimport { Point, Vector, touchOrMouseEvent } from './helpers';\n\nexport interface WithDraggableProps {\n  draggable: boolean;\n  onDragStart?: (arg: Point & Vector) => void;\n  onDrag?: (arg: Vector) => void;\n  onDragEnd?: (arg: Point) => void;\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport const withDraggable = <P extends object>(Component: React.ComponentType<P>) =>\n  class DraggableHOC extends React.Component<P & WithDraggableProps> {\n    public ref = React.createRef<SVGSVGElement>();\n    public svg = new SVGHelper(() => this.ref?.current?.ownerSVGElement);\n    public dragLastPosition: null | Point = null;\n    public wasMoved = false;\n    render() {\n      const { draggable, onDrag, onDragStart, onDragEnd, ...rest } = this.props;\n      return <Component ref={this.ref} {...(rest as P)} draggable={draggable} />;\n    }\n    componentDidUpdate(prevProps: WithDraggableProps) {\n      if (prevProps.draggable && !this.props.draggable) {\n        // cleanup after props.draggable changed to false\n        if (this.dragLastPosition && this.wasMoved) {\n          if (this.props.onDragEnd) {\n            this.props.onDragEnd({\n              x: this.dragLastPosition.x,\n              y: this.dragLastPosition.y\n            });\n          }\n          this.dragLastPosition = null;\n          this.wasMoved = false;\n        }\n      }\n    }\n    componentDidMount() {\n      window.addEventListener('mousedown', this.onMouseTouchDown, true);\n      window.addEventListener('mousemove', this.onMouseTouchMove, true);\n      window.addEventListener('mouseup', this.onMouseTouchUp, true);\n      window.addEventListener('touchstart', this.onMouseTouchDown, true);\n      window.addEventListener('touchmove', this.onMouseTouchMove, true);\n      window.addEventListener('touchend', this.onMouseTouchUp, true);\n    }\n    componentWillUnmount() {\n      window.removeEventListener('mousedown', this.onMouseTouchDown);\n      window.removeEventListener('mousemove', this.onMouseTouchMove);\n      window.removeEventListener('mouseup', this.onMouseTouchUp);\n      window.removeEventListener('touchstart', this.onMouseTouchDown);\n      window.removeEventListener('touchmove', this.onMouseTouchMove);\n      window.removeEventListener('touchend', this.onMouseTouchUp);\n    }\n    getMousePosition(ev: TouchEvent | MouseEvent) {\n      const e = (ev as unknown) as touchOrMouseEvent<SVGSVGElement>;\n      return this.svg.getMouseCoordinates(e);\n    }\n    onMouseTouchDown = (e: TouchEvent | MouseEvent) => {\n      if (e.target === this.ref.current && this.props.draggable) {\n        e.stopImmediatePropagation();\n        e.preventDefault();\n        const target = e.target as EventTarget & SVGSVGElement;\n        this.dragLastPosition = this.getMousePosition(e);\n        if (target.ownerSVGElement) {\n          target.ownerSVGElement.focus({ preventScroll: true });\n        }\n      }\n    };\n    onMouseTouchMove = (e: TouchEvent | MouseEvent) => {\n      if (this.dragLastPosition) {\n        e.stopImmediatePropagation();\n        e.preventDefault();\n        const { x, y } = this.getMousePosition(e);\n        const dx = x - this.dragLastPosition.x;\n        const dy = y - this.dragLastPosition.y;\n        if (!this.wasMoved && this.props.onDragStart) {\n          this.props.onDragStart({\n            x: this.dragLastPosition.x,\n            y: this.dragLastPosition.y,\n            dx,\n            dy\n          });\n        }\n        if (this.props.onDrag) {\n          this.props.onDrag({ dx, dy });\n        }\n        this.dragLastPosition = { x, y };\n        this.wasMoved = true;\n      }\n    };\n    onMouseTouchUp = (e: TouchEvent | MouseEvent) => {\n      if (this.dragLastPosition && this.wasMoved) {\n        e.stopImmediatePropagation();\n        e.preventDefault();\n        if (e instanceof MouseEvent || !e.touches) {\n          window.addEventListener('click', (e) => e.stopPropagation(), {\n            capture: true,\n            once: true\n          });\n        }\n        if (this.props.onDragEnd) {\n          this.props.onDragEnd({\n            x: this.dragLastPosition.x,\n            y: this.dragLastPosition.y\n          });\n        }\n      }\n      this.dragLastPosition = null;\n      this.wasMoved = false;\n    };\n  };\n","import React from 'react';\nimport { withDraggable } from './withDraggable';\nimport { Point } from './helpers';\n\nexport interface SVGPolylineProps {\n  path: Point[];\n  animate: boolean;\n  draggable: boolean;\n}\n\nexport const SVGPolyline = withDraggable(\n  React.forwardRef<SVGPolylineElement, SVGPolylineProps>(function SVGPolyline(\n    { path, animate, draggable },\n    ref\n  ) {\n    return (\n      <polyline\n        ref={ref}\n        style={{ cursor: draggable ? 'move' : '' }}\n        points={path.map(({ x, y }) => `${x},${y}`).join(' ')}\n        fill=\"rgba(0,0,0,0)\"\n        stroke=\"white\"\n        strokeWidth=\"1.5\"\n        shapeRendering=\"geometricPrecision\"\n        strokeDasharray=\"3\"\n        strokeDashoffset=\"0\"\n        vectorEffect=\"non-scaling-stroke\"\n      >\n        {animate && (\n          <animate\n            attributeName=\"stroke-dashoffset\"\n            values=\"0;1000;0\"\n            dur=\"100s\"\n            repeatCount=\"indefinite\"\n          />\n        )}\n      </polyline>\n    );\n  })\n);\n","import React from 'react';\nimport { Point } from './helpers';\n\nexport interface SVGPolygonProps {\n  path: Point[];\n}\n\nexport function SVGPolygon({ path }: SVGPolygonProps) {\n  return (\n    <polygon\n      style={{\n        pointerEvents: 'none',\n        transform: 'translate(-1px, -1px)'\n      }}\n      points={path.map(({ x, y }) => `${x},${y}`).join(' ')}\n      fill=\"rgba(0, 0, 0, 0.5)\"\n      fillRule=\"evenodd\"\n      stroke=\"null\"\n      shapeRendering=\"geometricPrecision\"\n    />\n  );\n}\n","import React from 'react';\nimport { withDraggable } from './withDraggable';\nimport { Point } from './helpers';\n\nexport interface SVGPointProps extends Point {\n  style: React.CSSProperties;\n  draggable: boolean;\n  onClickTouchEvent: (e: React.MouseEvent | React.TouchEvent) => void;\n}\n\nexport const SVGPoint = withDraggable(\n  React.forwardRef<SVGRectElement, SVGPointProps>(function SVGPoint(\n    { x, y, onClickTouchEvent, draggable, style },\n    ref\n  ) {\n    const { cursor = draggable ? 'move' : 'default', ...rest } = style;\n    return (\n      <rect\n        style={{\n          cursor,\n          ...rest\n        }}\n        ref={ref}\n        x={x - 10}\n        y={y - 10}\n        onClick={(e) => {\n          e.stopPropagation();\n          e.preventDefault();\n          onClickTouchEvent(e);\n        }}\n        onTouchEnd={(e) => {\n          e.stopPropagation();\n          e.preventDefault();\n          onClickTouchEvent(e);\n        }}\n        width=\"20px\"\n        height=\"20\"\n        fill=\"rgba(0, 0, 0, 0)\"\n        stroke=\"white\"\n        strokeWidth=\"1.25\"\n        vectorEffect=\"non-scaling-stroke\"\n        // vectorEffect=\"non-scaling-size\" will be featured in SVG 2.0!\n      />\n    );\n  })\n);\n","import { arePointListEqual, arePointsEqual, Point } from './helpers';\n\nexport enum pathActions {\n  ADD = 'ADD',\n  DELETE = 'DELETE',\n  MODIFY = 'MODIFY',\n  MOVE = 'MOVE',\n  RESET = 'RESET',\n  CHANGE = 'CHANGE'\n}\n\nexport type pathReducerAction =\n  | { type: pathActions.ADD; payload: Point }\n  | { type: pathActions.DELETE; payload: number }\n  | { type: pathActions.MODIFY; payload: { index: number } & Point }\n  | { type: pathActions.MOVE; payload: Point }\n  | { type: pathActions.RESET }\n  | { type: pathActions.CHANGE; payload: Point[] };\nexport interface PathState {\n  points: Point[];\n  closed: boolean;\n}\n\nexport function pathReducer(state: PathState, action: pathReducerAction): [PathState, boolean] {\n  const length = state.points.length;\n  switch (action.type) {\n    case pathActions.ADD: {\n      if (state.closed) return [state, false];\n      if (\n        (length > 0 && arePointsEqual(state.points[length - 1], action.payload)) ||\n        (length > 1 && arePointsEqual(state.points[length - 2], action.payload))\n      ) {\n        return [state, false];\n      }\n      const needToBeClosed = length > 2 && arePointsEqual(state.points[0], action.payload);\n      if (needToBeClosed) return [{ points: [...state.points], closed: true }, true];\n      return [{ points: [...state.points, action.payload], closed: false }, true];\n    }\n    case pathActions.DELETE: {\n      return [\n        {\n          points: [...state.points.filter((_, idx) => action.payload !== idx)],\n          closed: length > 4 && state.closed\n        },\n        true\n      ];\n    }\n    case pathActions.MODIFY: {\n      const { x: sx, y: sy } = state.points[action.payload.index];\n      const newPoints = state.points.map(({ x, y }) => {\n        if (x === sx && y === sy) {\n          return {\n            x: action.payload.x,\n            y: action.payload.y\n          };\n        }\n        return { x, y };\n      });\n      return [\n        { points: newPoints, closed: state.closed },\n        !!(action.payload.x || action.payload.y)\n      ];\n    }\n    case pathActions.MOVE: {\n      return [\n        {\n          points: state.points.map(({ x, y }) => ({\n            x: x + action.payload.x,\n            y: y + action.payload.y\n          })),\n          closed: state.closed\n        },\n        !!(action.payload.x || action.payload.y)\n      ];\n    }\n    case pathActions.CHANGE: {\n      const wasModified = !arePointListEqual(action.payload, state.points);\n      return [\n        {\n          points: action.payload,\n          closed: wasModified ? action.payload.length > 2 : state.closed\n        },\n        wasModified\n      ];\n    }\n    case pathActions.RESET:\n      return [{ points: [], closed: false }, !!state.points.length];\n    default:\n      return [state, false];\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { SVGPolyline } from './SVGPolyline';\nimport { SVGPolygon } from './SVGPolygon';\nimport { SVGPoint } from './SVGPoint';\nimport { SVGHelper } from './SVGHelpers';\n\nimport {\n  roundPointCoordinates,\n  arePointListEqual,\n  objectToClassName,\n  getClippedImageCanvas,\n  Point,\n  Vector,\n  touchOrMouseEvent,\n  Size,\n  approximateToAnAngleMultiplicity,\n  approximateToAngles,\n  calculateAnglesBeetwenPoints,\n  findPointByPosition\n} from './helpers';\n\nimport { pathReducer, pathActions, pathReducerAction, PathState } from './pathReducer';\n\nexport interface ReactLassoProps {\n  src: string;\n  value: Point[];\n  style: React.CSSProperties;\n  viewBox: Size;\n  disabled: boolean;\n  imageStyle: React.CSSProperties;\n  onImageLoad: (e: React.SyntheticEvent<HTMLImageElement, Event>) => void;\n  onImageError: (e: React.SyntheticEvent<HTMLImageElement, Event>) => void;\n  onChange?: (path: Point[]) => void;\n  onComplete?: (path: Point[]) => void;\n  imageAlt?: string;\n  crossOrigin?: 'anonymous' | 'use-credentials' | '';\n}\n\nexport interface ReactLassoState {\n  path: PathState;\n  pointer: Point;\n}\n\nexport class ReactLasso extends React.Component<ReactLassoProps, ReactLassoState> {\n  public state: ReactLassoState;\n  public imageRef = React.createRef<HTMLImageElement>();\n  public svgRef = React.createRef<SVGSVGElement>();\n  public svg = new SVGHelper(() => this.svgRef?.current);\n  public angles: number[] = [];\n  public path: PathState = {\n    points: [],\n    closed: false\n  };\n  public lastEmittedPoints: Point[] = [];\n  public lastUpdatedPoints: Point[] = [];\n  public imgError = false;\n  public setPathFromPropsOnMediaLoad = true;\n  constructor(props: ReactLassoProps) {\n    super(props);\n    this.state = {\n      path: {\n        points: [],\n        closed: false\n      },\n      pointer: {\n        x: props.viewBox.width / 2,\n        y: props.viewBox.width / 2\n      }\n    };\n  }\n  render() {\n    return (\n      <div\n        className={objectToClassName({\n          ReactFreeSelect__Component: true,\n          ReactFreeSelect__Closed: this.state.path.closed,\n          ReactFreeSelect__Disabled: this.props.disabled\n        })}\n        style={{\n          display: 'inline-block',\n          position: 'relative',\n          margin: '0',\n          padding: '0',\n          fontSize: '0',\n          cursor: this.props.disabled ? 'not-allowed' : 'default',\n          ...this.props.style\n        }}\n      >\n        <img\n          ref={this.imageRef}\n          src={this.props.src}\n          alt={this.props.imageAlt}\n          crossOrigin={this.props.crossOrigin}\n          style={this.props.imageStyle}\n          onLoad={this.onMediaLoaded}\n          onError={this.onMediaError}\n        />\n        <svg\n          ref={this.svgRef}\n          style={{\n            position: 'absolute',\n            top: '0',\n            left: '0',\n            width: '100%',\n            height: '100%',\n            overflow: 'hidden',\n            userSelect: 'none',\n            touchAction: 'none'\n          }}\n          viewBox={`0 0 ${this.props.viewBox.width} ${this.props.viewBox.height}`}\n          onMouseMove={this.onMouseTouchMove}\n          onTouchMove={this.onMouseTouchMove}\n          onClick={this.onClick}\n          onTouchEnd={this.onTouchEnd}\n          onContextMenu={this.onContextMenu}\n          onMouseLeave={this.hidePointer}\n        >\n          <rect visibility=\"hidden\" />\n          {!!this.state.path.points.length && <SVGPolygon path={this.getPolygonPoints()} />}\n          <SVGPolyline\n            draggable={this.state.path.closed && !this.props.disabled}\n            onDrag={this.onShapeDrag}\n            onDragEnd={this.onDragEnd}\n            animate={!this.props.disabled}\n            path={this.getPolylinePoints()}\n          />\n          {this.getRoundedPoints().map(({ x, y }, idx) => (\n            <SVGPoint\n              key={idx}\n              x={x}\n              y={y}\n              draggable={!this.props.disabled}\n              style={{\n                cursor:\n                  !idx && this.state.path.points.length > 2 && !this.state.path.closed\n                    ? 'pointer'\n                    : undefined\n              }}\n              onDrag={({ dx, dy }) => this.onPointDrag(idx, { dx, dy })}\n              onDragEnd={this.onDragEnd}\n              onClickTouchEvent={() => this.onPointClick(idx)}\n            />\n          ))}\n        </svg>\n      </div>\n    );\n  }\n  componentDidUpdate(prevProps: ReactLassoProps) {\n    if (!prevProps.disabled && this.props.disabled && !this.path.closed) {\n      this.hidePointer();\n    }\n    if (prevProps.src && prevProps.src !== this.props.src) {\n      this.dispatchPathAction({ type: pathActions.RESET });\n    } else if (!arePointListEqual(prevProps.value, this.props.value)) {\n      if (this.isLoaded()) {\n        this.setPathStateFromProps();\n      } else {\n        this.setPathFromPropsOnMediaLoad = true;\n      }\n    }\n  }\n  convertPoints(points: Point[]): Point[] {\n    const aspectRatio = this.getAspectRatio();\n    return this.svg.convertViewboxPointsToReal(points).map(({ x, y }) => ({\n      x: Math.round(x / aspectRatio.x),\n      y: Math.round(y / aspectRatio.y)\n    }));\n  }\n  checkIfPathUpdated(wasClosedBefore: boolean) {\n    if (this.path.closed || wasClosedBefore) {\n      const convertedPoints = this.convertPoints(this.path.points);\n      if (!arePointListEqual(convertedPoints, this.lastUpdatedPoints)) {\n        this.emitOnComplete(convertedPoints);\n        this.lastUpdatedPoints = convertedPoints.map(({ x, y }) => ({ x, y }));\n      }\n    }\n  }\n  emitOnChange({ points }: PathState) {\n    if (this.props.onChange) {\n      const convertedPoints = this.convertPoints(points);\n      this.lastEmittedPoints = convertedPoints;\n      this.props.onChange(convertedPoints);\n    }\n  }\n  emitOnComplete(convertedPoints: Point[]) {\n    if (this.props.onComplete) {\n      this.props.onComplete(convertedPoints);\n    }\n  }\n  setPointer({ x, y }: Point, force = false) {\n    if (force || !this.props.disabled) {\n      this.setState({\n        path: this.path,\n        pointer: { x, y }\n      });\n    }\n  }\n  hidePointer = () => {\n    const lastPoint = this.path.points[this.path.points.length - 1] || {\n      x: 0,\n      y: 0\n    };\n    this.setPointer({ ...lastPoint }, true); // tricky way to hide pointer line\n  };\n  dispatchPathAction(action: pathReducerAction & { pointer?: Point }) {\n    const wasClosedBefore = this.path.closed;\n    const [newPathState, wasModified] = pathReducer(this.path, action);\n    newPathState.points = newPathState.points.map((point) => roundPointCoordinates(point, 1e3));\n    if (wasModified) {\n      this.path = newPathState;\n      this.setState({\n        pointer: action.pointer || this.path.points[this.path.points.length - 1] || { x: 0, y: 0 },\n        path: newPathState\n      });\n      this.angles = calculateAnglesBeetwenPoints(newPathState.points);\n      this.emitOnChange(newPathState);\n      if (![pathActions.MODIFY, pathActions.MOVE].includes(action.type)) {\n        this.checkIfPathUpdated(wasClosedBefore); // optimized version of onChange\n      }\n    }\n  }\n  isLoaded() {\n    if (this.imgError || !this.svgRef.current) return false;\n    const svg = this.svgRef.current;\n    return !!(svg.width.baseVal.value && svg.height.baseVal.value);\n  }\n  getAspectRatio(): Point {\n    if (!this.imageRef.current) {\n      return { x: NaN, y: NaN };\n    }\n    // original * aspectRatio = size\n    return {\n      x: this.imageRef.current.clientWidth / this.imageRef.current.naturalWidth,\n      y: this.imageRef.current.clientHeight / this.imageRef.current.naturalHeight\n    };\n  }\n  setPathStateFromProps() {\n    if (arePointListEqual(this.lastEmittedPoints, this.props.value)) return;\n    const aspectRatio = this.getAspectRatio();\n    const value = this.svg.convertRealPointsToViewbox(\n      this.props.value.map(({ x, y }) => ({\n        x: x * aspectRatio.x,\n        y: y * aspectRatio.y\n      }))\n    );\n    this.dispatchPathAction({\n      type: pathActions.CHANGE,\n      payload: value\n    });\n  }\n  getRoundedPoints() {\n    return this.state.path.points.map((point) => roundPointCoordinates(point));\n  }\n  getBorder(): Point[] {\n    return this.svg\n      .getBorderPoints()\n      .map((point) => roundPointCoordinates(point))\n      .map(({ x, y }) => ({ x: x - 1, y: y + 1 })); // fishy bug here so i have to margin area\n  }\n  getPolygonPoints(): Point[] {\n    const roundedPoints = this.getRoundedPoints();\n    const border = this.getBorder();\n    return this.state.path.closed\n      ? [...border, ...roundedPoints, roundedPoints[0], border[0]]\n      : border;\n  }\n  getPolylinePoints(): Point[] {\n    const roundedPoints = this.getRoundedPoints();\n    return roundedPoints.concat(\n      this.state.path.closed ? roundedPoints[0] : roundPointCoordinates(this.state.pointer)\n    );\n  }\n  getMousePosition(\n    e: touchOrMouseEvent<SVGSVGElement>,\n    lookupForNearlyPoints = true,\n    lookupForApproximation = true\n  ): [Point, { point: Point; index: number }] {\n    let pointer = this.svg.getMouseCoordinates(e);\n    if (lookupForApproximation) {\n      const ctrlCmdPressed = navigator.platform.includes('Mac') ? e.metaKey : e.ctrlKey;\n      const lastPoint = this.path.points[this.path.points.length - 1];\n      // straighten path from last point\n      if (ctrlCmdPressed && lastPoint) {\n        if (e.shiftKey) {\n          // lookup for parallel lines\n          pointer = approximateToAngles(lastPoint, pointer, this.angles);\n        } else {\n          // angle approximation to 15 deg\n          pointer = approximateToAnAngleMultiplicity(lastPoint, pointer, Math.PI / 12);\n        }\n      }\n    }\n    const { point, index } = findPointByPosition(this.path.points, pointer, 10);\n    if (lookupForNearlyPoints && index > -1) {\n      pointer = { ...point };\n    }\n    return [pointer, { point, index }];\n  }\n  // Events\n  onShapeDrag = ({ dx, dy }: Vector) => {\n    const newPath = this.path.points.map(({ x, y }) => ({\n      x: x + dx,\n      y: y + dy\n    }));\n    if (!newPath.some((point) => this.svg.isAboveTheBorder(point))) {\n      this.dispatchPathAction({\n        type: pathActions.MOVE,\n        payload: { x: dx, y: dy }\n      });\n    }\n  };\n  onPointDrag = (idx: number, { dx, dy }: Vector) => {\n    const point = { ...this.path.points[idx] };\n    point.x += dx;\n    point.y += dy;\n    if (!this.svg.isAboveTheBorder(point)) {\n      this.dispatchPathAction({\n        type: pathActions.MODIFY,\n        payload: { ...point, index: idx }\n      });\n    }\n  };\n  onPointClick = (idx: number) => {\n    if (this.isLoaded() && !this.props.disabled && !this.path.closed) {\n      this.dispatchPathAction({\n        type: pathActions.ADD,\n        payload: this.path.points[idx]\n      });\n    }\n  };\n  onDragEnd = () => {\n    this.checkIfPathUpdated(false);\n  };\n  onMediaLoaded = (e: React.SyntheticEvent<HTMLImageElement, Event>) => {\n    if (this.setPathFromPropsOnMediaLoad) {\n      this.setPathStateFromProps();\n      this.setPathFromPropsOnMediaLoad = false;\n    }\n    this.imgError = false;\n    this.props.onImageLoad(e);\n  };\n  onMediaError = (e: React.SyntheticEvent<HTMLImageElement, Event>) => {\n    this.dispatchPathAction({ type: pathActions.RESET });\n    this.imgError = true;\n    this.props.onImageError(e);\n  };\n  onClickTouchEvent = (e: touchOrMouseEvent<SVGSVGElement>) => {\n    if (this.isLoaded() && !this.props.disabled) {\n      if (this.path.closed) {\n        if (e.target === this.svgRef.current) {\n          this.dispatchPathAction({\n            type: pathActions.RESET\n          });\n        }\n        return;\n      }\n      const [pointer] = this.getMousePosition(e);\n      if (!this.svg.isAboveTheBorder(pointer)) {\n        this.dispatchPathAction({\n          type: pathActions.ADD,\n          payload: roundPointCoordinates(pointer, 1e3),\n          pointer\n        });\n      } else {\n        this.hidePointer();\n      }\n    }\n  };\n  onClick = (e: React.MouseEvent<SVGSVGElement, MouseEvent>) => {\n    this.onClickTouchEvent(e);\n  };\n  onTouchEnd = (e: React.TouchEvent<SVGSVGElement>) => {\n    if (e.cancelable) {\n      e.preventDefault();\n      this.onClickTouchEvent(e);\n    }\n    this.hidePointer();\n  };\n  onMouseTouchMove = (e: touchOrMouseEvent<SVGSVGElement>) => {\n    if (this.isLoaded()) {\n      const [pointer] = this.getMousePosition(e);\n      this.setPointer(pointer);\n    }\n  };\n  onContextMenu = (e: React.MouseEvent<SVGSVGElement, MouseEvent>) => {\n    if (this.isLoaded()) {\n      e.preventDefault();\n      if (!this.props.disabled && !this.path.closed) {\n        const [pointer, { index }] = this.getMousePosition(e);\n        if (index > -1) {\n          this.dispatchPathAction({\n            type: pathActions.DELETE,\n            payload: index,\n            pointer\n          });\n        } else {\n          this.setPointer(pointer);\n        }\n      }\n    }\n  };\n  static propTypes = {\n    value: PropTypes.arrayOf(\n      PropTypes.exact({\n        x: PropTypes.number.isRequired,\n        y: PropTypes.number.isRequired\n      })\n    ),\n    style: PropTypes.shape({}),\n    viewBox: PropTypes.exact({\n      width: PropTypes.number.isRequired,\n      height: PropTypes.number.isRequired\n    }),\n    disabled: PropTypes.bool,\n    onChange: PropTypes.func,\n    onComplete: PropTypes.func,\n    src: PropTypes.string.isRequired,\n    imageAlt: PropTypes.string,\n    crossOrigin: PropTypes.string,\n    imageStyle: PropTypes.shape({}),\n    onImageLoad: PropTypes.func,\n    onImageError: PropTypes.func\n  };\n  static defaultProps = {\n    value: [],\n    style: {},\n    imageStyle: {},\n    viewBox: { width: 1e3, height: 1e3 },\n    disabled: false,\n    onImageError: Function.prototype,\n    onImageLoad: Function.prototype\n  };\n}\n\nexport { ReactLasso as default, ReactLasso as Component, getClippedImageCanvas as getCanvas };\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBO,IAAMA,iBAAiB,GAAG,SAAAA,CAACC,GAAwB;EACxD,OAAOC,MAAM,CAACC,IAAI,CAACF,GAAG,CAAC,CACpBG,MAAM,CAAC,UAACC,GAAG;IAAK,OAAAJ,GAAG,CAACI,GAAG,CAAC;EAAA,EAAC,CACzBC,IAAI,CAAC,GAAG,CAAC;AACd,CAAC;AAEM,IAAMC,cAAc,GAAG,SAAAA,CAACC,EAAS,EAAEC,EAAS;EAAK,OAAAD,EAAE,CAACE,CAAC,KAAKD,EAAE,CAACC,CAAC,IAAIF,EAAE,CAACG,CAAC,KAAKF,EAAE,CAACE,CAAC;AAAA;AAE/E,IAAMC,iBAAiB,GAAG,SAAAA,CAACC,IAAa,EAAEC,IAAa;EAC5D,IAAK,CAACD,IAAI,IAAIC,IAAI,IAAMD,IAAI,IAAI,CAACC,IAAK,IAAID,IAAI,CAACE,MAAM,KAAKD,IAAI,CAACC,MAAM,EAAE,OAAO,KAAK;EACnF,OAAOF,IAAI,CAACG,KAAK,CAAC,UAACC,KAAK,EAAEC,CAAC;IAAK,OAAAX,cAAc,CAACU,KAAK,EAAEH,IAAI,CAACI,CAAC,CAAC,CAAC;EAAA,EAAC;AACjE,CAAC;AAEM,IAAMC,qBAAqB,GAAG,SAAAA,CAACC,EAAe,EAAEC,CAAK;MAApBX,CAAC,GAAAU,EAAA,CAAAV,CAAA;IAAEC,CAAC,GAAAS,EAAA,CAAAT,CAAA;EAAW,IAAAU,CAAA;IAAAA,CAAA,IAAK;EAAA;EAAY,OAAC;IACvEX,CAAC,EAAEY,IAAI,CAACC,KAAK,CAAC,CAACb,CAAC,GAAGc,MAAM,CAACC,OAAO,IAAIJ,CAAC,CAAC,GAAGA,CAAC;IAC3CV,CAAC,EAAEW,IAAI,CAACC,KAAK,CAAC,CAACZ,CAAC,GAAGa,MAAM,CAACC,OAAO,IAAIJ,CAAC,CAAC,GAAGA;GAC3C;AAHuE,CAGtE;AAEK,IAAMK,mBAAmB,GAAG,SAAAA,CACjCC,MAAe,EACfC,QAAe,EACfC,CAAK;EAAL,IAAAA,CAAA;IAAAA,CAAA,IAAK;EAAA;EAEL,IAAMC,KAAK,GAAGH,MAAM,CAACI,SAAS,CAC5B,UAACd,KAAK;IAAK,OAAAK,IAAI,CAACU,GAAG,CAACV,IAAI,CAACW,GAAG,CAAChB,KAAK,CAACP,CAAC,GAAGkB,QAAQ,CAAClB,CAAC,CAAC,EAAEY,IAAI,CAACW,GAAG,CAAChB,KAAK,CAACN,CAAC,GAAGiB,QAAQ,CAACjB,CAAC,CAAC,CAAC,IAAIkB,CAAC;EAAA,EACzF;EACD,OAAO;IAAEZ,KAAK,EAAAiB,QAAA,KAAQP,MAAM,CAACG,KAAK,CAAC,IAAI;MAAEpB,CAAC,EAAEyB,GAAG;MAAExB,CAAC,EAAEwB;IAAG,CAAE,CAAG;IAAEL,KAAK,EAAAA;EAAA,CAAE;AACvE,CAAC;AAEM,IAAMM,WAAW,GAAG,SAAAA,CAAC5B,EAAS,EAAEC,EAAS;EAC9C,OAAOa,IAAI,CAACe,KAAK,CAAC5B,EAAE,CAACC,CAAC,GAAGF,EAAE,CAACE,CAAC,EAAED,EAAE,CAACE,CAAC,GAAGH,EAAE,CAACG,CAAC,CAAC;AAC7C,CAAC;AAEM,IAAM2B,QAAQ,GAAG,SAAAA,CAAC9B,EAAS,EAAEC,EAAS;EAC3C,OAAOa,IAAI,CAACiB,KAAK,CAAC9B,EAAE,CAACE,CAAC,GAAGH,EAAE,CAACG,CAAC,EAAEF,EAAE,CAACC,CAAC,GAAGF,EAAE,CAACE,CAAC,CAAC;AAC7C,CAAC;AAEM,IAAM8B,gCAAgC,GAAG,SAAAA,CAC9CC,UAAiB,EACjBC,QAAe,EACfC,QAAgB;EAEhB,IAAMd,CAAC,GAAGO,WAAW,CAACK,UAAU,EAAEC,QAAQ,CAAC;EAC3C,IAAME,KAAK,GAAGN,QAAQ,CAACG,UAAU,EAAEC,QAAQ,CAAC;EAC5C,IAAMG,QAAQ,GAAGvB,IAAI,CAACC,KAAK,CAACqB,KAAK,GAAGD,QAAQ,CAAC,GAAGA,QAAQ;EACxD,OAAO;IACLjC,CAAC,EAAE+B,UAAU,CAAC/B,CAAC,GAAGmB,CAAC,GAAGP,IAAI,CAACwB,GAAG,CAACD,QAAQ,CAAC;IACxClC,CAAC,EAAE8B,UAAU,CAAC9B,CAAC,GAAGkB,CAAC,GAAGP,IAAI,CAACyB,GAAG,CAACF,QAAQ;GACxC;AACH,CAAC;AAEM,IAAMG,mBAAmB,GAAG,SAAAA,CACjCP,UAAiB,EACjBC,QAAe,EACfO,MAAgB;EAEhB,IAAMpB,CAAC,GAAGO,WAAW,CAACK,UAAU,EAAEC,QAAQ,CAAC;EAC3C,IAAME,KAAK,GAAGN,QAAQ,CAACG,UAAU,EAAEC,QAAQ,CAAC;EAC5C,IAAMQ,YAAY,GAAGD,MAAM,CAACE,MAAM,CAChC,UAACC,IAAI,EAAEC,GAAG;IAAK,OAAC/B,IAAI,CAACW,GAAG,CAACoB,GAAG,GAAGT,KAAK,CAAC,GAAGtB,IAAI,CAACW,GAAG,CAACmB,IAAI,GAAGR,KAAK,CAAC,GAAGS,GAAG,GAAGD,IAAI;EAAA,CAAC,EAC5EE,QAAQ,CACT;EACD,IAAIJ,YAAY,KAAKI,QAAQ,EAAE;IAC7BZ,QAAQ,CAAChC,CAAC,GAAG+B,UAAU,CAAC/B,CAAC,GAAGmB,CAAC,GAAGP,IAAI,CAACwB,GAAG,CAACI,YAAY,CAAC;IACtDR,QAAQ,CAAC/B,CAAC,GAAG8B,UAAU,CAAC9B,CAAC,GAAGkB,CAAC,GAAGP,IAAI,CAACyB,GAAG,CAACG,YAAY,CAAC;;EAExD,OAAOR,QAAQ;AACjB,CAAC;AAEM,IAAMa,4BAA4B,GAAG,SAAAA,CAAC5B,MAAe;EAC1D,IAAMsB,MAAM,GAAa,EAAE;EAC3B,KAAK,IAAI/B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGS,MAAM,CAACZ,MAAM,EAAEG,CAAC,EAAE,EAAE;IACtC,IAAMsC,KAAK,GAAGlC,IAAI,CAACiB,KAAK,CAACZ,MAAM,CAACT,CAAC,CAAC,CAACP,CAAC,GAAGgB,MAAM,CAACT,CAAC,GAAG,CAAC,CAAC,CAACP,CAAC,EAAEgB,MAAM,CAACT,CAAC,CAAC,CAACR,CAAC,GAAGiB,MAAM,CAACT,CAAC,GAAG,CAAC,CAAC,CAACR,CAAC,CAAC;IACtF,IAAM+C,MAAM,GAAGD,KAAK,GAAGlC,IAAI,CAACoC,EAAE;IAC9BT,MAAM,CAACU,IAAI,CAACH,KAAK,EAAEC,MAAM,GAAGnC,IAAI,CAACoC,EAAE,GAAGD,MAAM,GAAG,CAAC,GAAGnC,IAAI,CAACoC,EAAE,GAAGD,MAAM,CAAC;;EAEtE,OAAOR,MAAM,CAAC7C,MAAM,CAAC,UAACwD,GAAG,EAAEC,GAAG,EAAEC,GAAG;IAAK,OAAAA,GAAG,CAACC,OAAO,CAACH,GAAG,CAAC,KAAKC,GAAG;EAAA,EAAC;AACnE,CAAC;SAEeG,qBAAqBA,CACnCC,GAAW,EACXC,IAAa,EACbC,QAAgE,EAChEC,IAAW;EAAX,IAAAA,IAAA;IAAAA,IAAA,OAAW;EAAA;EAEX,IAAMC,KAAK,GAAG,IAAIC,KAAK,EAAE;EACzBD,KAAK,CAACE,WAAW,GAAG,WAAW;EAC/B,IAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;EAC/C,IAAMC,GAAG,GAAGH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;EACnC,IAAI,CAACD,GAAG,EAAE;IACR,OAAOR,QAAQ,CAAC,IAAIU,KAAK,CAAC,aAAa,CAAC,EAAEL,MAAM,CAAC;;EAEnDH,KAAK,CAACS,OAAO,GAAG;IACdX,QAAQ,CAAC,IAAIU,KAAK,CAAC,sBAAsB,CAAC,EAAEL,MAAM,CAAC;GACpD;EACDH,KAAK,CAACU,MAAM,GAAG;IACb,IAAI;MACFP,MAAM,CAACQ,KAAK,GAAGX,KAAK,CAACY,YAAY,GAAG,CAAC;MACrCT,MAAM,CAACU,MAAM,GAAGb,KAAK,CAACc,aAAa,GAAG,CAAC;MACvCR,GAAG,CAACS,SAAS,CAACf,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;MAC1B,IAAIH,IAAI,CAACnD,MAAM,GAAG,CAAC,EAAE;QACnBoD,QAAQ,CAAC,IAAI,EAAEK,MAAM,CAAC;QACtB;;MAEFG,GAAG,CAACU,SAAS,EAAE;MACfV,GAAG,CAACW,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;MAChBX,GAAG,CAACY,MAAM,CAACf,MAAM,CAACQ,KAAK,EAAE,CAAC,CAAC;MAC3BL,GAAG,CAACY,MAAM,CAACf,MAAM,CAACQ,KAAK,EAAER,MAAM,CAACU,MAAM,CAAC;MACvCP,GAAG,CAACY,MAAM,CAAC,CAAC,EAAEf,MAAM,CAACU,MAAM,CAAC;MAC5BP,GAAG,CAACY,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;MAChBZ,GAAG,CAACY,MAAM,CAACrB,IAAI,CAAC,CAAC,CAAC,CAACxD,CAAC,GAAG,CAAC,EAAEwD,IAAI,CAAC,CAAC,CAAC,CAACvD,CAAC,GAAG,CAAC,CAAC;MACxCuD,IAAI,CAACsB,KAAK,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,UAACrE,EAAQ;YAANV,CAAC,GAAAU,EAAA,CAAAV,CAAA;UAAEC,CAAC,GAAAS,EAAA,CAAAT,CAAA;QAAO,OAAAgE,GAAG,CAACY,MAAM,CAAC7E,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAG,CAAC,CAAC;OAAA,CAAC;MAC7DgE,GAAG,CAACY,MAAM,CAACrB,IAAI,CAAC,CAAC,CAAC,CAACxD,CAAC,GAAG,CAAC,EAAEwD,IAAI,CAAC,CAAC,CAAC,CAACvD,CAAC,GAAG,CAAC,CAAC;MACxCgE,GAAG,CAACY,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;MAChBZ,GAAG,CAACe,SAAS,EAAE;MACff,GAAG,CAACgB,IAAI,CAAC,SAAS,CAAC;MACnBhB,GAAG,CAACiB,wBAAwB,GAAG,iBAAiB;MAChDjB,GAAG,CAACkB,IAAI,EAAE;MACV,IAAIzB,IAAI,EAAE;QACR,IAAM0B,KAAK,GAAG5B,IAAI,CAAC6B,GAAG,CAAC,UAAC3E,EAAK;cAAHV,CAAC,GAAAU,EAAA,CAAAV,CAAA;UAAO,OAAAA,CAAC,GAAG,CAAC;SAAA,CAAC;QACxC,IAAMsF,KAAK,GAAG9B,IAAI,CAAC6B,GAAG,CAAC,UAAC3E,EAAK;cAAHT,CAAC,GAAAS,EAAA,CAAAT,CAAA;UAAO,OAAAA,CAAC,GAAG,CAAC;SAAA,CAAC;QAClC,IAAAS,EAAA,GAAe,CAACE,IAAI,CAAC2E,GAAG,CAACC,KAAK,CAAC,IAAI,EAAEJ,KAAK,CAAC,EAAExE,IAAI,CAAC2E,GAAG,CAACC,KAAK,CAAC,IAAI,EAAEF,KAAK,CAAC,CAAC;UAAxEG,IAAI,GAAA/E,EAAA;UAAEgF,IAAI,GAAAhF,EAAA,GAA8D;QACzE,IAAAiF,EAAA,GAAe,CAAC/E,IAAI,CAACU,GAAG,CAACkE,KAAK,CAAC,IAAI,EAAEJ,KAAK,CAAC,EAAExE,IAAI,CAACU,GAAG,CAACkE,KAAK,CAAC,IAAI,EAAEF,KAAK,CAAC,CAAC;UAAxEM,IAAI,GAAAD,EAAA;UAAEE,IAAI,GAAAF,EAAA,GAA8D;QACzE,IAAAG,EAAA,GAAkB,CAACF,IAAI,GAAGH,IAAI,EAAEI,IAAI,GAAGH,IAAI,CAAC;UAA3CpB,KAAK,GAAAwB,EAAA;UAAEtB,MAAM,GAAAsB,EAAA,GAA8B;QAClD,IAAMC,SAAS,GAAG9B,GAAG,CAAC+B,YAAY,CAACP,IAAI,EAAEC,IAAI,EAAEpB,KAAK,EAAEE,MAAM,CAAC;QAC7DV,MAAM,CAACQ,KAAK,GAAGA,KAAK;QACpBR,MAAM,CAACU,MAAM,GAAGA,MAAM;QACtBP,GAAG,CAACgC,YAAY,CAACF,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC;;MAEnCtC,QAAQ,CAAC,IAAI,EAAEK,MAAM,CAAC;KACvB,CAAC,OAAOoC,GAAG,EAAE;MACZzC,QAAQ,CAACyC,GAAG,YAAY/B,KAAK,GAAG+B,GAAG,GAAG,IAAI/B,KAAK,CAACgC,MAAM,CAACD,GAAG,CAAC,CAAC,EAAEpC,MAAM,CAAC;;GAExE;EACDH,KAAK,CAACJ,GAAG,GAAGA,GAAG;AACjB;AC3JA,IAAA6C,SAAA;EAEE,SAAAA,UAAYC,aAAqD;IAC/D,IAAI,CAACA,aAAa,GAAGA,aAAa;;EAEpCD,SAAA,CAAAE,SAAA,CAAAC,MAAM,GAAN;IACE,IAAMC,GAAG,GAAG,IAAI,CAACH,aAAa,EAAE;IAChC,IAAI,CAACG,GAAG,EAAE,MAAM,IAAIrC,KAAK,CAAC,aAAa,CAAC;IACxC,OAAOqC,GAAG;GACX;EACDJ,SAAA,CAAAE,SAAA,CAAAG,MAAM,GAAN;IACE,IAAMD,GAAG,GAAG,IAAI,CAACD,MAAM,EAAE;IACzB,IAAIG,GAAG,GAAGF,GAAG,CAACC,MAAM,EAAE;IACtB,IAAIC,GAAG,KAAK,IAAI,EAAE;;MAEhB,IAAMC,QAAQ,GAAGH,GAAG,CAACI,aAAa,CAAC,2BAA2B,CAAmB;MACjFF,GAAG,GAAGC,QAAQ,CAACF,MAAM,EAAE;;IAEzB,IAAI,CAACC,GAAG,EAAE,MAAM,IAAIvC,KAAK,CAAC,aAAa,CAAC;IACxC,OAAOuC,GAAG;GACX;EACDN,SAAA,CAAAE,SAAA,CAAAO,cAAc,GAAd;IACE,OAAO,IAAI,CAACN,MAAM,EAAE,CAACO,OAAO,CAACC,OAAO;GACrC;EACDX,SAAA,CAAAE,SAAA,CAAAU,WAAW,GAAX;IACE,IAAMR,GAAG,GAAG,IAAI,CAACD,MAAM,EAAE;;IAEzB,OAAO;MACLjC,KAAK,EAAEkC,GAAG,CAACS,WAAW;MACtBzC,MAAM,EAAEgC,GAAG,CAACU;KACb;GACF;EACDd,SAAA,CAAAE,SAAA,CAAAa,gBAAgB,GAAhB;IACE,IAAMX,GAAG,GAAG,IAAI,CAACD,MAAM,EAAE;IACnB,IAAA7F,EAAA,GAAqC,IAAI,CAACsG,WAAW,EAAE;MAA9CI,MAAM,GAAA1G,EAAA,CAAA4D,KAAA;MAAU+C,OAAO,GAAA3G,EAAA,CAAA8D,MAAuB;IACvD,IAAAmB,EAAA,GAAqC,IAAI,CAACkB,cAAc,EAAE;MAAjDS,MAAM,GAAA3B,EAAA,CAAArB,KAAA;MAAUiD,OAAO,GAAA5B,EAAA,CAAAnB,MAA0B;IAChE,IAAMjE,KAAK,GAAGf,MAAM,CAACgI,MAAM,CAAChB,GAAG,CAACiB,cAAc,EAAE,EAAE;MAChDzH,CAAC,EAAEoH,MAAM;MACTnH,CAAC,EAAEoH;KACJ,CAAC;IACF,IAAMX,GAAG,GAAG,IAAI,CAACD,MAAM,EAAE;IACnB,IAAAX,EAAA,GAAWvF,KAAK,CAACmH,eAAe,CAAChB,GAAG,CAACiB,OAAO,EAAE,CAAC;MAA7C3H,CAAC,GAAA8F,EAAA,CAAA9F,CAAA;MAAEC,CAAC,GAAA6F,EAAA,CAAA7F,CAAyC;;IAErD,OAAO;MACLD,CAAC,EAAEA,CAAC,GAAGsH,MAAM;MACbrH,CAAC,EAAEA,CAAC,GAAGsH;KACR;GACF;EACDnB,SAAA,CAAAE,SAAA,CAAAsB,0BAA0B,GAA1B,UAA2B3G,MAAe;IACxC,IAAMuF,GAAG,GAAG,IAAI,CAACD,MAAM,EAAE;IACzB,IAAMG,GAAG,GAAG,IAAI,CAACD,MAAM,EAAE;IACzB,OAAOxF,MAAM,CAACoE,GAAG,CAAC,UAAC3E,EAAQ;UAANV,CAAC,GAAAU,EAAA,CAAAV,CAAA;QAAEC,CAAC,GAAAS,EAAA,CAAAT,CAAA;MACvB,IAAMU,CAAC,GAAGnB,MAAM,CAACgI,MAAM,CAAChB,GAAG,CAACiB,cAAc,EAAE,EAAE;QAAEzH,CAAC,EAAAA,CAAA;QAAEC,CAAC,EAAAA;MAAA,CAAE,CAAC,CAACyH,eAAe,CAAChB,GAAG,CAAC;MAC5E,OAAOjG,qBAAqB,CAACE,CAAC,CAAC;KAChC,CAAC;GACH;EACDyF,SAAA,CAAAE,SAAA,CAAAuB,0BAA0B,GAA1B,UAA2B5G,MAAe;IACxC,IAAMuF,GAAG,GAAG,IAAI,CAACD,MAAM,EAAE;IACzB,IAAMG,GAAG,GAAG,IAAI,CAACD,MAAM,EAAE,CAACkB,OAAO,EAAE;IACnC,OAAO1G,MAAM,CAACoE,GAAG,CAAC,UAAC3E,EAAQ;UAANV,CAAC,GAAAU,EAAA,CAAAV,CAAA;QAAEC,CAAC,GAAAS,EAAA,CAAAT,CAAA;MACvB,IAAMU,CAAC,GAAGnB,MAAM,CAACgI,MAAM,CAAChB,GAAG,CAACiB,cAAc,EAAE,EAAE;QAAEzH,CAAC,EAAAA,CAAA;QAAEC,CAAC,EAAAA;MAAA,CAAE,CAAC,CAACyH,eAAe,CAAChB,GAAG,CAAC;MAC5E,OAAOjG,qBAAqB,CAACE,CAAC,EAAE,GAAG,CAAC;KACrC,CAAC;GACH;EACDyF,SAAA,CAAAE,SAAA,CAAAwB,eAAe,GAAf,UAAgBC,WAAkB;IAAlB,IAAAA,WAAA;MAAAA,WAAA,OAAkB;IAAA;IAC1B,IAAArH,EAAA,GAAoB,IAAI,CAACmG,cAAc,EAAE;MAAvCvC,KAAK,GAAA5D,EAAA,CAAA4D,KAAA;MAAEE,MAAM,GAAA9D,EAAA,CAAA8D,MAA0B;IACzC,IAAAmB,EAAA,GAA6B,IAAI,CAACwB,gBAAgB,EAAE;MAA/Ca,OAAO,GAAArC,EAAA,CAAA3F,CAAA;MAAKiI,OAAO,GAAAtC,EAAA,CAAA1F,CAA4B;IAC1D,IAAMmD,GAAG,GAAY,CACnB;MAAEpD,CAAC,EAAE,CAACgI,OAAO;MAAE/H,CAAC,EAAE,CAACgI;IAAO,CAAE,EAC5B;MAAEjI,CAAC,EAAEsE,KAAK,GAAG0D,OAAO;MAAE/H,CAAC,EAAE,CAACgI;IAAO,CAAE,EACnC;MAAEjI,CAAC,EAAEsE,KAAK,GAAG0D,OAAO;MAAE/H,CAAC,EAAEuE,MAAM,GAAGyD;IAAO,CAAE,EAC3C;MAAEjI,CAAC,EAAE,CAACgI,OAAO;MAAE/H,CAAC,EAAEuE,MAAM,GAAGyD;IAAO,CAAE,CACrC;IACD,IAAIF,WAAW,EAAE;MACf3E,GAAG,CAACH,IAAI,CAAC;QAAEjD,CAAC,EAAE,CAACgI,OAAO;QAAE/H,CAAC,EAAE,CAACgI;MAAO,CAAE,CAAC;;IAExC,OAAO7E,GAAG;GACX;EACDgD,SAAA,CAAAE,SAAA,CAAA4B,gBAAgB,GAAhB,UAAiBxH,EAAe;QAAbV,CAAC,GAAAU,EAAA,CAAAV,CAAA;MAAEC,CAAC,GAAAS,EAAA,CAAAT,CAAA;IACf,IAAA0F,EAAA,GAAoB,IAAI,CAACkB,cAAc,EAAE;MAAvCvC,KAAK,GAAAqB,EAAA,CAAArB,KAAA;MAAEE,MAAM,GAAAmB,EAAA,CAAAnB,MAA0B;IACzC,IAAAsB,EAAA,GAA6B,IAAI,CAACqB,gBAAgB,EAAE;MAA/Ca,OAAO,GAAAlC,EAAA,CAAA9F,CAAA;MAAKiI,OAAO,GAAAnC,EAAA,CAAA7F,CAA4B;IAC1D,OAAOD,CAAC,GAAG,CAACgI,OAAO,IAAIhI,CAAC,GAAGsE,KAAK,GAAG0D,OAAO,IAAI/H,CAAC,GAAG,CAACgI,OAAO,IAAIhI,CAAC,GAAGuE,MAAM,GAAGyD,OAAO;GACnF;EACD7B,SAAA,CAAAE,SAAA,CAAA6B,mBAAmB,GAAnB,UAAoBC,KAAuC;IACzD,IAAMC,CAAC,GAAGD,KACuB;IAC3B,IAAA1H,EAAA,GACJ2H,CAAC,CAACC,cAAc,IAAID,CAAC,CAACE,OAAO,GAAGF,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC,IAAID,CAAC,CAACE,OAAO,CAAC,CAAC,CAAC,GAAGF,CAAC;MADjEG,OAAO,GAAA9H,EAAA,CAAA8H,OAAA;MAAEC,OAAO,GAAA/H,EAAA,CAAA+H,OACiD;IACzE,IAAMjC,GAAG,GAAG,IAAI,CAACD,MAAM,EAAE;IACzB,IAAMG,GAAG,GAAGF,GAAG,CAACkC,YAAY,EAAE;IAC9B,IAAI,CAAChC,GAAG,EAAE,MAAM,IAAIvC,KAAK,CAAC,mBAAmB,CAAC;IAC9C,IAAM5D,KAAK,GAAGiG,GAAG,CAACiB,cAAc,EAAE;IAClClH,KAAK,CAACP,CAAC,GAAGwI,OAAO;IACjBjI,KAAK,CAACN,CAAC,GAAGwI,OAAO;IACX,IAAA9C,EAAA,GAAWpF,KAAK,CAACmH,eAAe,CAAChB,GAAG,CAACiB,OAAO,EAAE,CAAC;MAA7C3H,CAAC,GAAA2F,EAAA,CAAA3F,CAAA;MAAEC,CAAC,GAAA0F,EAAA,CAAA1F,CAAyC;IACrD,OAAO;MAAED,CAAC,EAAAA,CAAA;MAAEC,CAAC,EAAAA;IAAA,CAAE;GAChB;EACH,OAAAmG,SAAC;AAAD,CAAC;;ACvFD;AACO,IAAMuC,aAAa,GAAG,SAAAA,CAAmBC,SAAiC;EAC/E,8BAAAC,MAAA;IAA2BC,SAAA,CAAAC,YAAA,EAAAF,MAAA;IAA3B,SAAAE,aAAA;MAAA,IAAAC,KAAA,GAAAH,MAAA,aAAAA,MAAA,CAAArD,KAAA,OAAAyD,SAAA;MACSD,KAAA,CAAAE,GAAG,GAAGC,KAAK,CAACC,SAAS,EAAiB;MACtCJ,KAAA,CAAAxC,GAAG,GAAG,IAAIJ,SAAS,CAAC;QAAA,IAAA1F,EAAA,EAAAiF,EAAA;QAAM,QAAAA,EAAA,IAAAjF,EAAA,GAAAsI,KAAI,CAACE,GAAG,cAAAxI,EAAA,uBAAAA,EAAA,CAAE2I,OAAO,cAAA1D,EAAA,uBAAAA,EAAA,CAAE2D,eAAe;MAAA,EAAC;MAC7DN,KAAA,CAAAO,gBAAgB,GAAiB,IAAI;MACrCP,KAAA,CAAAQ,QAAQ,GAAG,KAAK;MAwCvBR,KAAA,CAAAS,gBAAgB,GAAG,UAACpB,CAA0B;QAC5C,IAAIA,CAAC,CAACqB,MAAM,KAAKV,KAAI,CAACE,GAAG,CAACG,OAAO,IAAIL,KAAI,CAACW,KAAK,CAACC,SAAS,EAAE;UACzDvB,CAAC,CAACwB,wBAAwB,EAAE;UAC5BxB,CAAC,CAACyB,cAAc,EAAE;UAClB,IAAMJ,MAAM,GAAGrB,CAAC,CAACqB,MAAqC;UACtDV,KAAI,CAACO,gBAAgB,GAAGP,KAAI,CAACe,gBAAgB,CAAC1B,CAAC,CAAC;UAChD,IAAIqB,MAAM,CAACJ,eAAe,EAAE;YAC1BI,MAAM,CAACJ,eAAe,CAACU,KAAK,CAAC;cAAEC,aAAa,EAAE;YAAI,CAAE,CAAC;;;OAG1D;MACDjB,KAAA,CAAAkB,gBAAgB,GAAG,UAAC7B,CAA0B;QAC5C,IAAIW,KAAI,CAACO,gBAAgB,EAAE;UACzBlB,CAAC,CAACwB,wBAAwB,EAAE;UAC5BxB,CAAC,CAACyB,cAAc,EAAE;UACZ,IAAApJ,EAAA,GAAWsI,KAAI,CAACe,gBAAgB,CAAC1B,CAAC,CAAC;YAAjCrI,CAAC,GAAAU,EAAA,CAAAV,CAAA;YAAEC,CAAC,GAAAS,EAAA,CAAAT,CAA6B;UACzC,IAAMkK,EAAE,GAAGnK,CAAC,GAAGgJ,KAAI,CAACO,gBAAgB,CAACvJ,CAAC;UACtC,IAAMoK,EAAE,GAAGnK,CAAC,GAAG+I,KAAI,CAACO,gBAAgB,CAACtJ,CAAC;UACtC,IAAI,CAAC+I,KAAI,CAACQ,QAAQ,IAAIR,KAAI,CAACW,KAAK,CAACU,WAAW,EAAE;YAC5CrB,KAAI,CAACW,KAAK,CAACU,WAAW,CAAC;cACrBrK,CAAC,EAAEgJ,KAAI,CAACO,gBAAgB,CAACvJ,CAAC;cAC1BC,CAAC,EAAE+I,KAAI,CAACO,gBAAgB,CAACtJ,CAAC;cAC1BkK,EAAE,EAAAA,EAAA;cACFC,EAAE,EAAAA;aACH,CAAC;;UAEJ,IAAIpB,KAAI,CAACW,KAAK,CAACW,MAAM,EAAE;YACrBtB,KAAI,CAACW,KAAK,CAACW,MAAM,CAAC;cAAEH,EAAE,EAAAA,EAAA;cAAEC,EAAE,EAAAA;YAAA,CAAE,CAAC;;UAE/BpB,KAAI,CAACO,gBAAgB,GAAG;YAAEvJ,CAAC,EAAAA,CAAA;YAAEC,CAAC,EAAAA;UAAA,CAAE;UAChC+I,KAAI,CAACQ,QAAQ,GAAG,IAAI;;OAEvB;MACDR,KAAA,CAAAuB,cAAc,GAAG,UAAClC,CAA0B;QAC1C,IAAIW,KAAI,CAACO,gBAAgB,IAAIP,KAAI,CAACQ,QAAQ,EAAE;UAC1CnB,CAAC,CAACwB,wBAAwB,EAAE;UAC5BxB,CAAC,CAACyB,cAAc,EAAE;UAClB,IAAIzB,CAAC,YAAYmC,UAAU,IAAI,CAACnC,CAAC,CAACE,OAAO,EAAE;YACzCkC,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAE,UAACrC,CAAC;cAAK,OAAAA,CAAC,CAACsC,eAAe,EAAE;YAAA,GAAE;cAC3DC,OAAO,EAAE,IAAI;cACbC,IAAI,EAAE;aACP,CAAC;;UAEJ,IAAI7B,KAAI,CAACW,KAAK,CAACmB,SAAS,EAAE;YACxB9B,KAAI,CAACW,KAAK,CAACmB,SAAS,CAAC;cACnB9K,CAAC,EAAEgJ,KAAI,CAACO,gBAAgB,CAACvJ,CAAC;cAC1BC,CAAC,EAAE+I,KAAI,CAACO,gBAAgB,CAACtJ;aAC1B,CAAC;;;QAGN+I,KAAI,CAACO,gBAAgB,GAAG,IAAI;QAC5BP,KAAI,CAACQ,QAAQ,GAAG,KAAK;OACtB;;;IA3FDT,YAAA,CAAAzC,SAAA,CAAAyE,MAAM,GAAN;UACQrK,EAAA,GAAyD,IAAI,CAACiJ,KAAK;QAAjEC,SAAS,GAAAlJ,EAAA,CAAAkJ,SAAA;MAAAlJ,EAAA,CAAA4J,MAAQ;MAAA5J,EAAA,CAAA2J,WAAa;MAAA3J,EAAA,CAAAoK,SAAW;MAAA,IAAKE,IAAI,GAAAC,MAAA,CAAAvK,EAAA,EAApD,mDAAsD;MAC5D,OAAOyI,KAAA,CAAAnF,aAAA,CAAC4E,SAAS,EAAApH,QAAA;QAAC0H,GAAG,EAAE,IAAI,CAACA;MAAG,GAAO8B,IAAU;QAAEpB,SAAS,EAAEA;MAAS,GAAI;KAC3E;IACDb,YAAA,CAAAzC,SAAA,CAAA4E,kBAAkB,GAAlB,UAAmBC,SAA6B;MAC9C,IAAIA,SAAS,CAACvB,SAAS,IAAI,CAAC,IAAI,CAACD,KAAK,CAACC,SAAS,EAAE;;QAEhD,IAAI,IAAI,CAACL,gBAAgB,IAAI,IAAI,CAACC,QAAQ,EAAE;UAC1C,IAAI,IAAI,CAACG,KAAK,CAACmB,SAAS,EAAE;YACxB,IAAI,CAACnB,KAAK,CAACmB,SAAS,CAAC;cACnB9K,CAAC,EAAE,IAAI,CAACuJ,gBAAgB,CAACvJ,CAAC;cAC1BC,CAAC,EAAE,IAAI,CAACsJ,gBAAgB,CAACtJ;aAC1B,CAAC;;UAEJ,IAAI,CAACsJ,gBAAgB,GAAG,IAAI;UAC5B,IAAI,CAACC,QAAQ,GAAG,KAAK;;;KAG1B;IACDT,YAAA,CAAAzC,SAAA,CAAA8E,iBAAiB,GAAjB;MACEX,MAAM,CAACC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAACjB,gBAAgB,EAAE,IAAI,CAAC;MACjEgB,MAAM,CAACC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAACR,gBAAgB,EAAE,IAAI,CAAC;MACjEO,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAACH,cAAc,EAAE,IAAI,CAAC;MAC7DE,MAAM,CAACC,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAACjB,gBAAgB,EAAE,IAAI,CAAC;MAClEgB,MAAM,CAACC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAACR,gBAAgB,EAAE,IAAI,CAAC;MACjEO,MAAM,CAACC,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAACH,cAAc,EAAE,IAAI,CAAC;KAC/D;IACDxB,YAAA,CAAAzC,SAAA,CAAA+E,oBAAoB,GAApB;MACEZ,MAAM,CAACa,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC7B,gBAAgB,CAAC;MAC9DgB,MAAM,CAACa,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAACpB,gBAAgB,CAAC;MAC9DO,MAAM,CAACa,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAACf,cAAc,CAAC;MAC1DE,MAAM,CAACa,mBAAmB,CAAC,YAAY,EAAE,IAAI,CAAC7B,gBAAgB,CAAC;MAC/DgB,MAAM,CAACa,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAACpB,gBAAgB,CAAC;MAC9DO,MAAM,CAACa,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAACf,cAAc,CAAC;KAC5D;IACDxB,YAAA,CAAAzC,SAAA,CAAAyD,gBAAgB,GAAhB,UAAiBwB,EAA2B;MAC1C,IAAMlD,CAAC,GAAIkD,EAAkD;MAC7D,OAAO,IAAI,CAAC/E,GAAG,CAAC2B,mBAAmB,CAACE,CAAC,CAAC;KACvC;IAsDH,OAAAU,YAAC;GAAA,CAjG0BI,KAAK,CAACP,SAAS;AAA1C,CAiGC;ACrGI,IAAM4C,WAAW,GAAG7C,aAAa,CACtCQ,KAAK,CAACsC,UAAU,CAAuC,SAASD,WAAWA,CACzE9K,EAA4B,EAC5BwI,GAAG;MADD1F,IAAI,GAAA9C,EAAA,CAAA8C,IAAA;IAAEkI,OAAO,GAAAhL,EAAA,CAAAgL,OAAA;IAAE9B,SAAS,GAAAlJ,EAAA,CAAAkJ,SAAA;EAG1B,OACET,KAAA,CAAAnF,aAAA;IACEkF,GAAG,EAAEA,GAAG;IACRyC,KAAK,EAAE;MAAEC,MAAM,EAAEhC,SAAS,GAAG,MAAM,GAAG;IAAE,CAAE;IAC1C3I,MAAM,EAAEuC,IAAI,CAAC6B,GAAG,CAAC,UAAC3E,EAAQ;UAANV,CAAC,GAAAU,EAAA,CAAAV,CAAA;QAAEC,CAAC,GAAAS,EAAA,CAAAT,CAAA;MAAO,OAAGD,CAAC,SAAIC,CAAG;KAAA,CAAC,CAACL,IAAI,CAAC,GAAG,CAAC;IACrDuF,IAAI,EAAC,eAAe;IACpB0G,MAAM,EAAC,OAAO;IACdC,WAAW,EAAC,KAAK;IACjBC,cAAc,EAAC,oBAAoB;IACnCC,eAAe,EAAC,GAAG;IACnBC,gBAAgB,EAAC,GAAG;IACpBC,YAAY,EAAC;EAAoB,GAEhCR,OAAO,IACNvC,KAAA,CAAAnF,aAAA;IACEmI,aAAa,EAAC,mBAAmB;IACjCC,MAAM,EAAC,UAAU;IACjBC,GAAG,EAAC,MAAM;IACVC,WAAW,EAAC;EAAY,EAE3B,CACQ;AAEf,CAAC,CAAC,CACH;SChCeC,UAAUA,CAAC7L,EAAyB;MAAvB8C,IAAI,GAAA9C,EAAA,CAAA8C,IAAA;EAC/B,OACE2F,KAAA,CAAAnF,aAAA;IACE2H,KAAK,EAAE;MACLa,aAAa,EAAE,MAAM;MACrBC,SAAS,EAAE;KACZ;IACDxL,MAAM,EAAEuC,IAAI,CAAC6B,GAAG,CAAC,UAAC3E,EAAQ;UAANV,CAAC,GAAAU,EAAA,CAAAV,CAAA;QAAEC,CAAC,GAAAS,EAAA,CAAAT,CAAA;MAAO,OAAGD,CAAC,SAAIC,CAAG;KAAA,CAAC,CAACL,IAAI,CAAC,GAAG,CAAC;IACrDuF,IAAI,EAAC,oBAAoB;IACzBuH,QAAQ,EAAC,SAAS;IAClBb,MAAM,EAAC,MAAM;IACbE,cAAc,EAAC;EAAoB,EACnC;AAEN;ACXO,IAAMY,QAAQ,GAAGhE,aAAa,CACnCQ,KAAK,CAACsC,UAAU,CAAgC,SAASkB,QAAQA,CAC/DjM,EAA6C,EAC7CwI,GAAG;MADDlJ,CAAC,GAAAU,EAAA,CAAAV,CAAA;IAAEC,CAAC,GAAAS,EAAA,CAAAT,CAAA;IAAE2M,iBAAiB,GAAAlM,EAAA,CAAAkM,iBAAA;IAAEhD,SAAS,GAAAlJ,EAAA,CAAAkJ,SAAA;IAAE+B,KAAK,GAAAjL,EAAA,CAAAiL,KAAA;EAGnC,IAAAhG,EAAA,GAAqDgG,KAAK,CAAAC,MAAnB;IAAvCA,MAAM,GAAAjG,EAAA,cAAGiE,SAAS,GAAG,MAAM,GAAG,SAAS,GAAAjE,EAAA;IAAKqF,IAAI,GAAAC,MAAA,CAAKU,KAAK,EAA5D,UAAoD,CAAF;EACxD,OACExC,KAAA,CAAAnF,aAAA;IACE2H,KAAK,EAAAnK,QAAA;MACHoK,MAAM,EAAAA;IAAA,GACHZ,IAAI;IAET9B,GAAG,EAAEA,GAAG;IACRlJ,CAAC,EAAEA,CAAC,GAAG,EAAE;IACTC,CAAC,EAAEA,CAAC,GAAG,EAAE;IACT4M,OAAO,EAAE,SAAAA,CAACxE,CAAC;MACTA,CAAC,CAACsC,eAAe,EAAE;MACnBtC,CAAC,CAACyB,cAAc,EAAE;MAClB8C,iBAAiB,CAACvE,CAAC,CAAC;KACrB;IACDyE,UAAU,EAAE,SAAAA,CAACzE,CAAC;MACZA,CAAC,CAACsC,eAAe,EAAE;MACnBtC,CAAC,CAACyB,cAAc,EAAE;MAClB8C,iBAAiB,CAACvE,CAAC,CAAC;KACrB;IACD/D,KAAK,EAAC,MAAM;IACZE,MAAM,EAAC,IAAI;IACXW,IAAI,EAAC,kBAAkB;IACvB0G,MAAM,EAAC,OAAO;IACdC,WAAW,EAAC,MAAM;IAClBI,YAAY,EAAC;EAAoB,EAEjC;AAEN,CAAC,CAAC,CACH;AC3CD,IAAYa,WAOX;AAPD,WAAYA,WAAW;EACrBA,WAAA,eAAW;EACXA,WAAA,qBAAiB;EACjBA,WAAA,qBAAiB;EACjBA,WAAA,iBAAa;EACbA,WAAA,mBAAe;EACfA,WAAA,qBAAiB;AACnB,CAAC,EAPWA,WAAW,KAAXA,WAAW;SAqBPC,WAAWA,CAACC,KAAgB,EAAEC,MAAyB;EACrE,IAAM7M,MAAM,GAAG4M,KAAK,CAAChM,MAAM,CAACZ,MAAM;EAClC,QAAQ6M,MAAM,CAACC,IAAI;IACjB,KAAKJ,WAAW,CAACK,GAAG;MAAE;QACpB,IAAIH,KAAK,CAACI,MAAM,EAAE,OAAO,CAACJ,KAAK,EAAE,KAAK,CAAC;QACvC,IACG5M,MAAM,GAAG,CAAC,IAAIR,cAAc,CAACoN,KAAK,CAAChM,MAAM,CAACZ,MAAM,GAAG,CAAC,CAAC,EAAE6M,MAAM,CAACI,OAAO,CAAC,IACtEjN,MAAM,GAAG,CAAC,IAAIR,cAAc,CAACoN,KAAK,CAAChM,MAAM,CAACZ,MAAM,GAAG,CAAC,CAAC,EAAE6M,MAAM,CAACI,OAAO,CAAE,EACxE;UACA,OAAO,CAACL,KAAK,EAAE,KAAK,CAAC;;QAEvB,IAAMM,cAAc,GAAGlN,MAAM,GAAG,CAAC,IAAIR,cAAc,CAACoN,KAAK,CAAChM,MAAM,CAAC,CAAC,CAAC,EAAEiM,MAAM,CAACI,OAAO,CAAC;QACpF,IAAIC,cAAc,EAAE,OAAO,CAAC;UAAEtM,MAAM,EAAAuM,aAAA,KAAMP,KAAK,CAAChM,MAAA,CAAO;UAAEoM,MAAM,EAAE;QAAI,CAAE,EAAE,IAAI,CAAC;QAC9E,OAAO,CAAC;UAAEpM,MAAM,EAAAuM,aAAA,CAAAA,aAAA,KAAMP,KAAK,CAAChM,MAAM,UAAEiM,MAAM,CAACI,OAAO,EAAC;UAAED,MAAM,EAAE;QAAK,CAAE,EAAE,IAAI,CAAC;;IAE7E,KAAKN,WAAW,CAACU,MAAM;MAAE;QACvB,OAAO,CACL;UACExM,MAAM,EAAAuM,aAAA,KAAMP,KAAK,CAAChM,MAAM,CAACvB,MAAM,CAAC,UAACgO,CAAC,EAAEvK,GAAG;YAAK,OAAA+J,MAAM,CAACI,OAAO,KAAKnK,GAAG;UAAA,GAAE;UACpEkK,MAAM,EAAEhN,MAAM,GAAG,CAAC,IAAI4M,KAAK,CAACI;SAC7B,EACD,IAAI,CACL;;IAEH,KAAKN,WAAW,CAACY,MAAM;MAAE;QACjB,IAAAjN,EAAA,GAAmBuM,KAAK,CAAChM,MAAM,CAACiM,MAAM,CAACI,OAAO,CAAClM,KAAK,CAAC;UAAhDwM,IAAE,GAAAlN,EAAA,CAAAV,CAAA;UAAK6N,IAAE,GAAAnN,EAAA,CAAAT,CAAuC;QAC3D,IAAM6N,SAAS,GAAGb,KAAK,CAAChM,MAAM,CAACoE,GAAG,CAAC,UAAC3E,EAAQ;cAANV,CAAC,GAAAU,EAAA,CAAAV,CAAA;YAAEC,CAAC,GAAAS,EAAA,CAAAT,CAAA;UACxC,IAAID,CAAC,KAAK4N,IAAE,IAAI3N,CAAC,KAAK4N,IAAE,EAAE;YACxB,OAAO;cACL7N,CAAC,EAAEkN,MAAM,CAACI,OAAO,CAACtN,CAAC;cACnBC,CAAC,EAAEiN,MAAM,CAACI,OAAO,CAACrN;aACnB;;UAEH,OAAO;YAAED,CAAC,EAAAA,CAAA;YAAEC,CAAC,EAAAA;UAAA,CAAE;SAChB,CAAC;QACF,OAAO,CACL;UAAEgB,MAAM,EAAE6M,SAAS;UAAET,MAAM,EAAEJ,KAAK,CAACI;QAAM,CAAE,EAC3C,CAAC,EAAEH,MAAM,CAACI,OAAO,CAACtN,CAAC,IAAIkN,MAAM,CAACI,OAAO,CAACrN,CAAC,CAAC,CACzC;;IAEH,KAAK8M,WAAW,CAACgB,IAAI;MAAE;QACrB,OAAO,CACL;UACE9M,MAAM,EAAEgM,KAAK,CAAChM,MAAM,CAACoE,GAAG,CAAC,UAAC3E,EAAQ;gBAANV,CAAC,GAAAU,EAAA,CAAAV,CAAA;cAAEC,CAAC,GAAAS,EAAA,CAAAT,CAAA;YAAO,OAAC;cACtCD,CAAC,EAAEA,CAAC,GAAGkN,MAAM,CAACI,OAAO,CAACtN,CAAC;cACvBC,CAAC,EAAEA,CAAC,GAAGiN,MAAM,CAACI,OAAO,CAACrN;aACvB;WAAC,CAAC;UACHoN,MAAM,EAAEJ,KAAK,CAACI;SACf,EACD,CAAC,EAAEH,MAAM,CAACI,OAAO,CAACtN,CAAC,IAAIkN,MAAM,CAACI,OAAO,CAACrN,CAAC,CAAC,CACzC;;IAEH,KAAK8M,WAAW,CAACiB,MAAM;MAAE;QACvB,IAAMC,WAAW,GAAG,CAAC/N,iBAAiB,CAACgN,MAAM,CAACI,OAAO,EAAEL,KAAK,CAAChM,MAAM,CAAC;QACpE,OAAO,CACL;UACEA,MAAM,EAAEiM,MAAM,CAACI,OAAO;UACtBD,MAAM,EAAEY,WAAW,GAAGf,MAAM,CAACI,OAAO,CAACjN,MAAM,GAAG,CAAC,GAAG4M,KAAK,CAACI;SACzD,EACDY,WAAW,CACZ;;IAEH,KAAKlB,WAAW,CAACmB,KAAK;MACpB,OAAO,CAAC;QAAEjN,MAAM,EAAE,EAAE;QAAEoM,MAAM,EAAE;MAAK,CAAE,EAAE,CAAC,CAACJ,KAAK,CAAChM,MAAM,CAACZ,MAAM,CAAC;IAC/D;MACE,OAAO,CAAC4M,KAAK,EAAE,KAAK,CAAC;;AAE3B;;EC7CgCnE,SAAA,CAAAqF,UAAA,EAAAtF,MAAA;EAc9B,SAAAsF,WAAYxE,KAAsB;IAAlC,IAAAX,KAAA,GACEH,MAAA,CAAAuF,IAAA,OAAMzE,KAAK,CAAC;IAbPX,KAAA,CAAAqF,QAAQ,GAAGlF,KAAK,CAACC,SAAS,EAAoB;IAC9CJ,KAAA,CAAAsF,MAAM,GAAGnF,KAAK,CAACC,SAAS,EAAiB;IACzCJ,KAAA,CAAAxC,GAAG,GAAG,IAAIJ,SAAS,CAAC;MAAA,IAAA1F,EAAA;MAAM,QAAAA,EAAA,GAAAsI,KAAI,CAACsF,MAAM,cAAA5N,EAAA,uBAAAA,EAAA,CAAE2I,OAAO;IAAA,EAAC;IAC/CL,KAAA,CAAAzG,MAAM,GAAa,EAAE;IACrByG,KAAA,CAAAxF,IAAI,GAAc;MACvBvC,MAAM,EAAE,EAAE;MACVoM,MAAM,EAAE;KACT;IACMrE,KAAA,CAAAuF,iBAAiB,GAAY,EAAE;IAC/BvF,KAAA,CAAAwF,iBAAiB,GAAY,EAAE;IAC/BxF,KAAA,CAAAyF,QAAQ,GAAG,KAAK;IAChBzF,KAAA,CAAA0F,2BAA2B,GAAG,IAAI;IA6IzC1F,KAAA,CAAA2F,WAAW,GAAG;MACZ,IAAMC,SAAS,GAAG5F,KAAI,CAACxF,IAAI,CAACvC,MAAM,CAAC+H,KAAI,CAACxF,IAAI,CAACvC,MAAM,CAACZ,MAAM,GAAG,CAAC,CAAC,IAAI;QACjEL,CAAC,EAAE,CAAC;QACJC,CAAC,EAAE;OACJ;MACD+I,KAAI,CAAC6F,UAAU,CAAArN,QAAA,KAAMoN,SAAS,GAAI,IAAI,CAAC,CAAC;KACzC;;IAgGD5F,KAAA,CAAA8F,WAAW,GAAG,UAACpO,EAAkB;UAAhByJ,EAAE,GAAAzJ,EAAA,CAAAyJ,EAAA;QAAEC,EAAE,GAAA1J,EAAA,CAAA0J,EAAA;MACrB,IAAM2E,OAAO,GAAG/F,KAAI,CAACxF,IAAI,CAACvC,MAAM,CAACoE,GAAG,CAAC,UAAC3E,EAAQ;YAANV,CAAC,GAAAU,EAAA,CAAAV,CAAA;UAAEC,CAAC,GAAAS,EAAA,CAAAT,CAAA;QAAO,OAAC;UAClDD,CAAC,EAAEA,CAAC,GAAGmK,EAAE;UACTlK,CAAC,EAAEA,CAAC,GAAGmK;SACR;OAAC,CAAC;MACH,IAAI,CAAC2E,OAAO,CAACC,IAAI,CAAC,UAACzO,KAAK;QAAK,OAAAyI,KAAI,CAACxC,GAAG,CAAC0B,gBAAgB,CAAC3H,KAAK,CAAC;MAAA,EAAC,EAAE;QAC9DyI,KAAI,CAACiG,kBAAkB,CAAC;UACtB9B,IAAI,EAAEJ,WAAW,CAACgB,IAAI;UACtBT,OAAO,EAAE;YAAEtN,CAAC,EAAEmK,EAAE;YAAElK,CAAC,EAAEmK;UAAE;SACxB,CAAC;;KAEL;IACDpB,KAAA,CAAAkG,WAAW,GAAG,UAAC/L,GAAW,EAAEzC,EAAkB;UAAhByJ,EAAE,GAAAzJ,EAAA,CAAAyJ,EAAA;QAAEC,EAAE,GAAA1J,EAAA,CAAA0J,EAAA;MAClC,IAAM7J,KAAK,GAAAiB,QAAA,KAAQwH,KAAI,CAACxF,IAAI,CAACvC,MAAM,CAACkC,GAAG,CAAC,CAAE;MAC1C5C,KAAK,CAACP,CAAC,IAAImK,EAAE;MACb5J,KAAK,CAACN,CAAC,IAAImK,EAAE;MACb,IAAI,CAACpB,KAAI,CAACxC,GAAG,CAAC0B,gBAAgB,CAAC3H,KAAK,CAAC,EAAE;QACrCyI,KAAI,CAACiG,kBAAkB,CAAC;UACtB9B,IAAI,EAAEJ,WAAW,CAACY,MAAM;UACxBL,OAAO,EAAA9L,QAAA,CAAAA,QAAA,KAAOjB,KAAK;YAAEa,KAAK,EAAE+B;UAAG;SAChC,CAAC;;KAEL;IACD6F,KAAA,CAAAmG,YAAY,GAAG,UAAChM,GAAW;MACzB,IAAI6F,KAAI,CAACoG,QAAQ,EAAE,IAAI,CAACpG,KAAI,CAACW,KAAK,CAAC0F,QAAQ,IAAI,CAACrG,KAAI,CAACxF,IAAI,CAAC6J,MAAM,EAAE;QAChErE,KAAI,CAACiG,kBAAkB,CAAC;UACtB9B,IAAI,EAAEJ,WAAW,CAACK,GAAG;UACrBE,OAAO,EAAEtE,KAAI,CAACxF,IAAI,CAACvC,MAAM,CAACkC,GAAG;SAC9B,CAAC;;KAEL;IACD6F,KAAA,CAAA8B,SAAS,GAAG;MACV9B,KAAI,CAACsG,kBAAkB,CAAC,KAAK,CAAC;KAC/B;IACDtG,KAAA,CAAAuG,aAAa,GAAG,UAAClH,CAAgD;MAC/D,IAAIW,KAAI,CAAC0F,2BAA2B,EAAE;QACpC1F,KAAI,CAACwG,qBAAqB,EAAE;QAC5BxG,KAAI,CAAC0F,2BAA2B,GAAG,KAAK;;MAE1C1F,KAAI,CAACyF,QAAQ,GAAG,KAAK;MACrBzF,KAAI,CAACW,KAAK,CAAC8F,WAAW,CAACpH,CAAC,CAAC;KAC1B;IACDW,KAAA,CAAA0G,YAAY,GAAG,UAACrH,CAAgD;MAC9DW,KAAI,CAACiG,kBAAkB,CAAC;QAAE9B,IAAI,EAAEJ,WAAW,CAACmB;MAAK,CAAE,CAAC;MACpDlF,KAAI,CAACyF,QAAQ,GAAG,IAAI;MACpBzF,KAAI,CAACW,KAAK,CAACgG,YAAY,CAACtH,CAAC,CAAC;KAC3B;IACDW,KAAA,CAAA4D,iBAAiB,GAAG,UAACvE,CAAmC;MACtD,IAAIW,KAAI,CAACoG,QAAQ,EAAE,IAAI,CAACpG,KAAI,CAACW,KAAK,CAAC0F,QAAQ,EAAE;QAC3C,IAAIrG,KAAI,CAACxF,IAAI,CAAC6J,MAAM,EAAE;UACpB,IAAIhF,CAAC,CAACqB,MAAM,KAAKV,KAAI,CAACsF,MAAM,CAACjF,OAAO,EAAE;YACpCL,KAAI,CAACiG,kBAAkB,CAAC;cACtB9B,IAAI,EAAEJ,WAAW,CAACmB;aACnB,CAAC;;UAEJ;;QAEK,IAAA0B,OAAO,GAAI5G,KAAI,CAACe,gBAAgB,CAAC1B,CAAC,CAAC,GAA5B;QACd,IAAI,CAACW,KAAI,CAACxC,GAAG,CAAC0B,gBAAgB,CAAC0H,OAAO,CAAC,EAAE;UACvC5G,KAAI,CAACiG,kBAAkB,CAAC;YACtB9B,IAAI,EAAEJ,WAAW,CAACK,GAAG;YACrBE,OAAO,EAAE7M,qBAAqB,CAACmP,OAAO,EAAE,GAAG,CAAC;YAC5CA,OAAO,EAAAA;WACR,CAAC;SACH,MAAM;UACL5G,KAAI,CAAC2F,WAAW,EAAE;;;KAGvB;IACD3F,KAAA,CAAA6D,OAAO,GAAG,UAACxE,CAA8C;MACvDW,KAAI,CAAC4D,iBAAiB,CAACvE,CAAC,CAAC;KAC1B;IACDW,KAAA,CAAA8D,UAAU,GAAG,UAACzE,CAAkC;MAC9C,IAAIA,CAAC,CAACwH,UAAU,EAAE;QAChBxH,CAAC,CAACyB,cAAc,EAAE;QAClBd,KAAI,CAAC4D,iBAAiB,CAACvE,CAAC,CAAC;;MAE3BW,KAAI,CAAC2F,WAAW,EAAE;KACnB;IACD3F,KAAA,CAAAkB,gBAAgB,GAAG,UAAC7B,CAAmC;MACrD,IAAIW,KAAI,CAACoG,QAAQ,EAAE,EAAE;QACZ,IAAAQ,OAAO,GAAI5G,KAAI,CAACe,gBAAgB,CAAC1B,CAAC,CAAC,GAA5B;QACdW,KAAI,CAAC6F,UAAU,CAACe,OAAO,CAAC;;KAE3B;IACD5G,KAAA,CAAA8G,aAAa,GAAG,UAACzH,CAA8C;MAC7D,IAAIW,KAAI,CAACoG,QAAQ,EAAE,EAAE;QACnB/G,CAAC,CAACyB,cAAc,EAAE;QAClB,IAAI,CAACd,KAAI,CAACW,KAAK,CAAC0F,QAAQ,IAAI,CAACrG,KAAI,CAACxF,IAAI,CAAC6J,MAAM,EAAE;UACvC,IAAA3M,EAAA,GAAuBsI,KAAI,CAACe,gBAAgB,CAAC1B,CAAC,CAAC;YAA9CuH,OAAO,GAAAlP,EAAA;YAAIU,KAAK,GAAAV,EAAA,IAAAU,KAA8B;UACrD,IAAIA,KAAK,GAAG,CAAC,CAAC,EAAE;YACd4H,KAAI,CAACiG,kBAAkB,CAAC;cACtB9B,IAAI,EAAEJ,WAAW,CAACU,MAAM;cACxBH,OAAO,EAAElM,KAAK;cACdwO,OAAO,EAAAA;aACR,CAAC;WACH,MAAM;YACL5G,KAAI,CAAC6F,UAAU,CAACe,OAAO,CAAC;;;;KAI/B;IArVC5G,KAAI,CAACiE,KAAK,GAAG;MACXzJ,IAAI,EAAE;QACJvC,MAAM,EAAE,EAAE;QACVoM,MAAM,EAAE;OACT;MACDuC,OAAO,EAAE;QACP5P,CAAC,EAAE2J,KAAK,CAAC7C,OAAO,CAACxC,KAAK,GAAG,CAAC;QAC1BrE,CAAC,EAAE0J,KAAK,CAAC7C,OAAO,CAACxC,KAAK,GAAG;;KAE5B;;;EAEH6J,UAAA,CAAA7H,SAAA,CAAAyE,MAAM,GAAN;IAAA,IAAA/B,KAAA;IACE,OACEG,KAAA,CAAAnF,aAAA;MACE+L,SAAS,EAAEzQ,iBAAiB,CAAC;QAC3B0Q,0BAA0B,EAAE,IAAI;QAChCC,uBAAuB,EAAE,IAAI,CAAChD,KAAK,CAACzJ,IAAI,CAAC6J,MAAM;QAC/C6C,yBAAyB,EAAE,IAAI,CAACvG,KAAK,CAAC0F;OACvC,CAAC;MACF1D,KAAK,EAAAnK,QAAA;QACH2O,OAAO,EAAE,cAAc;QACvBjP,QAAQ,EAAE,UAAU;QACpBkP,MAAM,EAAE,GAAG;QACXC,OAAO,EAAE,GAAG;QACZC,QAAQ,EAAE,GAAG;QACb1E,MAAM,EAAE,IAAI,CAACjC,KAAK,CAAC0F,QAAQ,GAAG,aAAa,GAAG;MAAS,GACpD,IAAI,CAAC1F,KAAK,CAACgC,KAAK;IAAA,GAGrBxC,KAAA,CAAAnF,aAAA;MACEkF,GAAG,EAAE,IAAI,CAACmF,QAAQ;MAClB9K,GAAG,EAAE,IAAI,CAACoG,KAAK,CAACpG,GAAG;MACnBgN,GAAG,EAAE,IAAI,CAAC5G,KAAK,CAAC6G,QAAQ;MACxB3M,WAAW,EAAE,IAAI,CAAC8F,KAAK,CAAC9F,WAAW;MACnC8H,KAAK,EAAE,IAAI,CAAChC,KAAK,CAAC8G,UAAU;MAC5BC,MAAM,EAAE,IAAI,CAACnB,aAAa;MAC1BoB,OAAO,EAAE,IAAI,CAACjB;IAAY,EAC1B,EACFvG,KAAA,CAAAnF,aAAA;MACEkF,GAAG,EAAE,IAAI,CAACoF,MAAM;MAChB3C,KAAK,EAAE;QACLzK,QAAQ,EAAE,UAAU;QACpB0P,GAAG,EAAE,GAAG;QACRC,IAAI,EAAE,GAAG;QACTvM,KAAK,EAAE,MAAM;QACbE,MAAM,EAAE,MAAM;QACdsM,QAAQ,EAAE,QAAQ;QAClBC,UAAU,EAAE,MAAM;QAClBC,WAAW,EAAE;OACd;MACDlK,OAAO,EAAE,SAAO,IAAI,CAAC6C,KAAK,CAAC7C,OAAO,CAACxC,KAAK,SAAI,IAAI,CAACqF,KAAK,CAAC7C,OAAO,CAACtC,MAAQ;MACvEyM,WAAW,EAAE,IAAI,CAAC/G,gBAAgB;MAClCgH,WAAW,EAAE,IAAI,CAAChH,gBAAgB;MAClC2C,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBC,UAAU,EAAE,IAAI,CAACA,UAAU;MAC3BgD,aAAa,EAAE,IAAI,CAACA,aAAa;MACjCqB,YAAY,EAAE,IAAI,CAACxC;IAAW,GAE9BxF,KAAA,CAAAnF,aAAA;MAAMoN,UAAU,EAAC;IAAQ,EAAG,EAC3B,CAAC,CAAC,IAAI,CAACnE,KAAK,CAACzJ,IAAI,CAACvC,MAAM,CAACZ,MAAM,IAAI8I,KAAA,CAAAnF,aAAA,CAACuI,UAAU;MAAC/I,IAAI,EAAE,IAAI,CAAC6N,gBAAgB;IAAE,EAAI,EACjFlI,KAAA,CAAAnF,aAAA,CAACwH,WAAW;MACV5B,SAAS,EAAE,IAAI,CAACqD,KAAK,CAACzJ,IAAI,CAAC6J,MAAM,IAAI,CAAC,IAAI,CAAC1D,KAAK,CAAC0F,QAAQ;MACzD/E,MAAM,EAAE,IAAI,CAACwE,WAAW;MACxBhE,SAAS,EAAE,IAAI,CAACA,SAAS;MACzBY,OAAO,EAAE,CAAC,IAAI,CAAC/B,KAAK,CAAC0F,QAAQ;MAC7B7L,IAAI,EAAE,IAAI,CAAC8N,iBAAiB;IAAE,EAC9B,EACD,IAAI,CAACC,gBAAgB,EAAE,CAAClM,GAAG,CAAC,UAAC3E,EAAQ,EAAEyC,GAAG;UAAXnD,CAAC,GAAAU,EAAA,CAAAV,CAAA;QAAEC,CAAC,GAAAS,EAAA,CAAAT,CAAA;MAAY,OAC9CkJ,KAAA,CAAAnF,aAAA,CAAC2I,QAAQ;QACPhN,GAAG,EAAEwD,GAAG;QACRnD,CAAC,EAAEA,CAAC;QACJC,CAAC,EAAEA,CAAC;QACJ2J,SAAS,EAAE,CAACZ,KAAI,CAACW,KAAK,CAAC0F,QAAQ;QAC/B1D,KAAK,EAAE;UACLC,MAAM,EACJ,CAACzI,GAAG,IAAI6F,KAAI,CAACiE,KAAK,CAACzJ,IAAI,CAACvC,MAAM,CAACZ,MAAM,GAAG,CAAC,IAAI,CAAC2I,KAAI,CAACiE,KAAK,CAACzJ,IAAI,CAAC6J,MAAM,GAChE,SAAS,GACTmE;SACP;QACDlH,MAAM,EAAE,SAAAA,CAAC5J,EAAU;cAARyJ,EAAE,GAAAzJ,EAAA,CAAAyJ,EAAA;YAAEC,EAAE,GAAA1J,EAAA,CAAA0J,EAAA;UAAO,OAAApB,KAAI,CAACkG,WAAW,CAAC/L,GAAG,EAAE;YAAEgH,EAAE,EAAAA,EAAA;YAAEC,EAAE,EAAAA;UAAA,CAAE,CAAC;SAAA;QACzDU,SAAS,EAAE9B,KAAI,CAAC8B,SAAS;QACzB8B,iBAAiB,EAAE,SAAAA,CAAA;UAAM,OAAA5D,KAAI,CAACmG,YAAY,CAAChM,GAAG,CAAC;QAAA;MAAA,EAC/C;KACH,CAAC,CACE,CACF;GAET;EACDgL,UAAA,CAAA7H,SAAA,CAAA4E,kBAAkB,GAAlB,UAAmBC,SAA0B;IAC3C,IAAI,CAACA,SAAS,CAACkE,QAAQ,IAAI,IAAI,CAAC1F,KAAK,CAAC0F,QAAQ,IAAI,CAAC,IAAI,CAAC7L,IAAI,CAAC6J,MAAM,EAAE;MACnE,IAAI,CAACsB,WAAW,EAAE;;IAEpB,IAAIxD,SAAS,CAAC5H,GAAG,IAAI4H,SAAS,CAAC5H,GAAG,KAAK,IAAI,CAACoG,KAAK,CAACpG,GAAG,EAAE;MACrD,IAAI,CAAC0L,kBAAkB,CAAC;QAAE9B,IAAI,EAAEJ,WAAW,CAACmB;MAAK,CAAE,CAAC;KACrD,MAAM,IAAI,CAAChO,iBAAiB,CAACiL,SAAS,CAACsG,KAAK,EAAE,IAAI,CAAC9H,KAAK,CAAC8H,KAAK,CAAC,EAAE;MAChE,IAAI,IAAI,CAACrC,QAAQ,EAAE,EAAE;QACnB,IAAI,CAACI,qBAAqB,EAAE;OAC7B,MAAM;QACL,IAAI,CAACd,2BAA2B,GAAG,IAAI;;;GAG5C;EACDP,UAAA,CAAA7H,SAAA,CAAAoL,aAAa,GAAb,UAAczQ,MAAe;IAC3B,IAAM0Q,WAAW,GAAG,IAAI,CAACC,cAAc,EAAE;IACzC,OAAO,IAAI,CAACpL,GAAG,CAACoB,0BAA0B,CAAC3G,MAAM,CAAC,CAACoE,GAAG,CAAC,UAAC3E,EAAQ;UAANV,CAAC,GAAAU,EAAA,CAAAV,CAAA;QAAEC,CAAC,GAAAS,EAAA,CAAAT,CAAA;MAAO,OAAC;QACpED,CAAC,EAAEY,IAAI,CAACC,KAAK,CAACb,CAAC,GAAG2R,WAAW,CAAC3R,CAAC,CAAC;QAChCC,CAAC,EAAEW,IAAI,CAACC,KAAK,CAACZ,CAAC,GAAG0R,WAAW,CAAC1R,CAAC;OAChC;KAAC,CAAC;GACJ;EACDkO,UAAA,CAAA7H,SAAA,CAAAgJ,kBAAkB,GAAlB,UAAmBuC,eAAwB;IACzC,IAAI,IAAI,CAACrO,IAAI,CAAC6J,MAAM,IAAIwE,eAAe,EAAE;MACvC,IAAMC,eAAe,GAAG,IAAI,CAACJ,aAAa,CAAC,IAAI,CAAClO,IAAI,CAACvC,MAAM,CAAC;MAC5D,IAAI,CAACf,iBAAiB,CAAC4R,eAAe,EAAE,IAAI,CAACtD,iBAAiB,CAAC,EAAE;QAC/D,IAAI,CAACuD,cAAc,CAACD,eAAe,CAAC;QACpC,IAAI,CAACtD,iBAAiB,GAAGsD,eAAe,CAACzM,GAAG,CAAC,UAAC3E,EAAQ;cAANV,CAAC,GAAAU,EAAA,CAAAV,CAAA;YAAEC,CAAC,GAAAS,EAAA,CAAAT,CAAA;UAAO,OAAC;YAAED,CAAC,EAAAA,CAAA;YAAEC,CAAC,EAAAA;UAAA,CAAE;SAAC,CAAC;;;GAG3E;EACDkO,UAAA,CAAA7H,SAAA,CAAA0L,YAAY,GAAZ,UAAatR,EAAqB;QAAnBO,MAAM,GAAAP,EAAA,CAAAO,MAAA;IACnB,IAAI,IAAI,CAAC0I,KAAK,CAACsI,QAAQ,EAAE;MACvB,IAAMH,eAAe,GAAG,IAAI,CAACJ,aAAa,CAACzQ,MAAM,CAAC;MAClD,IAAI,CAACsN,iBAAiB,GAAGuD,eAAe;MACxC,IAAI,CAACnI,KAAK,CAACsI,QAAQ,CAACH,eAAe,CAAC;;GAEvC;EACD3D,UAAA,CAAA7H,SAAA,CAAAyL,cAAc,GAAd,UAAeD,eAAwB;IACrC,IAAI,IAAI,CAACnI,KAAK,CAACuI,UAAU,EAAE;MACzB,IAAI,CAACvI,KAAK,CAACuI,UAAU,CAACJ,eAAe,CAAC;;GAEzC;EACD3D,UAAA,CAAA7H,SAAA,CAAAuI,UAAU,GAAV,UAAWnO,EAAe,EAAEyR,KAAa;QAA5BnS,CAAC,GAAAU,EAAA,CAAAV,CAAA;MAAEC,CAAC,GAAAS,EAAA,CAAAT,CAAA;IAAW,IAAAkS,KAAA;MAAAA,KAAA,QAAa;IAAA;IACvC,IAAIA,KAAK,IAAI,CAAC,IAAI,CAACxI,KAAK,CAAC0F,QAAQ,EAAE;MACjC,IAAI,CAAC+C,QAAQ,CAAC;QACZ5O,IAAI,EAAE,IAAI,CAACA,IAAI;QACfoM,OAAO,EAAE;UAAE5P,CAAC,EAAAA,CAAA;UAAEC,CAAC,EAAAA;QAAA;OAChB,CAAC;;GAEL;EAQDkO,UAAA,CAAA7H,SAAA,CAAA2I,kBAAkB,GAAlB,UAAmB/B,MAA+C;IAChE,IAAM2E,eAAe,GAAG,IAAI,CAACrO,IAAI,CAAC6J,MAAM;IAClC,IAAA3M,EAAA,GAA8BsM,WAAW,CAAC,IAAI,CAACxJ,IAAI,EAAE0J,MAAM,CAAC;MAA3DmF,YAAY,GAAA3R,EAAA;MAAEuN,WAAW,GAAAvN,EAAA,GAAkC;IAClE2R,YAAY,CAACpR,MAAM,GAAGoR,YAAY,CAACpR,MAAM,CAACoE,GAAG,CAAC,UAAC9E,KAAK;MAAK,OAAAE,qBAAqB,CAACF,KAAK,EAAE,GAAG,CAAC;IAAA,EAAC;IAC3F,IAAI0N,WAAW,EAAE;MACf,IAAI,CAACzK,IAAI,GAAG6O,YAAY;MACxB,IAAI,CAACD,QAAQ,CAAC;QACZxC,OAAO,EAAE1C,MAAM,CAAC0C,OAAO,IAAI,IAAI,CAACpM,IAAI,CAACvC,MAAM,CAAC,IAAI,CAACuC,IAAI,CAACvC,MAAM,CAACZ,MAAM,GAAG,CAAC,CAAC,IAAI;UAAEL,CAAC,EAAE,CAAC;UAAEC,CAAC,EAAE;QAAC,CAAE;QAC1FuD,IAAI,EAAE6O;OACP,CAAC;MACF,IAAI,CAAC9P,MAAM,GAAGM,4BAA4B,CAACwP,YAAY,CAACpR,MAAM,CAAC;MAC/D,IAAI,CAAC+Q,YAAY,CAACK,YAAY,CAAC;MAC/B,IAAI,CAAC,CAACtF,WAAW,CAACY,MAAM,EAAEZ,WAAW,CAACgB,IAAI,CAAC,CAACuE,QAAQ,CAACpF,MAAM,CAACC,IAAI,CAAC,EAAE;QACjE,IAAI,CAACmC,kBAAkB,CAACuC,eAAe,CAAC,CAAC;;;GAG9C;;EACD1D,UAAA,CAAA7H,SAAA,CAAA8I,QAAQ,GAAR;IACE,IAAI,IAAI,CAACX,QAAQ,IAAI,CAAC,IAAI,CAACH,MAAM,CAACjF,OAAO,EAAE,OAAO,KAAK;IACvD,IAAM7C,GAAG,GAAG,IAAI,CAAC8H,MAAM,CAACjF,OAAO;IAC/B,OAAO,CAAC,EAAE7C,GAAG,CAAClC,KAAK,CAACyC,OAAO,CAAC0K,KAAK,IAAIjL,GAAG,CAAChC,MAAM,CAACuC,OAAO,CAAC0K,KAAK,CAAC;GAC/D;EACDtD,UAAA,CAAA7H,SAAA,CAAAsL,cAAc,GAAd;IACE,IAAI,CAAC,IAAI,CAACvD,QAAQ,CAAChF,OAAO,EAAE;MAC1B,OAAO;QAAErJ,CAAC,EAAEyB,GAAG;QAAExB,CAAC,EAAEwB;MAAG,CAAE;;;IAG3B,OAAO;MACLzB,CAAC,EAAE,IAAI,CAACqO,QAAQ,CAAChF,OAAO,CAACpC,WAAW,GAAG,IAAI,CAACoH,QAAQ,CAAChF,OAAO,CAAC9E,YAAY;MACzEtE,CAAC,EAAE,IAAI,CAACoO,QAAQ,CAAChF,OAAO,CAACnC,YAAY,GAAG,IAAI,CAACmH,QAAQ,CAAChF,OAAO,CAAC5E;KAC/D;GACF;EACD0J,UAAA,CAAA7H,SAAA,CAAAkJ,qBAAqB,GAArB;IACE,IAAItP,iBAAiB,CAAC,IAAI,CAACqO,iBAAiB,EAAE,IAAI,CAAC5E,KAAK,CAAC8H,KAAK,CAAC,EAAE;IACjE,IAAME,WAAW,GAAG,IAAI,CAACC,cAAc,EAAE;IACzC,IAAMH,KAAK,GAAG,IAAI,CAACjL,GAAG,CAACqB,0BAA0B,CAC/C,IAAI,CAAC8B,KAAK,CAAC8H,KAAK,CAACpM,GAAG,CAAC,UAAC3E,EAAQ;UAANV,CAAC,GAAAU,EAAA,CAAAV,CAAA;QAAEC,CAAC,GAAAS,EAAA,CAAAT,CAAA;MAAO,OAAC;QAClCD,CAAC,EAAEA,CAAC,GAAG2R,WAAW,CAAC3R,CAAC;QACpBC,CAAC,EAAEA,CAAC,GAAG0R,WAAW,CAAC1R;OACpB;KAAC,CAAC,CACJ;IACD,IAAI,CAACgP,kBAAkB,CAAC;MACtB9B,IAAI,EAAEJ,WAAW,CAACiB,MAAM;MACxBV,OAAO,EAAEmE;KACV,CAAC;GACH;EACDtD,UAAA,CAAA7H,SAAA,CAAAiL,gBAAgB,GAAhB;IACE,OAAO,IAAI,CAACtE,KAAK,CAACzJ,IAAI,CAACvC,MAAM,CAACoE,GAAG,CAAC,UAAC9E,KAAK;MAAK,OAAAE,qBAAqB,CAACF,KAAK,CAAC;IAAA,EAAC;GAC3E;EACD4N,UAAA,CAAA7H,SAAA,CAAAiM,SAAS,GAAT;IACE,OAAO,IAAI,CAAC/L,GAAG,CACZsB,eAAe,EAAE,CACjBzC,GAAG,CAAC,UAAC9E,KAAK;MAAK,OAAAE,qBAAqB,CAACF,KAAK,CAAC;IAAA,EAAC,CAC5C8E,GAAG,CAAC,UAAC3E,EAAQ;UAANV,CAAC,GAAAU,EAAA,CAAAV,CAAA;QAAEC,CAAC,GAAAS,EAAA,CAAAT,CAAA;MAAO,OAAC;QAAED,CAAC,EAAEA,CAAC,GAAG,CAAC;QAAEC,CAAC,EAAEA,CAAC,GAAG;MAAC,CAAE;KAAC,CAAC,CAAC;GAChD;;EACDkO,UAAA,CAAA7H,SAAA,CAAA+K,gBAAgB,GAAhB;IACE,IAAMmB,aAAa,GAAG,IAAI,CAACjB,gBAAgB,EAAE;IAC7C,IAAMkB,MAAM,GAAG,IAAI,CAACF,SAAS,EAAE;IAC/B,OAAO,IAAI,CAACtF,KAAK,CAACzJ,IAAI,CAAC6J,MAAM,G,8CACrBoF,MAAM,SAAKD,aAAa,UAAEA,aAAa,CAAC,CAAC,CAAC,EAAEC,MAAM,CAAC,CAAC,CAAC,KACzDA,MAAM;GACX;EACDtE,UAAA,CAAA7H,SAAA,CAAAgL,iBAAiB,GAAjB;IACE,IAAMkB,aAAa,GAAG,IAAI,CAACjB,gBAAgB,EAAE;IAC7C,OAAOiB,aAAa,CAACE,MAAM,CACzB,IAAI,CAACzF,KAAK,CAACzJ,IAAI,CAAC6J,MAAM,GAAGmF,aAAa,CAAC,CAAC,CAAC,GAAG/R,qBAAqB,CAAC,IAAI,CAACwM,KAAK,CAAC2C,OAAO,CAAC,CACtF;GACF;EACDzB,UAAA,CAAA7H,SAAA,CAAAyD,gBAAgB,GAAhB,UACE1B,CAAmC,EACnCsK,qBAA4B,EAC5BC,sBAA6B;IAD7B,IAAAD,qBAAA;MAAAA,qBAAA,OAA4B;IAAA;IAC5B,IAAAC,sBAAA;MAAAA,sBAAA,OAA6B;IAAA;IAE7B,IAAIhD,OAAO,GAAG,IAAI,CAACpJ,GAAG,CAAC2B,mBAAmB,CAACE,CAAC,CAAC;IAC7C,IAAIuK,sBAAsB,EAAE;MAC1B,IAAMC,cAAc,GAAGC,SAAS,CAACC,QAAQ,CAACT,QAAQ,CAAC,KAAK,CAAC,GAAGjK,CAAC,CAAC2K,OAAO,GAAG3K,CAAC,CAAC4K,OAAO;MACjF,IAAMrE,SAAS,GAAG,IAAI,CAACpL,IAAI,CAACvC,MAAM,CAAC,IAAI,CAACuC,IAAI,CAACvC,MAAM,CAACZ,MAAM,GAAG,CAAC,CAAC;;MAE/D,IAAIwS,cAAc,IAAIjE,SAAS,EAAE;QAC/B,IAAIvG,CAAC,CAAC6K,QAAQ,EAAE;;UAEdtD,OAAO,GAAGtN,mBAAmB,CAACsM,SAAS,EAAEgB,OAAO,EAAE,IAAI,CAACrN,MAAM,CAAC;SAC/D,MAAM;;UAELqN,OAAO,GAAG9N,gCAAgC,CAAC8M,SAAS,EAAEgB,OAAO,EAAEhP,IAAI,CAACoC,EAAE,GAAG,EAAE,CAAC;;;;IAI5E,IAAAtC,EAAA,GAAmBM,mBAAmB,CAAC,IAAI,CAACwC,IAAI,CAACvC,MAAM,EAAE2O,OAAO,EAAE,EAAE,CAAC;MAAnErP,KAAK,GAAAG,EAAA,CAAAH,KAAA;MAAEa,KAAK,GAAAV,EAAA,CAAAU,KAAuD;IAC3E,IAAIuR,qBAAqB,IAAIvR,KAAK,GAAG,CAAC,CAAC,EAAE;MACvCwO,OAAO,GAAApO,QAAA,KAAQjB,KAAK,CAAE;;IAExB,OAAO,CAACqP,OAAO,EAAE;MAAErP,KAAK,EAAAA,KAAA;MAAEa,KAAK,EAAAA;IAAA,CAAE,CAAC;GACnC;EAwGM+M,UAAA,CAAAgF,SAAS,GAAG;IACjB1B,KAAK,EAAE2B,SAAS,CAACC,OAAO,CACtBD,SAAS,CAACE,KAAK,CAAC;MACdtT,CAAC,EAAEoT,SAAS,CAACG,MAAM,CAACC,UAAU;MAC9BvT,CAAC,EAAEmT,SAAS,CAACG,MAAM,CAACC;KACrB,CAAC,CACH;IACD7H,KAAK,EAAEyH,SAAS,CAACK,KAAK,CAAC,EAAE,CAAC;IAC1B3M,OAAO,EAAEsM,SAAS,CAACE,KAAK,CAAC;MACvBhP,KAAK,EAAE8O,SAAS,CAACG,MAAM,CAACC,UAAU;MAClChP,MAAM,EAAE4O,SAAS,CAACG,MAAM,CAACC;KAC1B,CAAC;IACFnE,QAAQ,EAAE+D,SAAS,CAACM,IAAI;IACxBzB,QAAQ,EAAEmB,SAAS,CAACO,IAAI;IACxBzB,UAAU,EAAEkB,SAAS,CAACO,IAAI;IAC1BpQ,GAAG,EAAE6P,SAAS,CAACQ,MAAM,CAACJ,UAAU;IAChChD,QAAQ,EAAE4C,SAAS,CAACQ,MAAM;IAC1B/P,WAAW,EAAEuP,SAAS,CAACQ,MAAM;IAC7BnD,UAAU,EAAE2C,SAAS,CAACK,KAAK,CAAC,EAAE,CAAC;IAC/BhE,WAAW,EAAE2D,SAAS,CAACO,IAAI;IAC3BhE,YAAY,EAAEyD,SAAS,CAACO;GACzB;EACMxF,UAAA,CAAA0F,YAAY,GAAG;IACpBpC,KAAK,EAAE,EAAE;IACT9F,KAAK,EAAE,EAAE;IACT8E,UAAU,EAAE,EAAE;IACd3J,OAAO,EAAE;MAAExC,KAAK,EAAE,GAAG;MAAEE,MAAM,EAAE;IAAG,CAAE;IACpC6K,QAAQ,EAAE,KAAK;IACfM,YAAY,EAAEmE,QAAQ,CAACxN,SAAS;IAChCmJ,WAAW,EAAEqE,QAAQ,CAACxN;GACvB;EACH,OAAA6H,UAAC;CArYD,CAAgChF,KAAK,CAACP,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}