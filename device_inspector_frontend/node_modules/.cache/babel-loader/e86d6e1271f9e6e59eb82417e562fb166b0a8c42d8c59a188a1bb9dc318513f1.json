{"ast":null,"code":"var _jsxFileName = \"/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/device_inspector_frontend/src/features/inspectionsCheck/components/unverifiedInspectionsList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { List, Pagination, Spin, Typography } from 'antd';\nimport Paragraph from 'antd/es/typography/Paragraph';\nimport useInspectionGet from '../hooks/useUnverifiedInspectionsGet';\nimport { UnverifiedInspectionCard } from './unverifiedInspectionCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UnveridiedInspectionsList = props => {\n  _s();\n  const updatePaginationValues = (page, size) => {\n    setCurrentPage(page);\n    setPageSize(size);\n  };\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(10);\n  const {\n    inspectionsData,\n    inspectionsStatus,\n    inspectionsRefetch,\n    inspectionsTotal\n  } = useInspectionGet(currentPage, pageSize);\n  useEffect(() => {\n    inspectionsRefetch();\n    inspectionsTotal.refetch();\n    return () => {};\n  }, [currentPage, pageSize, inspectionsTotal.refetch, inspectionsRefetch]);\n  useEffect(() => {\n    if (props.isChangeStatus) {\n      inspectionsRefetch();\n      inspectionsTotal.refetch();\n      props.setIsChangeStatus(false);\n    }\n  }, [props.isChangeStatus]);\n  if (inspectionsStatus == 'error') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Paragraph, {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: inspectionsData === null || inspectionsData === void 0 ? void 0 : inspectionsData.toString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Pagination, {\n      defaultCurrent: 1,\n      onChange: updatePaginationValues,\n      total: inspectionsTotal.data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), inspectionsStatus == 'loading' ? /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(List, {\n      children: inspectionsData.map(element => /*#__PURE__*/_jsxDEV(UnverifiedInspectionCard, {\n        inspection: element,\n        handleModal: () => {\n          props.toggleModal(inspectionsData, element.id);\n        },\n        onInspectionsChange: () => {\n          inspectionsRefetch();\n        }\n      }, element.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(UnveridiedInspectionsList, \"/zJVzvgoQRD+rVSR0LzAnxJZfKw=\", false, function () {\n  return [useInspectionGet];\n});\n_c = UnveridiedInspectionsList;\nvar _c;\n$RefreshReg$(_c, \"UnveridiedInspectionsList\");","map":{"version":3,"names":["React","useEffect","useState","List","Pagination","Spin","Typography","Paragraph","useInspectionGet","UnverifiedInspectionCard","jsxDEV","_jsxDEV","UnveridiedInspectionsList","props","_s","updatePaginationValues","page","size","setCurrentPage","setPageSize","currentPage","pageSize","inspectionsData","inspectionsStatus","inspectionsRefetch","inspectionsTotal","refetch","isChangeStatus","setIsChangeStatus","children","fileName","_jsxFileName","lineNumber","columnNumber","toString","defaultCurrent","onChange","total","data","map","element","inspection","handleModal","toggleModal","id","onInspectionsChange","_c","$RefreshReg$"],"sources":["/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/device_inspector_frontend/src/features/inspectionsCheck/components/unverifiedInspectionsList.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react'\n\nimport {List, Pagination, Spin, Typography} from 'antd'\nimport Paragraph from 'antd/es/typography/Paragraph'\nimport useInspectionGet from '../hooks/useUnverifiedInspectionsGet'\n\nimport { UnverifiedInspectionCard } from './unverifiedInspectionCard'\n\n\ntype UnveridiedInspectionsListProps = {\n  toggleModal: Function\n  isChangeStatus: boolean\n  setIsChangeStatus: Function\n}\n\nexport const UnveridiedInspectionsList: React.FC<\nUnveridiedInspectionsListProps\n> = props => {\n  const updatePaginationValues = (\n    page: number, size: number\n  ) => {\n    setCurrentPage(page)\n    setPageSize(size)\n  }\n  const [currentPage, setCurrentPage] = useState<number>(1)\n  const [pageSize, setPageSize] = useState(10)\n  \n  const {\n    inspectionsData,\n    inspectionsStatus,\n    inspectionsRefetch,\n    inspectionsTotal\n  } = useInspectionGet(currentPage, pageSize)\n  useEffect(() => {\n    (inspectionsRefetch as Function)()\n    inspectionsTotal.refetch()\n    return () => {\n    }\n  }, [currentPage, pageSize, inspectionsTotal.refetch, inspectionsRefetch])\n\n  useEffect(() => {\n    if (props.isChangeStatus) {\n      (inspectionsRefetch as Function)()\n      inspectionsTotal.refetch()\n      props.setIsChangeStatus(false)\n    }\n  }, [props.isChangeStatus])\n  \n  if (inspectionsStatus == 'error') {\n    return <div>\n      <Paragraph>\n        Error\n      </Paragraph>\n      <Typography>\n        {inspectionsData?.toString()}\n      </Typography>\n    </div>\n  }\n  \n  return (\n    <div>\n      <Pagination \n        defaultCurrent={1}  \n        onChange={updatePaginationValues}\n        total={inspectionsTotal.data}\n      />\n      {\n        inspectionsStatus == 'loading'\n          ? <Spin/>\n          : <List>\n            {\n              inspectionsData!\n                .map(element =>\n                  <UnverifiedInspectionCard\n                    key={element.id}\n                    inspection={element}\n                    handleModal={() => {\n                      props.toggleModal(\n                        inspectionsData!,\n                        element.id)\n                    }}\n                    onInspectionsChange={() => {\n                      inspectionsRefetch()\n                    }}\n                  />)\n            }\n          </List>\n      }\n    </div>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}