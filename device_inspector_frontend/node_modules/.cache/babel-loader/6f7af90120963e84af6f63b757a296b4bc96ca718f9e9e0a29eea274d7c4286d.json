{"ast":null,"code":"/* eslint-disable @stylistic/max-len */\n\nconst transformResponseToType = responseStr => {\n  return {\n    latestImage: responseStr.get('image_path').replaceAll('\"', ''),\n    latestImageCreatedAt: new Date(responseStr.get('createdAt'))\n  };\n};\nexport const getLastImage = async sectorId => {\n  const res = await fetch(`${process.env.REACT_APP_API_BASE_URL}/get_last_image?sector_id=${sectorId}`);\n  return transformResponseToType(await res.json());\n};","map":{"version":3,"names":["transformResponseToType","responseStr","latestImage","get","replaceAll","latestImageCreatedAt","Date","getLastImage","sectorId","res","fetch","process","env","REACT_APP_API_BASE_URL","json"],"sources":["/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/src/features/latestInspectionImage/services/getLastImage.ts"],"sourcesContent":["/* eslint-disable @stylistic/max-len */\n\nimport { LatestImageResponseType } from '../types/latestImageResponseType'\nconst transformResponseToType = (responseStr: Map<string, any>): LatestImageResponseType => {\n  return {\n    latestImage: (responseStr.get('image_path') as string).replaceAll('\"', ''),\n    latestImageCreatedAt: new Date(responseStr.get('createdAt'))\n  }\n}\n\n\nexport const getLastImage = async (sectorId: number): Promise<LatestImageResponseType> => {\n  const res = await fetch(`${process.env.REACT_APP_API_BASE_URL}/get_last_image?sector_id=${sectorId}`)\n  return transformResponseToType(await res.json())\n}"],"mappings":"AAAA;;AAGA,MAAMA,uBAAuB,GAAIC,WAA6B,IAA8B;EAC1F,OAAO;IACLC,WAAW,EAAGD,WAAW,CAACE,GAAG,CAAC,YAAY,CAAC,CAAYC,UAAU,CAAC,GAAG,EAAE,EAAE,CAAC;IAC1EC,oBAAoB,EAAE,IAAIC,IAAI,CAACL,WAAW,CAACE,GAAG,CAAC,WAAW,CAAC;EAC7D,CAAC;AACH,CAAC;AAGD,OAAO,MAAMI,YAAY,GAAG,MAAOC,QAAgB,IAAuC;EACxF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,sBAAuB,6BAA4BL,QAAS,EAAC,CAAC;EACrG,OAAOR,uBAAuB,CAAC,MAAMS,GAAG,CAACK,IAAI,CAAC,CAAC,CAAC;AAClD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}