{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useQuery } from 'react-query';\nimport { getCurrentParty } from '../services/currentPartyService';\nexport const useCurrentPartyGet = () => {\n  _s();\n  const {\n    data,\n    status\n  } = useQuery('currentParty', getCurrentParty);\n  return [data, status];\n};\n_s(useCurrentPartyGet, \"vSgE/AcblynD0ixcJQxHfGiSdoo=\", false, function () {\n  return [useQuery];\n});\nexport async function updateCurrentParty(inspectionId, side) {\n  const res = await fetch(\n  // eslint-disable-next-line @stylistic/max-len\n  `${process.env.REACT_APP_API_BASE_URL}/update_current_party?specification_id=${inspectionId}&side=${side}`, {\n    method: 'POST'\n  });\n  return await res.json();\n}","map":{"version":3,"names":["useQuery","getCurrentParty","useCurrentPartyGet","_s","data","status","updateCurrentParty","inspectionId","side","res","fetch","process","env","REACT_APP_API_BASE_URL","method","json"],"sources":["/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/device_inspector_frontend/src/hooks/useCurrentPartyGet.ts"],"sourcesContent":["import {useQuery} from 'react-query'\nimport { TCurrentParty } from '../types/currentPartyType'\nimport { getCurrentParty } from '../services/currentPartyService'\n\nexport const useCurrentPartyGet = () => {\n  const {\n    data,\n    status\n  } = useQuery<TCurrentParty, string>(\n    'currentParty', getCurrentParty\n  )\n  return [data, status]\n}\n\nexport async function updateCurrentParty(\n  inspectionId: number, side: string\n): Promise<Boolean> {\n  const res = await fetch(\n    // eslint-disable-next-line @stylistic/max-len\n    `${process.env.REACT_APP_API_BASE_URL}/update_current_party?specification_id=${inspectionId}&side=${side}`, \n    { method: 'POST' }\n  )\n  return await res.json()\n}\n"],"mappings":";AAAA,SAAQA,QAAQ,QAAO,aAAa;AAEpC,SAASC,eAAe,QAAQ,iCAAiC;AAEjE,OAAO,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtC,MAAM;IACJC,IAAI;IACJC;EACF,CAAC,GAAGL,QAAQ,CACV,cAAc,EAAEC,eAClB,CAAC;EACD,OAAO,CAACG,IAAI,EAAEC,MAAM,CAAC;AACvB,CAAC;AAAAF,EAAA,CARYD,kBAAkB;EAAA,QAIzBF,QAAQ;AAAA;AAMd,OAAO,eAAeM,kBAAkBA,CACtCC,YAAoB,EAAEC,IAAY,EAChB;EAClB,MAAMC,GAAG,GAAG,MAAMC,KAAK;EACrB;EACC,GAAEC,OAAO,CAACC,GAAG,CAACC,sBAAuB,0CAAyCN,YAAa,SAAQC,IAAK,EAAC,EAC1G;IAAEM,MAAM,EAAE;EAAO,CACnB,CAAC;EACD,OAAO,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;AACzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}