{"ast":null,"code":"var _jsxFileName = \"/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/device_inspector_frontend/src/components/statusSelect.tsx\",\n  _s = $RefreshSig$();\nimport { Select, Spin } from 'antd';\nimport React from 'react';\nimport { useStatusGet } from '../hooks/useStatusGet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StatusSelect = ({\n  onChange,\n  isMultiple,\n  allowClear,\n  defaultValue\n}) => {\n  _s();\n  const [statuses, isLoading] = useStatusGet();\n  return isLoading || statuses === undefined ? /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 48\n  }, this) : /*#__PURE__*/_jsxDEV(Select, {\n    onChange: onChange,\n    allowClear: allowClear,\n    mode: isMultiple ? 'multiple' : undefined,\n    defaultValue: defaultValue,\n    options: statuses.map(status => ({\n      value: status,\n      label: status\n    }))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 59\n  }, this);\n};\n_s(StatusSelect, \"zHcrdouxRZkseZgK06U/jbuzO+g=\", false, function () {\n  return [useStatusGet];\n});\n_c = StatusSelect;\nvar _c;\n$RefreshReg$(_c, \"StatusSelect\");","map":{"version":3,"names":["Select","Spin","React","useStatusGet","jsxDEV","_jsxDEV","StatusSelect","onChange","isMultiple","allowClear","defaultValue","_s","statuses","isLoading","undefined","fileName","_jsxFileName","lineNumber","columnNumber","mode","options","map","status","value","label","_c","$RefreshReg$"],"sources":["/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/device_inspector_frontend/src/components/statusSelect.tsx"],"sourcesContent":["import { Select, Spin } from 'antd'\nimport React from 'react'\nimport { useStatusGet } from '../hooks/useStatusGet'\n\ntype StatusSelectProps = {\n  isMultiple?: boolean\n  allowClear?: boolean\n  defaultValue?: {label: string, value: string}\n  onChange: (values: any) => void\n}\n\nexport const StatusSelect: React.FC<StatusSelectProps> = ({\n  onChange, isMultiple, allowClear, defaultValue\n}) => {\n  const [statuses, isLoading] = useStatusGet()\n  return isLoading || statuses === undefined ? <Spin /> : <Select \n    onChange={onChange} \n    allowClear={allowClear} \n    mode={isMultiple ? 'multiple' : undefined} \n    defaultValue={defaultValue}\n    options={(statuses as String[])\n      .map(status => ({value: status, label: status})\n      )}\n  />\n}"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,IAAI,QAAQ,MAAM;AACnC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,uBAAuB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AASpD,OAAO,MAAMC,YAAyC,GAAGA,CAAC;EACxDC,QAAQ;EAAEC,UAAU;EAAEC,UAAU;EAAEC;AACpC,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,QAAQ,EAAEC,SAAS,CAAC,GAAGV,YAAY,CAAC,CAAC;EAC5C,OAAOU,SAAS,IAAID,QAAQ,KAAKE,SAAS,gBAAGT,OAAA,CAACJ,IAAI;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAAGb,OAAA,CAACL,MAAM;IAC7DO,QAAQ,EAAEA,QAAS;IACnBE,UAAU,EAAEA,UAAW;IACvBU,IAAI,EAAEX,UAAU,GAAG,UAAU,GAAGM,SAAU;IAC1CJ,YAAY,EAAEA,YAAa;IAC3BU,OAAO,EAAGR,QAAQ,CACfS,GAAG,CAACC,MAAM,KAAK;MAACC,KAAK,EAAED,MAAM;MAAEE,KAAK,EAAEF;IAAM,CAAC,CAC9C;EAAE;IAAAP,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AACJ,CAAC;AAAAP,EAAA,CAbYL,YAAyC;EAAA,QAGtBH,YAAY;AAAA;AAAAsB,EAAA,GAH/BnB,YAAyC;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}