{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useQuery, useQueryClient } from 'react-query';\nimport { getLastImage } from '../services/getLastImage';\nimport { useEffect, useState } from 'react';\nimport { useDebounce } from '../../../hooks/useDebounce';\nexport const useLastImageGet = refetchDelay => {\n  _s();\n  const debounce = useDebounce();\n  const queryClient = useQueryClient();\n  const [sector, setSector] = useState();\n  const updateSector = sector => {\n    console.log(sector);\n    queryClient.invalidateQueries(['lastImage', {\n      id: sector.id\n    }]);\n    setSector(sector);\n  };\n  const {\n    data,\n    status,\n    refetch,\n    dataUpdatedAt\n  } = useQuery(['lastImage', {\n    id: sector === null || sector === void 0 ? void 0 : sector.id\n  }], {\n    queryFn: () => sector === undefined ? '' : getLastImage(sector.id)\n  });\n  useEffect(() => {\n    if (status === 'success') debounce(() => {\n      refetch();\n    }, refetchDelay);\n  }, [status, refetch]);\n  return {\n    lastImageString: data,\n    lastImageStatus: status,\n    lastImageUpdatedAt: dataUpdatedAt,\n    selectedSector: sector,\n    lastImageRefetch: refetch,\n    updateSectorId: updateSector\n  };\n};\n_s(useLastImageGet, \"SAr1fg4zgoDVsfw6hPjtBIXy908=\", false, function () {\n  return [useDebounce, useQueryClient, useQuery];\n});","map":{"version":3,"names":["useQuery","useQueryClient","getLastImage","useEffect","useState","useDebounce","useLastImageGet","refetchDelay","_s","debounce","queryClient","sector","setSector","updateSector","console","log","invalidateQueries","id","data","status","refetch","dataUpdatedAt","queryFn","undefined","lastImageString","lastImageStatus","lastImageUpdatedAt","selectedSector","lastImageRefetch","updateSectorId"],"sources":["/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/src/features/latestInspectionImage/hooks/useLastImageGet.ts"],"sourcesContent":["import { useQuery, useQueryClient } from 'react-query'\nimport { getLastImage } from '../services/getLastImage'\nimport { useEffect, useState } from 'react'\nimport { useDebounce } from '../../../hooks/useDebounce'\nimport { TSector } from '../../../types/sectorType'\n\nexport const useLastImageGet = (\n  refetchDelay: number\n) => {\n  const debounce = useDebounce()\n  \n  const queryClient = useQueryClient()\n\n  const [sector, setSector] = useState<TSector>()\n  const updateSector = (sector: TSector) => {\n    console.log(sector)\n    queryClient.invalidateQueries(['lastImage', {id: sector.id}])\n    setSector(sector)\n  }\n\n  const {data, status, refetch, dataUpdatedAt} = useQuery<string, string>(\n    ['lastImage', {id: sector?.id}],\n    {queryFn: () => sector === undefined ? '' : getLastImage(sector.id)}\n  )\n\n  useEffect(() => {\n    if (status === 'success')\n      debounce(() => {refetch()}, refetchDelay)\n  }, [status, refetch])\n  \n  return {\n    lastImageString: data, \n    lastImageStatus: status, \n    lastImageUpdatedAt: dataUpdatedAt,\n    selectedSector: sector,\n    lastImageRefetch: refetch,\n    updateSectorId: updateSector,\n  }\n}"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,cAAc,QAAQ,aAAa;AACtD,SAASC,YAAY,QAAQ,0BAA0B;AACvD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,4BAA4B;AAGxD,OAAO,MAAMC,eAAe,GAC1BC,YAAoB,IACjB;EAAAC,EAAA;EACH,MAAMC,QAAQ,GAAGJ,WAAW,CAAC,CAAC;EAE9B,MAAMK,WAAW,GAAGT,cAAc,CAAC,CAAC;EAEpC,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAU,CAAC;EAC/C,MAAMS,YAAY,GAAIF,MAAe,IAAK;IACxCG,OAAO,CAACC,GAAG,CAACJ,MAAM,CAAC;IACnBD,WAAW,CAACM,iBAAiB,CAAC,CAAC,WAAW,EAAE;MAACC,EAAE,EAAEN,MAAM,CAACM;IAAE,CAAC,CAAC,CAAC;IAC7DL,SAAS,CAACD,MAAM,CAAC;EACnB,CAAC;EAED,MAAM;IAACO,IAAI;IAAEC,MAAM;IAAEC,OAAO;IAAEC;EAAa,CAAC,GAAGrB,QAAQ,CACrD,CAAC,WAAW,EAAE;IAACiB,EAAE,EAAEN,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEM;EAAE,CAAC,CAAC,EAC/B;IAACK,OAAO,EAAEA,CAAA,KAAMX,MAAM,KAAKY,SAAS,GAAG,EAAE,GAAGrB,YAAY,CAACS,MAAM,CAACM,EAAE;EAAC,CACrE,CAAC;EAEDd,SAAS,CAAC,MAAM;IACd,IAAIgB,MAAM,KAAK,SAAS,EACtBV,QAAQ,CAAC,MAAM;MAACW,OAAO,CAAC,CAAC;IAAA,CAAC,EAAEb,YAAY,CAAC;EAC7C,CAAC,EAAE,CAACY,MAAM,EAAEC,OAAO,CAAC,CAAC;EAErB,OAAO;IACLI,eAAe,EAAEN,IAAI;IACrBO,eAAe,EAAEN,MAAM;IACvBO,kBAAkB,EAAEL,aAAa;IACjCM,cAAc,EAAEhB,MAAM;IACtBiB,gBAAgB,EAAER,OAAO;IACzBS,cAAc,EAAEhB;EAClB,CAAC;AACH,CAAC;AAAAL,EAAA,CAhCYF,eAAe;EAAA,QAGTD,WAAW,EAERJ,cAAc,EASaD,QAAQ;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}