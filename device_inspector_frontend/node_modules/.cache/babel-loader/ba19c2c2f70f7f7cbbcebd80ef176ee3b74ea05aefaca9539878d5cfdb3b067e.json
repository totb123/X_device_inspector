{"ast":null,"code":"var _jsxFileName = \"/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/src/features/latestInspectionImage/components/imageContainer.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Button, Image } from 'antd';\nimport { useImage } from '../context/latestInspectionImageContext';\nimport { FullScreen, useFullScreenHandle } from 'react-full-screen';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ImageContainer = () => {\n  _s();\n  const imageContext = useImage();\n  const toggleFullScreen = useFullScreenHandle();\n  const handlePreviousSectorClick = () => {\n    if (imageContext.selectedSector !== undefined) imageContext.updateSector(imageContext.selectedSector -= 1);\n  };\n  const handleNextSectorClick = () => {\n    if (imageContext.selectedSector !== undefined) imageContext.updateSector(imageContext.selectedSector += 1);\n  };\n  const handleBackButtonClick = async () => {\n    imageContext.updateSector(undefined);\n  };\n  return /*#__PURE__*/_jsxDEV(FullScreen, {\n    handle: toggleFullScreen,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [toggleFullScreen.active ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleBackButtonClick,\n        children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: imageContext.selectedSector === 1,\n        onClick: handlePreviousSectorClick,\n        children: \"\\u041F\\u0440\\u0435\\u0434\\u044B\\u0434\\u0443\\u0449\\u0438\\u0439 \\u0441\\u0435\\u043A\\u0442\\u043E\\u0440\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        src: `${process.env.REACT_APP_API_BASE_URL}/get_image?path=${imageContext.latestImage}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: imageContext.selectedSector === 4,\n        onClick: handleNextSectorClick,\n        children: \"\\u0421\\u043B\\u0435\\u0434\\u0443\\u044E\\u0449\\u0438\\u0439 \\u0441\\u0435\\u043A\\u0442\\u043E\\u0440\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), toggleFullScreen.active ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(Button, {\n        onClick: toggleFullScreen.enter,\n        children: \"\\u041D\\u0430 \\u0432\\u0435\\u0441\\u044C \\u044D\\u043A\\u0440\\u0430\\u043D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 11\n  }, this);\n};\n_s(ImageContainer, \"lpkazTFJAbOxZS8oAF4NF3XcS1I=\", false, function () {\n  return [useImage, useFullScreenHandle];\n});\n_c = ImageContainer;\nvar _c;\n$RefreshReg$(_c, \"ImageContainer\");","map":{"version":3,"names":["React","Button","Image","useImage","FullScreen","useFullScreenHandle","Fragment","_Fragment","jsxDEV","_jsxDEV","ImageContainer","_s","imageContext","toggleFullScreen","handlePreviousSectorClick","selectedSector","undefined","updateSector","handleNextSectorClick","handleBackButtonClick","handle","children","active","onClick","fileName","_jsxFileName","lineNumber","columnNumber","disabled","src","process","env","REACT_APP_API_BASE_URL","latestImage","enter","_c","$RefreshReg$"],"sources":["/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/src/features/latestInspectionImage/components/imageContainer.tsx"],"sourcesContent":["import React from 'react'\nimport { Space, Button, Image } from 'antd'\nimport { useImage } from '../context/latestInspectionImageContext'\nimport { FullScreen, useFullScreenHandle } from 'react-full-screen'\n\nexport const ImageContainer: React.FC = () => {\n  \n  const imageContext = useImage()\n  const toggleFullScreen = useFullScreenHandle()\n\n  const handlePreviousSectorClick = () => {\n    if(imageContext.selectedSector !== undefined)\n      imageContext.updateSector(imageContext.selectedSector -= 1 )\n  }\n  const handleNextSectorClick = () => {\n    if(imageContext.selectedSector !== undefined)\n      imageContext.updateSector(imageContext.selectedSector += 1 )\n  }\n  const handleBackButtonClick = async () => {\n    imageContext.updateSector(undefined)\n  }\n\n  return (<FullScreen handle={toggleFullScreen}>\n    <>\n      {\n        toggleFullScreen.active \n          ? <></>\n          : <Button\n            onClick={handleBackButtonClick}\n          >Назад</Button>\n      }\n      <Button\n        disabled={imageContext.selectedSector === 1}\n        onClick={handlePreviousSectorClick}\n      >Предыдущий сектор</Button>\n      {/* eslint-disable-next-line @stylistic/max-len */}\n      <Image src={`${process.env.REACT_APP_API_BASE_URL}/get_image?path=${imageContext.latestImage}`} />\n      <Button\n        disabled={imageContext.selectedSector === 4}\n        onClick={handleNextSectorClick}\n      >Следующий сектор</Button>\n      {\n        toggleFullScreen.active\n          ? <></>\n          : <Button\n            onClick={toggleFullScreen.enter}\n          >\n          На весь экран\n          </Button>\n      }\n    </>\n  </FullScreen>)\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAgBC,MAAM,EAAEC,KAAK,QAAQ,MAAM;AAC3C,SAASC,QAAQ,QAAQ,yCAAyC;AAClE,SAASC,UAAU,EAAEC,mBAAmB,QAAQ,mBAAmB;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnE,OAAO,MAAMC,cAAwB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE5C,MAAMC,YAAY,GAAGT,QAAQ,CAAC,CAAC;EAC/B,MAAMU,gBAAgB,GAAGR,mBAAmB,CAAC,CAAC;EAE9C,MAAMS,yBAAyB,GAAGA,CAAA,KAAM;IACtC,IAAGF,YAAY,CAACG,cAAc,KAAKC,SAAS,EAC1CJ,YAAY,CAACK,YAAY,CAACL,YAAY,CAACG,cAAc,IAAI,CAAE,CAAC;EAChE,CAAC;EACD,MAAMG,qBAAqB,GAAGA,CAAA,KAAM;IAClC,IAAGN,YAAY,CAACG,cAAc,KAAKC,SAAS,EAC1CJ,YAAY,CAACK,YAAY,CAACL,YAAY,CAACG,cAAc,IAAI,CAAE,CAAC;EAChE,CAAC;EACD,MAAMI,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACxCP,YAAY,CAACK,YAAY,CAACD,SAAS,CAAC;EACtC,CAAC;EAED,oBAAQP,OAAA,CAACL,UAAU;IAACgB,MAAM,EAAEP,gBAAiB;IAAAQ,QAAA,eAC3CZ,OAAA,CAAAF,SAAA;MAAAc,QAAA,GAEIR,gBAAgB,CAACS,MAAM,gBACnBb,OAAA,CAAAF,SAAA,mBAAI,CAAC,gBACLE,OAAA,CAACR,MAAM;QACPsB,OAAO,EAAEJ,qBAAsB;QAAAE,QAAA,EAChC;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAEnBlB,OAAA,CAACR,MAAM;QACL2B,QAAQ,EAAEhB,YAAY,CAACG,cAAc,KAAK,CAAE;QAC5CQ,OAAO,EAAET,yBAA0B;QAAAO,QAAA,EACpC;MAAiB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAE3BlB,OAAA,CAACP,KAAK;QAAC2B,GAAG,EAAG,GAAEC,OAAO,CAACC,GAAG,CAACC,sBAAuB,mBAAkBpB,YAAY,CAACqB,WAAY;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClGlB,OAAA,CAACR,MAAM;QACL2B,QAAQ,EAAEhB,YAAY,CAACG,cAAc,KAAK,CAAE;QAC5CQ,OAAO,EAAEL,qBAAsB;QAAAG,QAAA,EAChC;MAAgB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAExBd,gBAAgB,CAACS,MAAM,gBACnBb,OAAA,CAAAF,SAAA,mBAAI,CAAC,gBACLE,OAAA,CAACR,MAAM;QACPsB,OAAO,EAAEV,gBAAgB,CAACqB,KAAM;QAAAb,QAAA,EACjC;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eAEb;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AACf,CAAC;AAAAhB,EAAA,CA/CYD,cAAwB;EAAA,QAEdP,QAAQ,EACJE,mBAAmB;AAAA;AAAA8B,EAAA,GAHjCzB,cAAwB;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}