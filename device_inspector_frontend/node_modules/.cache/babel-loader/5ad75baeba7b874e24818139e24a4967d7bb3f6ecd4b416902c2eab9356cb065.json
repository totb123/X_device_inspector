{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = genColorMapToken;\nvar _tinycolor = require(\"@ctrl/tinycolor\");\nfunction genColorMapToken(seed, _ref) {\n  let {\n    generateColorPalettes,\n    generateNeutralColorPalettes\n  } = _ref;\n  const {\n    colorSuccess: colorSuccessBase,\n    colorWarning: colorWarningBase,\n    colorError: colorErrorBase,\n    colorInfo: colorInfoBase,\n    colorPrimary: colorPrimaryBase,\n    colorBgBase,\n    colorTextBase\n  } = seed;\n  const primaryColors = generateColorPalettes(colorPrimaryBase);\n  const successColors = generateColorPalettes(colorSuccessBase);\n  const warningColors = generateColorPalettes(colorWarningBase);\n  const errorColors = generateColorPalettes(colorErrorBase);\n  const infoColors = generateColorPalettes(colorInfoBase);\n  const neutralColors = generateNeutralColorPalettes(colorBgBase, colorTextBase);\n  // Color Link\n  const colorLink = seed.colorLink || seed.colorInfo;\n  const linkColors = generateColorPalettes(colorLink);\n  return Object.assign(Object.assign({}, neutralColors), {\n    colorPrimaryBg: primaryColors[1],\n    colorPrimaryBgHover: primaryColors[2],\n    colorPrimaryBorder: primaryColors[3],\n    colorPrimaryBorderHover: primaryColors[4],\n    colorPrimaryHover: primaryColors[5],\n    colorPrimary: primaryColors[6],\n    colorPrimaryActive: primaryColors[7],\n    colorPrimaryTextHover: primaryColors[8],\n    colorPrimaryText: primaryColors[9],\n    colorPrimaryTextActive: primaryColors[10],\n    colorSuccessBg: successColors[1],\n    colorSuccessBgHover: successColors[2],\n    colorSuccessBorder: successColors[3],\n    colorSuccessBorderHover: successColors[4],\n    colorSuccessHover: successColors[4],\n    colorSuccess: successColors[6],\n    colorSuccessActive: successColors[7],\n    colorSuccessTextHover: successColors[8],\n    colorSuccessText: successColors[9],\n    colorSuccessTextActive: successColors[10],\n    colorErrorBg: errorColors[1],\n    colorErrorBgHover: errorColors[2],\n    colorErrorBorder: errorColors[3],\n    colorErrorBorderHover: errorColors[4],\n    colorErrorHover: errorColors[5],\n    colorError: errorColors[6],\n    colorErrorActive: errorColors[7],\n    colorErrorTextHover: errorColors[8],\n    colorErrorText: errorColors[9],\n    colorErrorTextActive: errorColors[10],\n    colorWarningBg: warningColors[1],\n    colorWarningBgHover: warningColors[2],\n    colorWarningBorder: warningColors[3],\n    colorWarningBorderHover: warningColors[4],\n    colorWarningHover: warningColors[4],\n    colorWarning: warningColors[6],\n    colorWarningActive: warningColors[7],\n    colorWarningTextHover: warningColors[8],\n    colorWarningText: warningColors[9],\n    colorWarningTextActive: warningColors[10],\n    colorInfoBg: infoColors[1],\n    colorInfoBgHover: infoColors[2],\n    colorInfoBorder: infoColors[3],\n    colorInfoBorderHover: infoColors[4],\n    colorInfoHover: infoColors[4],\n    colorInfo: infoColors[6],\n    colorInfoActive: infoColors[7],\n    colorInfoTextHover: infoColors[8],\n    colorInfoText: infoColors[9],\n    colorInfoTextActive: infoColors[10],\n    colorLinkHover: linkColors[4],\n    colorLink: linkColors[6],\n    colorLinkActive: linkColors[7],\n    colorBgMask: new _tinycolor.TinyColor('#000').setAlpha(0.45).toRgbString(),\n    colorWhite: '#fff'\n  });\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","genColorMapToken","_tinycolor","require","seed","_ref","generateColorPalettes","generateNeutralColorPalettes","colorSuccess","colorSuccessBase","colorWarning","colorWarningBase","colorError","colorErrorBase","colorInfo","colorInfoBase","colorPrimary","colorPrimaryBase","colorBgBase","colorTextBase","primaryColors","successColors","warningColors","errorColors","infoColors","neutralColors","colorLink","linkColors","assign","colorPrimaryBg","colorPrimaryBgHover","colorPrimaryBorder","colorPrimaryBorderHover","colorPrimaryHover","colorPrimaryActive","colorPrimaryTextHover","colorPrimaryText","colorPrimaryTextActive","colorSuccessBg","colorSuccessBgHover","colorSuccessBorder","colorSuccessBorderHover","colorSuccessHover","colorSuccessActive","colorSuccessTextHover","colorSuccessText","colorSuccessTextActive","colorErrorBg","colorErrorBgHover","colorErrorBorder","colorErrorBorderHover","colorErrorHover","colorErrorActive","colorErrorTextHover","colorErrorText","colorErrorTextActive","colorWarningBg","colorWarningBgHover","colorWarningBorder","colorWarningBorderHover","colorWarningHover","colorWarningActive","colorWarningTextHover","colorWarningText","colorWarningTextActive","colorInfoBg","colorInfoBgHover","colorInfoBorder","colorInfoBorderHover","colorInfoHover","colorInfoActive","colorInfoTextHover","colorInfoText","colorInfoTextActive","colorLinkHover","colorLinkActive","colorBgMask","TinyColor","setAlpha","toRgbString","colorWhite"],"sources":["/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/device_inspector_frontend/node_modules/antd/lib/theme/themes/shared/genColorMapToken.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = genColorMapToken;\nvar _tinycolor = require(\"@ctrl/tinycolor\");\nfunction genColorMapToken(seed, _ref) {\n  let {\n    generateColorPalettes,\n    generateNeutralColorPalettes\n  } = _ref;\n  const {\n    colorSuccess: colorSuccessBase,\n    colorWarning: colorWarningBase,\n    colorError: colorErrorBase,\n    colorInfo: colorInfoBase,\n    colorPrimary: colorPrimaryBase,\n    colorBgBase,\n    colorTextBase\n  } = seed;\n  const primaryColors = generateColorPalettes(colorPrimaryBase);\n  const successColors = generateColorPalettes(colorSuccessBase);\n  const warningColors = generateColorPalettes(colorWarningBase);\n  const errorColors = generateColorPalettes(colorErrorBase);\n  const infoColors = generateColorPalettes(colorInfoBase);\n  const neutralColors = generateNeutralColorPalettes(colorBgBase, colorTextBase);\n  // Color Link\n  const colorLink = seed.colorLink || seed.colorInfo;\n  const linkColors = generateColorPalettes(colorLink);\n  return Object.assign(Object.assign({}, neutralColors), {\n    colorPrimaryBg: primaryColors[1],\n    colorPrimaryBgHover: primaryColors[2],\n    colorPrimaryBorder: primaryColors[3],\n    colorPrimaryBorderHover: primaryColors[4],\n    colorPrimaryHover: primaryColors[5],\n    colorPrimary: primaryColors[6],\n    colorPrimaryActive: primaryColors[7],\n    colorPrimaryTextHover: primaryColors[8],\n    colorPrimaryText: primaryColors[9],\n    colorPrimaryTextActive: primaryColors[10],\n    colorSuccessBg: successColors[1],\n    colorSuccessBgHover: successColors[2],\n    colorSuccessBorder: successColors[3],\n    colorSuccessBorderHover: successColors[4],\n    colorSuccessHover: successColors[4],\n    colorSuccess: successColors[6],\n    colorSuccessActive: successColors[7],\n    colorSuccessTextHover: successColors[8],\n    colorSuccessText: successColors[9],\n    colorSuccessTextActive: successColors[10],\n    colorErrorBg: errorColors[1],\n    colorErrorBgHover: errorColors[2],\n    colorErrorBorder: errorColors[3],\n    colorErrorBorderHover: errorColors[4],\n    colorErrorHover: errorColors[5],\n    colorError: errorColors[6],\n    colorErrorActive: errorColors[7],\n    colorErrorTextHover: errorColors[8],\n    colorErrorText: errorColors[9],\n    colorErrorTextActive: errorColors[10],\n    colorWarningBg: warningColors[1],\n    colorWarningBgHover: warningColors[2],\n    colorWarningBorder: warningColors[3],\n    colorWarningBorderHover: warningColors[4],\n    colorWarningHover: warningColors[4],\n    colorWarning: warningColors[6],\n    colorWarningActive: warningColors[7],\n    colorWarningTextHover: warningColors[8],\n    colorWarningText: warningColors[9],\n    colorWarningTextActive: warningColors[10],\n    colorInfoBg: infoColors[1],\n    colorInfoBgHover: infoColors[2],\n    colorInfoBorder: infoColors[3],\n    colorInfoBorderHover: infoColors[4],\n    colorInfoHover: infoColors[4],\n    colorInfo: infoColors[6],\n    colorInfoActive: infoColors[7],\n    colorInfoTextHover: infoColors[8],\n    colorInfoText: infoColors[9],\n    colorInfoTextActive: infoColors[10],\n    colorLinkHover: linkColors[4],\n    colorLink: linkColors[6],\n    colorLinkActive: linkColors[7],\n    colorBgMask: new _tinycolor.TinyColor('#000').setAlpha(0.45).toRgbString(),\n    colorWhite: '#fff'\n  });\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}