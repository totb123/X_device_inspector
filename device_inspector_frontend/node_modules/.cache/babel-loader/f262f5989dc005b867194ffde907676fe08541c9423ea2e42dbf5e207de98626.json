{"ast":null,"code":"import React, { useState, useRef, useEffect, useCallback, useMemo } from 'react';\nimport fscreen from 'fscreen';\nfunction useFullScreenHandle() {\n  var _useState = useState(false),\n    active = _useState[0],\n    setActive = _useState[1];\n  var node = useRef(null);\n  useEffect(function () {\n    var handleChange = function handleChange() {\n      setActive(fscreen.fullscreenElement === node.current);\n    };\n    fscreen.addEventListener('fullscreenchange', handleChange);\n    return function () {\n      return fscreen.removeEventListener('fullscreenchange', handleChange);\n    };\n  }, []);\n  var enter = useCallback(function () {\n    if (fscreen.fullscreenElement) {\n      return fscreen.exitFullscreen().then(function () {\n        return fscreen.requestFullscreen(node.current);\n      });\n    } else if (node.current) {\n      return fscreen.requestFullscreen(node.current);\n    }\n  }, []);\n  var exit = useCallback(function () {\n    if (fscreen.fullscreenElement === node.current) {\n      return fscreen.exitFullscreen();\n    }\n    return Promise.resolve();\n  }, []);\n  return useMemo(function () {\n    return {\n      active: active,\n      enter: enter,\n      exit: exit,\n      node: node\n    };\n  }, [active, enter, exit]);\n}\nvar FullScreen = function FullScreen(_ref) {\n  var handle = _ref.handle,\n    onChange = _ref.onChange,\n    children = _ref.children,\n    className = _ref.className;\n  var classNames = [];\n  if (className) {\n    classNames.push(className);\n  }\n  classNames.push('fullscreen');\n  if (handle.active) {\n    classNames.push('fullscreen-enabled');\n  }\n  useEffect(function () {\n    if (onChange) {\n      onChange(handle.active, handle);\n    }\n  }, [handle.active]);\n  return React.createElement(\"div\", {\n    className: classNames.join(' '),\n    ref: handle.node,\n    style: handle.active ? {\n      height: '100%',\n      width: '100%'\n    } : undefined\n  }, children);\n};\nexport { FullScreen, useFullScreenHandle };","map":{"version":3,"names":["useFullScreenHandle","useState","active","_useState","setActive","node","useRef","useEffect","handleChange","fscreen","fullscreenElement","current","addEventListener","removeEventListener","enter","useCallback","exitFullscreen","then","requestFullscreen","exit","Promise","resolve","useMemo","FullScreen","_ref","handle","onChange","children","className","classNames","push","React","createElement","join","ref","style","height","width","undefined"],"sources":["/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/node_modules/react-full-screen/src/index.tsx"],"sourcesContent":["import React, {\n  useCallback,\n  useState,\n  useRef,\n  useEffect,\n  useMemo,\n} from 'react';\nimport fscreen from 'fscreen';\n\nexport interface FullScreenHandle {\n  active: boolean;\n  enter: () => Promise<void>;\n  exit: () => Promise<void>;\n  node: React.MutableRefObject<HTMLDivElement | null>;\n}\n\nexport interface FullScreenProps {\n  handle: FullScreenHandle;\n  children: any;\n  onChange?: (state: boolean, handle: FullScreenHandle) => void;\n  className?: string;\n}\n\nexport function useFullScreenHandle(): FullScreenHandle {\n  const [active, setActive] = useState<boolean>(false);\n  const node = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    const handleChange = () => {\n      setActive(fscreen.fullscreenElement === node.current);\n    };\n    fscreen.addEventListener('fullscreenchange', handleChange);\n    return () => fscreen.removeEventListener('fullscreenchange', handleChange);\n  }, []);\n\n  const enter = useCallback(() => {\n    if (fscreen.fullscreenElement) {\n      return fscreen.exitFullscreen().then(() => {\n        return fscreen.requestFullscreen(node.current);\n      });\n    } else if (node.current) {\n      return fscreen.requestFullscreen(node.current);\n    }\n  }, []);\n\n  const exit = useCallback(() => {\n    if (fscreen.fullscreenElement === node.current) {\n      return fscreen.exitFullscreen();\n    }\n    return Promise.resolve();\n  }, []);\n\n  return useMemo(\n    () => ({\n      active,\n      enter,\n      exit,\n      node,\n    }),\n    [active, enter, exit],\n  );\n}\n\nexport const FullScreen: React.FC<FullScreenProps> = ({\n  handle,\n  onChange,\n  children,\n  className,\n}) => {\n  const classNames = [];\n  if (className) {\n    classNames.push(className);\n  }\n\n  classNames.push('fullscreen');\n\n  if (handle.active) {\n    classNames.push('fullscreen-enabled');\n  }\n\n  useEffect(() => {\n    if (onChange) {\n      onChange(handle.active, handle);\n    }\n  }, [handle.active]);\n\n  return (\n    <div\n      className={classNames.join(' ')}\n      ref={handle.node}\n      style={handle.active ? { height: '100%', width: '100%' } : undefined}\n    >\n      {children}\n    </div>\n  );\n};\n"],"mappings":";;SAuBgBA,oBAAA;kBACcC,QAAQ,CAAU,KAAV;IAA7BC,MAAA,GAAAC,SAAA;IAAQC,SAAA,GAAAD,SAAA;EACf,IAAME,IAAI,GAAGC,MAAM,CAAwB,IAAxB,CAAnB;EAEAC,SAAS,CAAC;IACR,IAAMC,YAAY,GAAG,SAAfA,YAAeA,CAAA;MACnBJ,SAAS,CAACK,OAAO,CAACC,iBAAR,KAA8BL,IAAI,CAACM,OAApC,CAAT;IACD,CAFD;IAGAF,OAAO,CAACG,gBAAR,CAAyB,kBAAzB,EAA6CJ,YAA7C;IACA,OAAO;MAAA,OAAMC,OAAO,CAACI,mBAAR,CAA4B,kBAA5B,EAAgDL,YAAhD,CAAN;IAAA,CAAP;EACD,CANQ,EAMN,EANM,CAAT;EAQA,IAAMM,KAAK,GAAGC,WAAW,CAAC;IACxB,IAAIN,OAAO,CAACC,iBAAZ,EAA+B;MAC7B,OAAOD,OAAO,CAACO,cAAR,GAAyBC,IAAzB,CAA8B;QACnC,OAAOR,OAAO,CAACS,iBAAR,CAA0Bb,IAAI,CAACM,OAA/B,CAAP;MACD,CAFM,CAAP;IAGD,CAJD,MAIO,IAAIN,IAAI,CAACM,OAAT,EAAkB;MACvB,OAAOF,OAAO,CAACS,iBAAR,CAA0Bb,IAAI,CAACM,OAA/B,CAAP;IACD;EACF,CARwB,EAQtB,EARsB,CAAzB;EAUA,IAAMQ,IAAI,GAAGJ,WAAW,CAAC;IACvB,IAAIN,OAAO,CAACC,iBAAR,KAA8BL,IAAI,CAACM,OAAvC,EAAgD;MAC9C,OAAOF,OAAO,CAACO,cAAR,EAAP;IACD;IACD,OAAOI,OAAO,CAACC,OAAR,EAAP;EACD,CALuB,EAKrB,EALqB,CAAxB;EAOA,OAAOC,OAAO,CACZ;IAAA,OAAO;MACLpB,MAAM,EAANA,MADK;MAELY,KAAK,EAALA,KAFK;MAGLK,IAAI,EAAJA,IAHK;MAILd,IAAI,EAAJA;IAJK,CAAP;EAAA,CADY,EAOZ,CAACH,MAAD,EAASY,KAAT,EAAgBK,IAAhB,CAPY,CAAd;AASD;IAEYI,UAAU,GAA8B,SAAxCA,UAAwCA,CAAAC,IAAA;MACnDC,MAAA,GAAAD,IAAA,CAAAC,MAAA;IACAC,QAAA,GAAAF,IAAA,CAAAE,QAAA;IACAC,QAAA,GAAAH,IAAA,CAAAG,QAAA;IACAC,SAAA,GAAAJ,IAAA,CAAAI,SAAA;EAEA,IAAMC,UAAU,GAAG,EAAnB;EACA,IAAID,SAAJ,EAAe;IACbC,UAAU,CAACC,IAAX,CAAgBF,SAAhB;EACD;EAEDC,UAAU,CAACC,IAAX,CAAgB,YAAhB;EAEA,IAAIL,MAAM,CAACvB,MAAX,EAAmB;IACjB2B,UAAU,CAACC,IAAX,CAAgB,oBAAhB;EACD;EAEDvB,SAAS,CAAC;IACR,IAAImB,QAAJ,EAAc;MACZA,QAAQ,CAACD,MAAM,CAACvB,MAAR,EAAgBuB,MAAhB,CAAR;IACD;EACF,CAJQ,EAIN,CAACA,MAAM,CAACvB,MAAR,CAJM,CAAT;EAMA,OACE6B,KAAA,CAAAC,aAAA;IACEJ,SAAS,EAAEC,UAAU,CAACI,IAAX,CAAgB,GAAhB;IACXC,GAAG,EAAET,MAAM,CAACpB,IAAA;IACZ8B,KAAK,EAAEV,MAAM,CAACvB,MAAP,GAAgB;MAAEkC,MAAM,EAAE,MAAV;MAAkBC,KAAK,EAAE;IAAzB,CAAhB,GAAoDC;GAH7D,EAKGX,QALH,CADF;AASD"},"metadata":{},"sourceType":"module","externalDependencies":[]}