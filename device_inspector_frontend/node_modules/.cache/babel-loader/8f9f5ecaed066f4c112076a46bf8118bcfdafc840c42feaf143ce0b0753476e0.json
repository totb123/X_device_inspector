{"ast":null,"code":"\"use strict\";\n\"use client\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _CheckOutlined = _interopRequireDefault(require(\"@ant-design/icons/CheckOutlined\"));\nvar _CopyOutlined = _interopRequireDefault(require(\"@ant-design/icons/CopyOutlined\"));\nvar _EditOutlined = _interopRequireDefault(require(\"@ant-design/icons/EditOutlined\"));\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\nvar _copyToClipboard = _interopRequireDefault(require(\"copy-to-clipboard\"));\nvar _rcResizeObserver = _interopRequireDefault(require(\"rc-resize-observer\"));\nvar _toArray = _interopRequireDefault(require(\"rc-util/lib/Children/toArray\"));\nvar _useLayoutEffect = _interopRequireDefault(require(\"rc-util/lib/hooks/useLayoutEffect\"));\nvar _useMergedState = _interopRequireDefault(require(\"rc-util/lib/hooks/useMergedState\"));\nvar _omit = _interopRequireDefault(require(\"rc-util/lib/omit\"));\nvar _ref3 = require(\"rc-util/lib/ref\");\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _styleChecker = require(\"../../_util/styleChecker\");\nvar _transButton = _interopRequireDefault(require(\"../../_util/transButton\"));\nvar _configProvider = require(\"../../config-provider\");\nvar _useLocale = _interopRequireDefault(require(\"../../locale/useLocale\"));\nvar _tooltip = _interopRequireDefault(require(\"../../tooltip\"));\nvar _Editable = _interopRequireDefault(require(\"../Editable\"));\nvar _Typography = _interopRequireDefault(require(\"../Typography\"));\nvar _useMergedConfig = _interopRequireDefault(require(\"../hooks/useMergedConfig\"));\nvar _useUpdatedEffect = _interopRequireDefault(require(\"../hooks/useUpdatedEffect\"));\nvar _Ellipsis = _interopRequireDefault(require(\"./Ellipsis\"));\nvar _EllipsisTooltip = _interopRequireDefault(require(\"./EllipsisTooltip\"));\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nfunction wrapperDecorations(_ref, content) {\n  let {\n    mark,\n    code,\n    underline,\n    delete: del,\n    strong,\n    keyboard,\n    italic\n  } = _ref;\n  let currentContent = content;\n  function wrap(tag, needed) {\n    if (!needed) {\n      return;\n    }\n    currentContent = /*#__PURE__*/React.createElement(tag, {}, currentContent);\n  }\n  wrap('strong', strong);\n  wrap('u', underline);\n  wrap('del', del);\n  wrap('code', code);\n  wrap('mark', mark);\n  wrap('kbd', keyboard);\n  wrap('i', italic);\n  return currentContent;\n}\nfunction getNode(dom, defaultNode, needDom) {\n  if (dom === true || dom === undefined) {\n    return defaultNode;\n  }\n  return dom || needDom && defaultNode;\n}\nfunction toList(val) {\n  if (val === false) {\n    return [false, false];\n  }\n  return Array.isArray(val) ? val : [val];\n}\nconst ELLIPSIS_STR = '...';\nconst Base = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _a, _b, _c;\n  const {\n      prefixCls: customizePrefixCls,\n      className,\n      style,\n      type,\n      disabled,\n      children,\n      ellipsis,\n      editable,\n      copyable,\n      component,\n      title\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"className\", \"style\", \"type\", \"disabled\", \"children\", \"ellipsis\", \"editable\", \"copyable\", \"component\", \"title\"]);\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(_configProvider.ConfigContext);\n  const [textLocale] = (0, _useLocale.default)('Text');\n  const typographyRef = React.useRef(null);\n  const editIconRef = React.useRef(null);\n  // ============================ MISC ============================\n  const prefixCls = getPrefixCls('typography', customizePrefixCls);\n  const textProps = (0, _omit.default)(restProps, ['mark', 'code', 'delete', 'underline', 'strong', 'keyboard', 'italic']);\n  // ========================== Editable ==========================\n  const [enableEdit, editConfig] = (0, _useMergedConfig.default)(editable);\n  const [editing, setEditing] = (0, _useMergedState.default)(false, {\n    value: editConfig.editing\n  });\n  const {\n    triggerType = ['icon']\n  } = editConfig;\n  const triggerEdit = edit => {\n    var _a;\n    if (edit) {\n      (_a = editConfig.onStart) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    }\n    setEditing(edit);\n  };\n  // Focus edit icon when back\n  (0, _useUpdatedEffect.default)(() => {\n    var _a;\n    if (!editing) {\n      (_a = editIconRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  }, [editing]);\n  const onEditClick = e => {\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    triggerEdit(true);\n  };\n  const onEditChange = value => {\n    var _a;\n    (_a = editConfig.onChange) === null || _a === void 0 ? void 0 : _a.call(editConfig, value);\n    triggerEdit(false);\n  };\n  const onEditCancel = () => {\n    var _a;\n    (_a = editConfig.onCancel) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    triggerEdit(false);\n  };\n  // ========================== Copyable ==========================\n  const [enableCopy, copyConfig] = (0, _useMergedConfig.default)(copyable);\n  const [copied, setCopied] = React.useState(false);\n  const copyIdRef = React.useRef(null);\n  const copyOptions = {};\n  if (copyConfig.format) {\n    copyOptions.format = copyConfig.format;\n  }\n  const cleanCopyId = () => {\n    if (copyIdRef.current) {\n      clearTimeout(copyIdRef.current);\n    }\n  };\n  const onCopyClick = e => {\n    var _a;\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    e === null || e === void 0 ? void 0 : e.stopPropagation();\n    (0, _copyToClipboard.default)(copyConfig.text || String(children) || '', copyOptions);\n    setCopied(true);\n    // Trigger tips update\n    cleanCopyId();\n    copyIdRef.current = setTimeout(() => {\n      setCopied(false);\n    }, 3000);\n    (_a = copyConfig.onCopy) === null || _a === void 0 ? void 0 : _a.call(copyConfig, e);\n  };\n  React.useEffect(() => cleanCopyId, []);\n  // ========================== Ellipsis ==========================\n  const [isLineClampSupport, setIsLineClampSupport] = React.useState(false);\n  const [isTextOverflowSupport, setIsTextOverflowSupport] = React.useState(false);\n  const [expanded, setExpanded] = React.useState(false);\n  const [isJsEllipsis, setIsJsEllipsis] = React.useState(false);\n  const [isNativeEllipsis, setIsNativeEllipsis] = React.useState(false);\n  const [isNativeVisible, setIsNativeVisible] = React.useState(true);\n  const [enableEllipsis, ellipsisConfig] = (0, _useMergedConfig.default)(ellipsis, {\n    expandable: false\n  });\n  const mergedEnableEllipsis = enableEllipsis && !expanded;\n  // Shared prop to reduce bundle size\n  const {\n    rows = 1\n  } = ellipsisConfig;\n  const needMeasureEllipsis = React.useMemo(() =>\n  // Disable ellipsis\n  !mergedEnableEllipsis ||\n  // Provide suffix\n  ellipsisConfig.suffix !== undefined || ellipsisConfig.onEllipsis ||\n  // Can't use css ellipsis since we need to provide the place for button\n  ellipsisConfig.expandable || enableEdit || enableCopy, [mergedEnableEllipsis, ellipsisConfig, enableEdit, enableCopy]);\n  (0, _useLayoutEffect.default)(() => {\n    if (enableEllipsis && !needMeasureEllipsis) {\n      setIsLineClampSupport((0, _styleChecker.isStyleSupport)('webkitLineClamp'));\n      setIsTextOverflowSupport((0, _styleChecker.isStyleSupport)('textOverflow'));\n    }\n  }, [needMeasureEllipsis, enableEllipsis]);\n  const cssEllipsis = React.useMemo(() => {\n    if (needMeasureEllipsis) {\n      return false;\n    }\n    if (rows === 1) {\n      return isTextOverflowSupport;\n    }\n    return isLineClampSupport;\n  }, [needMeasureEllipsis, isTextOverflowSupport, isLineClampSupport]);\n  const isMergedEllipsis = mergedEnableEllipsis && (cssEllipsis ? isNativeEllipsis : isJsEllipsis);\n  const cssTextOverflow = mergedEnableEllipsis && rows === 1 && cssEllipsis;\n  const cssLineClamp = mergedEnableEllipsis && rows > 1 && cssEllipsis;\n  // >>>>> Expand\n  const onExpandClick = e => {\n    var _a;\n    setExpanded(true);\n    (_a = ellipsisConfig.onExpand) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, e);\n  };\n  const [ellipsisWidth, setEllipsisWidth] = React.useState(0);\n  const [ellipsisFontSize, setEllipsisFontSize] = React.useState(0);\n  const onResize = (_ref2, element) => {\n    let {\n      offsetWidth\n    } = _ref2;\n    var _a;\n    setEllipsisWidth(offsetWidth);\n    setEllipsisFontSize(parseInt((_a = window.getComputedStyle) === null || _a === void 0 ? void 0 : _a.call(window, element).fontSize, 10) || 0);\n  };\n  // >>>>> JS Ellipsis\n  const onJsEllipsis = jsEllipsis => {\n    var _a;\n    setIsJsEllipsis(jsEllipsis);\n    // Trigger if changed\n    if (isJsEllipsis !== jsEllipsis) {\n      (_a = ellipsisConfig.onEllipsis) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, jsEllipsis);\n    }\n  };\n  // >>>>> Native ellipsis\n  React.useEffect(() => {\n    const textEle = typographyRef.current;\n    if (enableEllipsis && cssEllipsis && textEle) {\n      const currentEllipsis = cssLineClamp ? textEle.offsetHeight < textEle.scrollHeight : textEle.offsetWidth < textEle.scrollWidth;\n      if (isNativeEllipsis !== currentEllipsis) {\n        setIsNativeEllipsis(currentEllipsis);\n      }\n    }\n  }, [enableEllipsis, cssEllipsis, children, cssLineClamp, isNativeVisible]);\n  // https://github.com/ant-design/ant-design/issues/36786\n  // Use IntersectionObserver to check if element is invisible\n  React.useEffect(() => {\n    const textEle = typographyRef.current;\n    if (typeof IntersectionObserver === 'undefined' || !textEle || !cssEllipsis || !mergedEnableEllipsis) {\n      return;\n    }\n    /* eslint-disable-next-line compat/compat */\n    const observer = new IntersectionObserver(() => {\n      setIsNativeVisible(!!textEle.offsetParent);\n    });\n    observer.observe(textEle);\n    return () => {\n      observer.disconnect();\n    };\n  }, [cssEllipsis, mergedEnableEllipsis]);\n  // ========================== Tooltip ===========================\n  let tooltipProps = {};\n  if (ellipsisConfig.tooltip === true) {\n    tooltipProps = {\n      title: (_a = editConfig.text) !== null && _a !== void 0 ? _a : children\n    };\n  } else if ( /*#__PURE__*/React.isValidElement(ellipsisConfig.tooltip)) {\n    tooltipProps = {\n      title: ellipsisConfig.tooltip\n    };\n  } else if (typeof ellipsisConfig.tooltip === 'object') {\n    tooltipProps = Object.assign({\n      title: (_b = editConfig.text) !== null && _b !== void 0 ? _b : children\n    }, ellipsisConfig.tooltip);\n  } else {\n    tooltipProps = {\n      title: ellipsisConfig.tooltip\n    };\n  }\n  const topAriaLabel = React.useMemo(() => {\n    const isValid = val => ['string', 'number'].includes(typeof val);\n    if (!enableEllipsis || cssEllipsis) {\n      return undefined;\n    }\n    if (isValid(editConfig.text)) {\n      return editConfig.text;\n    }\n    if (isValid(children)) {\n      return children;\n    }\n    if (isValid(title)) {\n      return title;\n    }\n    if (isValid(tooltipProps.title)) {\n      return tooltipProps.title;\n    }\n    return undefined;\n  }, [enableEllipsis, cssEllipsis, title, tooltipProps.title, isMergedEllipsis]);\n  // =========================== Render ===========================\n  // >>>>>>>>>>> Editing input\n  if (editing) {\n    return /*#__PURE__*/React.createElement(_Editable.default, {\n      value: (_c = editConfig.text) !== null && _c !== void 0 ? _c : typeof children === 'string' ? children : '',\n      onSave: onEditChange,\n      onCancel: onEditCancel,\n      onEnd: editConfig.onEnd,\n      prefixCls: prefixCls,\n      className: className,\n      style: style,\n      direction: direction,\n      component: component,\n      maxLength: editConfig.maxLength,\n      autoSize: editConfig.autoSize,\n      enterIcon: editConfig.enterIcon\n    });\n  }\n  // >>>>>>>>>>> Typography\n  // Expand\n  const renderExpand = () => {\n    const {\n      expandable,\n      symbol\n    } = ellipsisConfig;\n    if (!expandable) return null;\n    let expandContent;\n    if (symbol) {\n      expandContent = symbol;\n    } else {\n      expandContent = textLocale === null || textLocale === void 0 ? void 0 : textLocale.expand;\n    }\n    return /*#__PURE__*/React.createElement(\"a\", {\n      key: \"expand\",\n      className: `${prefixCls}-expand`,\n      onClick: onExpandClick,\n      \"aria-label\": textLocale === null || textLocale === void 0 ? void 0 : textLocale.expand\n    }, expandContent);\n  };\n  // Edit\n  const renderEdit = () => {\n    if (!enableEdit) return;\n    const {\n      icon,\n      tooltip\n    } = editConfig;\n    const editTitle = (0, _toArray.default)(tooltip)[0] || (textLocale === null || textLocale === void 0 ? void 0 : textLocale.edit);\n    const ariaLabel = typeof editTitle === 'string' ? editTitle : '';\n    return triggerType.includes('icon') ? ( /*#__PURE__*/React.createElement(_tooltip.default, {\n      key: \"edit\",\n      title: tooltip === false ? '' : editTitle\n    }, /*#__PURE__*/React.createElement(_transButton.default, {\n      ref: editIconRef,\n      className: `${prefixCls}-edit`,\n      onClick: onEditClick,\n      \"aria-label\": ariaLabel\n    }, icon || /*#__PURE__*/React.createElement(_EditOutlined.default, {\n      role: \"button\"\n    })))) : null;\n  };\n  // Copy\n  const renderCopy = () => {\n    if (!enableCopy) return;\n    const {\n      tooltips,\n      icon\n    } = copyConfig;\n    const tooltipNodes = toList(tooltips);\n    const iconNodes = toList(icon);\n    const copyTitle = copied ? getNode(tooltipNodes[1], textLocale === null || textLocale === void 0 ? void 0 : textLocale.copied) : getNode(tooltipNodes[0], textLocale === null || textLocale === void 0 ? void 0 : textLocale.copy);\n    const systemStr = copied ? textLocale === null || textLocale === void 0 ? void 0 : textLocale.copied : textLocale === null || textLocale === void 0 ? void 0 : textLocale.copy;\n    const ariaLabel = typeof copyTitle === 'string' ? copyTitle : systemStr;\n    return /*#__PURE__*/React.createElement(_tooltip.default, {\n      key: \"copy\",\n      title: copyTitle\n    }, /*#__PURE__*/React.createElement(_transButton.default, {\n      className: (0, _classnames.default)(`${prefixCls}-copy`, copied && `${prefixCls}-copy-success`),\n      onClick: onCopyClick,\n      \"aria-label\": ariaLabel\n    }, copied ? getNode(iconNodes[1], /*#__PURE__*/React.createElement(_CheckOutlined.default, null), true) : getNode(iconNodes[0], /*#__PURE__*/React.createElement(_CopyOutlined.default, null), true)));\n  };\n  const renderOperations = renderExpanded => [renderExpanded && renderExpand(), renderEdit(), renderCopy()];\n  const renderEllipsis = needEllipsis => [needEllipsis && ( /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": true,\n    key: \"ellipsis\"\n  }, ELLIPSIS_STR)), ellipsisConfig.suffix, renderOperations(needEllipsis)];\n  return /*#__PURE__*/React.createElement(_rcResizeObserver.default, {\n    onResize: onResize,\n    disabled: !mergedEnableEllipsis || cssEllipsis\n  }, resizeRef => ( /*#__PURE__*/React.createElement(_EllipsisTooltip.default, {\n    tooltipProps: tooltipProps,\n    enabledEllipsis: mergedEnableEllipsis,\n    isEllipsis: isMergedEllipsis\n  }, /*#__PURE__*/React.createElement(_Typography.default, Object.assign({\n    className: (0, _classnames.default)({\n      [`${prefixCls}-${type}`]: type,\n      [`${prefixCls}-disabled`]: disabled,\n      [`${prefixCls}-ellipsis`]: enableEllipsis,\n      [`${prefixCls}-single-line`]: mergedEnableEllipsis && rows === 1,\n      [`${prefixCls}-ellipsis-single-line`]: cssTextOverflow,\n      [`${prefixCls}-ellipsis-multiple-line`]: cssLineClamp\n    }, className),\n    prefixCls: customizePrefixCls,\n    style: Object.assign(Object.assign({}, style), {\n      WebkitLineClamp: cssLineClamp ? rows : undefined\n    }),\n    component: component,\n    ref: (0, _ref3.composeRef)(resizeRef, typographyRef, ref),\n    direction: direction,\n    onClick: triggerType.includes('text') ? onEditClick : undefined,\n    \"aria-label\": topAriaLabel === null || topAriaLabel === void 0 ? void 0 : topAriaLabel.toString(),\n    title: title\n  }, textProps), /*#__PURE__*/React.createElement(_Ellipsis.default, {\n    enabledMeasure: mergedEnableEllipsis && !cssEllipsis,\n    text: children,\n    rows: rows,\n    width: ellipsisWidth,\n    fontSize: ellipsisFontSize,\n    onEllipsis: onJsEllipsis\n  }, (node, needEllipsis) => {\n    let renderNode = node;\n    if (node.length && needEllipsis && topAriaLabel) {\n      renderNode = /*#__PURE__*/React.createElement(\"span\", {\n        key: \"show-content\",\n        \"aria-hidden\": true\n      }, renderNode);\n    }\n    const wrappedContext = wrapperDecorations(props, /*#__PURE__*/React.createElement(React.Fragment, null, renderNode, renderEllipsis(needEllipsis)));\n    return wrappedContext;\n  })))));\n});\nvar _default = exports.default = Base;","map":{"version":3,"names":["_interopRequireWildcard","require","default","_interopRequireDefault","Object","defineProperty","exports","value","_CheckOutlined","_CopyOutlined","_EditOutlined","_classnames","_copyToClipboard","_rcResizeObserver","_toArray","_useLayoutEffect","_useMergedState","_omit","_ref3","React","_styleChecker","_transButton","_configProvider","_useLocale","_tooltip","_Editable","_Typography","_useMergedConfig","_useUpdatedEffect","_Ellipsis","_EllipsisTooltip","__rest","s","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","wrapperDecorations","_ref","content","mark","code","underline","delete","del","strong","keyboard","italic","currentContent","wrap","tag","needed","createElement","getNode","dom","defaultNode","needDom","undefined","toList","val","Array","isArray","ELLIPSIS_STR","Base","forwardRef","props","ref","_a","_b","_c","prefixCls","customizePrefixCls","className","style","type","disabled","children","ellipsis","editable","copyable","component","title","restProps","getPrefixCls","direction","useContext","ConfigContext","textLocale","typographyRef","useRef","editIconRef","textProps","enableEdit","editConfig","editing","setEditing","triggerType","triggerEdit","edit","onStart","current","focus","onEditClick","preventDefault","onEditChange","onChange","onEditCancel","onCancel","enableCopy","copyConfig","copied","setCopied","useState","copyIdRef","copyOptions","format","cleanCopyId","clearTimeout","onCopyClick","stopPropagation","text","String","setTimeout","onCopy","useEffect","isLineClampSupport","setIsLineClampSupport","isTextOverflowSupport","setIsTextOverflowSupport","expanded","setExpanded","isJsEllipsis","setIsJsEllipsis","isNativeEllipsis","setIsNativeEllipsis","isNativeVisible","setIsNativeVisible","enableEllipsis","ellipsisConfig","expandable","mergedEnableEllipsis","rows","needMeasureEllipsis","useMemo","suffix","onEllipsis","isStyleSupport","cssEllipsis","isMergedEllipsis","cssTextOverflow","cssLineClamp","onExpandClick","onExpand","ellipsisWidth","setEllipsisWidth","ellipsisFontSize","setEllipsisFontSize","onResize","_ref2","element","offsetWidth","parseInt","window","getComputedStyle","fontSize","onJsEllipsis","jsEllipsis","textEle","currentEllipsis","offsetHeight","scrollHeight","scrollWidth","IntersectionObserver","observer","offsetParent","observe","disconnect","tooltipProps","tooltip","isValidElement","assign","topAriaLabel","isValid","includes","onSave","onEnd","maxLength","autoSize","enterIcon","renderExpand","symbol","expandContent","expand","key","onClick","renderEdit","icon","editTitle","ariaLabel","role","renderCopy","tooltips","tooltipNodes","iconNodes","copyTitle","copy","systemStr","renderOperations","renderExpanded","renderEllipsis","needEllipsis","resizeRef","enabledEllipsis","isEllipsis","WebkitLineClamp","composeRef","toString","enabledMeasure","width","node","renderNode","wrappedContext","Fragment","_default"],"sources":["/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/node_modules/antd/lib/typography/Base/index.js"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _CheckOutlined = _interopRequireDefault(require(\"@ant-design/icons/CheckOutlined\"));\nvar _CopyOutlined = _interopRequireDefault(require(\"@ant-design/icons/CopyOutlined\"));\nvar _EditOutlined = _interopRequireDefault(require(\"@ant-design/icons/EditOutlined\"));\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\nvar _copyToClipboard = _interopRequireDefault(require(\"copy-to-clipboard\"));\nvar _rcResizeObserver = _interopRequireDefault(require(\"rc-resize-observer\"));\nvar _toArray = _interopRequireDefault(require(\"rc-util/lib/Children/toArray\"));\nvar _useLayoutEffect = _interopRequireDefault(require(\"rc-util/lib/hooks/useLayoutEffect\"));\nvar _useMergedState = _interopRequireDefault(require(\"rc-util/lib/hooks/useMergedState\"));\nvar _omit = _interopRequireDefault(require(\"rc-util/lib/omit\"));\nvar _ref3 = require(\"rc-util/lib/ref\");\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _styleChecker = require(\"../../_util/styleChecker\");\nvar _transButton = _interopRequireDefault(require(\"../../_util/transButton\"));\nvar _configProvider = require(\"../../config-provider\");\nvar _useLocale = _interopRequireDefault(require(\"../../locale/useLocale\"));\nvar _tooltip = _interopRequireDefault(require(\"../../tooltip\"));\nvar _Editable = _interopRequireDefault(require(\"../Editable\"));\nvar _Typography = _interopRequireDefault(require(\"../Typography\"));\nvar _useMergedConfig = _interopRequireDefault(require(\"../hooks/useMergedConfig\"));\nvar _useUpdatedEffect = _interopRequireDefault(require(\"../hooks/useUpdatedEffect\"));\nvar _Ellipsis = _interopRequireDefault(require(\"./Ellipsis\"));\nvar _EllipsisTooltip = _interopRequireDefault(require(\"./EllipsisTooltip\"));\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nfunction wrapperDecorations(_ref, content) {\n  let {\n    mark,\n    code,\n    underline,\n    delete: del,\n    strong,\n    keyboard,\n    italic\n  } = _ref;\n  let currentContent = content;\n  function wrap(tag, needed) {\n    if (!needed) {\n      return;\n    }\n    currentContent = /*#__PURE__*/React.createElement(tag, {}, currentContent);\n  }\n  wrap('strong', strong);\n  wrap('u', underline);\n  wrap('del', del);\n  wrap('code', code);\n  wrap('mark', mark);\n  wrap('kbd', keyboard);\n  wrap('i', italic);\n  return currentContent;\n}\nfunction getNode(dom, defaultNode, needDom) {\n  if (dom === true || dom === undefined) {\n    return defaultNode;\n  }\n  return dom || needDom && defaultNode;\n}\nfunction toList(val) {\n  if (val === false) {\n    return [false, false];\n  }\n  return Array.isArray(val) ? val : [val];\n}\nconst ELLIPSIS_STR = '...';\nconst Base = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _a, _b, _c;\n  const {\n      prefixCls: customizePrefixCls,\n      className,\n      style,\n      type,\n      disabled,\n      children,\n      ellipsis,\n      editable,\n      copyable,\n      component,\n      title\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"className\", \"style\", \"type\", \"disabled\", \"children\", \"ellipsis\", \"editable\", \"copyable\", \"component\", \"title\"]);\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(_configProvider.ConfigContext);\n  const [textLocale] = (0, _useLocale.default)('Text');\n  const typographyRef = React.useRef(null);\n  const editIconRef = React.useRef(null);\n  // ============================ MISC ============================\n  const prefixCls = getPrefixCls('typography', customizePrefixCls);\n  const textProps = (0, _omit.default)(restProps, ['mark', 'code', 'delete', 'underline', 'strong', 'keyboard', 'italic']);\n  // ========================== Editable ==========================\n  const [enableEdit, editConfig] = (0, _useMergedConfig.default)(editable);\n  const [editing, setEditing] = (0, _useMergedState.default)(false, {\n    value: editConfig.editing\n  });\n  const {\n    triggerType = ['icon']\n  } = editConfig;\n  const triggerEdit = edit => {\n    var _a;\n    if (edit) {\n      (_a = editConfig.onStart) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    }\n    setEditing(edit);\n  };\n  // Focus edit icon when back\n  (0, _useUpdatedEffect.default)(() => {\n    var _a;\n    if (!editing) {\n      (_a = editIconRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  }, [editing]);\n  const onEditClick = e => {\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    triggerEdit(true);\n  };\n  const onEditChange = value => {\n    var _a;\n    (_a = editConfig.onChange) === null || _a === void 0 ? void 0 : _a.call(editConfig, value);\n    triggerEdit(false);\n  };\n  const onEditCancel = () => {\n    var _a;\n    (_a = editConfig.onCancel) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    triggerEdit(false);\n  };\n  // ========================== Copyable ==========================\n  const [enableCopy, copyConfig] = (0, _useMergedConfig.default)(copyable);\n  const [copied, setCopied] = React.useState(false);\n  const copyIdRef = React.useRef(null);\n  const copyOptions = {};\n  if (copyConfig.format) {\n    copyOptions.format = copyConfig.format;\n  }\n  const cleanCopyId = () => {\n    if (copyIdRef.current) {\n      clearTimeout(copyIdRef.current);\n    }\n  };\n  const onCopyClick = e => {\n    var _a;\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    e === null || e === void 0 ? void 0 : e.stopPropagation();\n    (0, _copyToClipboard.default)(copyConfig.text || String(children) || '', copyOptions);\n    setCopied(true);\n    // Trigger tips update\n    cleanCopyId();\n    copyIdRef.current = setTimeout(() => {\n      setCopied(false);\n    }, 3000);\n    (_a = copyConfig.onCopy) === null || _a === void 0 ? void 0 : _a.call(copyConfig, e);\n  };\n  React.useEffect(() => cleanCopyId, []);\n  // ========================== Ellipsis ==========================\n  const [isLineClampSupport, setIsLineClampSupport] = React.useState(false);\n  const [isTextOverflowSupport, setIsTextOverflowSupport] = React.useState(false);\n  const [expanded, setExpanded] = React.useState(false);\n  const [isJsEllipsis, setIsJsEllipsis] = React.useState(false);\n  const [isNativeEllipsis, setIsNativeEllipsis] = React.useState(false);\n  const [isNativeVisible, setIsNativeVisible] = React.useState(true);\n  const [enableEllipsis, ellipsisConfig] = (0, _useMergedConfig.default)(ellipsis, {\n    expandable: false\n  });\n  const mergedEnableEllipsis = enableEllipsis && !expanded;\n  // Shared prop to reduce bundle size\n  const {\n    rows = 1\n  } = ellipsisConfig;\n  const needMeasureEllipsis = React.useMemo(() =>\n  // Disable ellipsis\n  !mergedEnableEllipsis ||\n  // Provide suffix\n  ellipsisConfig.suffix !== undefined || ellipsisConfig.onEllipsis ||\n  // Can't use css ellipsis since we need to provide the place for button\n  ellipsisConfig.expandable || enableEdit || enableCopy, [mergedEnableEllipsis, ellipsisConfig, enableEdit, enableCopy]);\n  (0, _useLayoutEffect.default)(() => {\n    if (enableEllipsis && !needMeasureEllipsis) {\n      setIsLineClampSupport((0, _styleChecker.isStyleSupport)('webkitLineClamp'));\n      setIsTextOverflowSupport((0, _styleChecker.isStyleSupport)('textOverflow'));\n    }\n  }, [needMeasureEllipsis, enableEllipsis]);\n  const cssEllipsis = React.useMemo(() => {\n    if (needMeasureEllipsis) {\n      return false;\n    }\n    if (rows === 1) {\n      return isTextOverflowSupport;\n    }\n    return isLineClampSupport;\n  }, [needMeasureEllipsis, isTextOverflowSupport, isLineClampSupport]);\n  const isMergedEllipsis = mergedEnableEllipsis && (cssEllipsis ? isNativeEllipsis : isJsEllipsis);\n  const cssTextOverflow = mergedEnableEllipsis && rows === 1 && cssEllipsis;\n  const cssLineClamp = mergedEnableEllipsis && rows > 1 && cssEllipsis;\n  // >>>>> Expand\n  const onExpandClick = e => {\n    var _a;\n    setExpanded(true);\n    (_a = ellipsisConfig.onExpand) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, e);\n  };\n  const [ellipsisWidth, setEllipsisWidth] = React.useState(0);\n  const [ellipsisFontSize, setEllipsisFontSize] = React.useState(0);\n  const onResize = (_ref2, element) => {\n    let {\n      offsetWidth\n    } = _ref2;\n    var _a;\n    setEllipsisWidth(offsetWidth);\n    setEllipsisFontSize(parseInt((_a = window.getComputedStyle) === null || _a === void 0 ? void 0 : _a.call(window, element).fontSize, 10) || 0);\n  };\n  // >>>>> JS Ellipsis\n  const onJsEllipsis = jsEllipsis => {\n    var _a;\n    setIsJsEllipsis(jsEllipsis);\n    // Trigger if changed\n    if (isJsEllipsis !== jsEllipsis) {\n      (_a = ellipsisConfig.onEllipsis) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, jsEllipsis);\n    }\n  };\n  // >>>>> Native ellipsis\n  React.useEffect(() => {\n    const textEle = typographyRef.current;\n    if (enableEllipsis && cssEllipsis && textEle) {\n      const currentEllipsis = cssLineClamp ? textEle.offsetHeight < textEle.scrollHeight : textEle.offsetWidth < textEle.scrollWidth;\n      if (isNativeEllipsis !== currentEllipsis) {\n        setIsNativeEllipsis(currentEllipsis);\n      }\n    }\n  }, [enableEllipsis, cssEllipsis, children, cssLineClamp, isNativeVisible]);\n  // https://github.com/ant-design/ant-design/issues/36786\n  // Use IntersectionObserver to check if element is invisible\n  React.useEffect(() => {\n    const textEle = typographyRef.current;\n    if (typeof IntersectionObserver === 'undefined' || !textEle || !cssEllipsis || !mergedEnableEllipsis) {\n      return;\n    }\n    /* eslint-disable-next-line compat/compat */\n    const observer = new IntersectionObserver(() => {\n      setIsNativeVisible(!!textEle.offsetParent);\n    });\n    observer.observe(textEle);\n    return () => {\n      observer.disconnect();\n    };\n  }, [cssEllipsis, mergedEnableEllipsis]);\n  // ========================== Tooltip ===========================\n  let tooltipProps = {};\n  if (ellipsisConfig.tooltip === true) {\n    tooltipProps = {\n      title: (_a = editConfig.text) !== null && _a !== void 0 ? _a : children\n    };\n  } else if ( /*#__PURE__*/React.isValidElement(ellipsisConfig.tooltip)) {\n    tooltipProps = {\n      title: ellipsisConfig.tooltip\n    };\n  } else if (typeof ellipsisConfig.tooltip === 'object') {\n    tooltipProps = Object.assign({\n      title: (_b = editConfig.text) !== null && _b !== void 0 ? _b : children\n    }, ellipsisConfig.tooltip);\n  } else {\n    tooltipProps = {\n      title: ellipsisConfig.tooltip\n    };\n  }\n  const topAriaLabel = React.useMemo(() => {\n    const isValid = val => ['string', 'number'].includes(typeof val);\n    if (!enableEllipsis || cssEllipsis) {\n      return undefined;\n    }\n    if (isValid(editConfig.text)) {\n      return editConfig.text;\n    }\n    if (isValid(children)) {\n      return children;\n    }\n    if (isValid(title)) {\n      return title;\n    }\n    if (isValid(tooltipProps.title)) {\n      return tooltipProps.title;\n    }\n    return undefined;\n  }, [enableEllipsis, cssEllipsis, title, tooltipProps.title, isMergedEllipsis]);\n  // =========================== Render ===========================\n  // >>>>>>>>>>> Editing input\n  if (editing) {\n    return /*#__PURE__*/React.createElement(_Editable.default, {\n      value: (_c = editConfig.text) !== null && _c !== void 0 ? _c : typeof children === 'string' ? children : '',\n      onSave: onEditChange,\n      onCancel: onEditCancel,\n      onEnd: editConfig.onEnd,\n      prefixCls: prefixCls,\n      className: className,\n      style: style,\n      direction: direction,\n      component: component,\n      maxLength: editConfig.maxLength,\n      autoSize: editConfig.autoSize,\n      enterIcon: editConfig.enterIcon\n    });\n  }\n  // >>>>>>>>>>> Typography\n  // Expand\n  const renderExpand = () => {\n    const {\n      expandable,\n      symbol\n    } = ellipsisConfig;\n    if (!expandable) return null;\n    let expandContent;\n    if (symbol) {\n      expandContent = symbol;\n    } else {\n      expandContent = textLocale === null || textLocale === void 0 ? void 0 : textLocale.expand;\n    }\n    return /*#__PURE__*/React.createElement(\"a\", {\n      key: \"expand\",\n      className: `${prefixCls}-expand`,\n      onClick: onExpandClick,\n      \"aria-label\": textLocale === null || textLocale === void 0 ? void 0 : textLocale.expand\n    }, expandContent);\n  };\n  // Edit\n  const renderEdit = () => {\n    if (!enableEdit) return;\n    const {\n      icon,\n      tooltip\n    } = editConfig;\n    const editTitle = (0, _toArray.default)(tooltip)[0] || (textLocale === null || textLocale === void 0 ? void 0 : textLocale.edit);\n    const ariaLabel = typeof editTitle === 'string' ? editTitle : '';\n    return triggerType.includes('icon') ? ( /*#__PURE__*/React.createElement(_tooltip.default, {\n      key: \"edit\",\n      title: tooltip === false ? '' : editTitle\n    }, /*#__PURE__*/React.createElement(_transButton.default, {\n      ref: editIconRef,\n      className: `${prefixCls}-edit`,\n      onClick: onEditClick,\n      \"aria-label\": ariaLabel\n    }, icon || /*#__PURE__*/React.createElement(_EditOutlined.default, {\n      role: \"button\"\n    })))) : null;\n  };\n  // Copy\n  const renderCopy = () => {\n    if (!enableCopy) return;\n    const {\n      tooltips,\n      icon\n    } = copyConfig;\n    const tooltipNodes = toList(tooltips);\n    const iconNodes = toList(icon);\n    const copyTitle = copied ? getNode(tooltipNodes[1], textLocale === null || textLocale === void 0 ? void 0 : textLocale.copied) : getNode(tooltipNodes[0], textLocale === null || textLocale === void 0 ? void 0 : textLocale.copy);\n    const systemStr = copied ? textLocale === null || textLocale === void 0 ? void 0 : textLocale.copied : textLocale === null || textLocale === void 0 ? void 0 : textLocale.copy;\n    const ariaLabel = typeof copyTitle === 'string' ? copyTitle : systemStr;\n    return /*#__PURE__*/React.createElement(_tooltip.default, {\n      key: \"copy\",\n      title: copyTitle\n    }, /*#__PURE__*/React.createElement(_transButton.default, {\n      className: (0, _classnames.default)(`${prefixCls}-copy`, copied && `${prefixCls}-copy-success`),\n      onClick: onCopyClick,\n      \"aria-label\": ariaLabel\n    }, copied ? getNode(iconNodes[1], /*#__PURE__*/React.createElement(_CheckOutlined.default, null), true) : getNode(iconNodes[0], /*#__PURE__*/React.createElement(_CopyOutlined.default, null), true)));\n  };\n  const renderOperations = renderExpanded => [renderExpanded && renderExpand(), renderEdit(), renderCopy()];\n  const renderEllipsis = needEllipsis => [needEllipsis && ( /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": true,\n    key: \"ellipsis\"\n  }, ELLIPSIS_STR)), ellipsisConfig.suffix, renderOperations(needEllipsis)];\n  return /*#__PURE__*/React.createElement(_rcResizeObserver.default, {\n    onResize: onResize,\n    disabled: !mergedEnableEllipsis || cssEllipsis\n  }, resizeRef => ( /*#__PURE__*/React.createElement(_EllipsisTooltip.default, {\n    tooltipProps: tooltipProps,\n    enabledEllipsis: mergedEnableEllipsis,\n    isEllipsis: isMergedEllipsis\n  }, /*#__PURE__*/React.createElement(_Typography.default, Object.assign({\n    className: (0, _classnames.default)({\n      [`${prefixCls}-${type}`]: type,\n      [`${prefixCls}-disabled`]: disabled,\n      [`${prefixCls}-ellipsis`]: enableEllipsis,\n      [`${prefixCls}-single-line`]: mergedEnableEllipsis && rows === 1,\n      [`${prefixCls}-ellipsis-single-line`]: cssTextOverflow,\n      [`${prefixCls}-ellipsis-multiple-line`]: cssLineClamp\n    }, className),\n    prefixCls: customizePrefixCls,\n    style: Object.assign(Object.assign({}, style), {\n      WebkitLineClamp: cssLineClamp ? rows : undefined\n    }),\n    component: component,\n    ref: (0, _ref3.composeRef)(resizeRef, typographyRef, ref),\n    direction: direction,\n    onClick: triggerType.includes('text') ? onEditClick : undefined,\n    \"aria-label\": topAriaLabel === null || topAriaLabel === void 0 ? void 0 : topAriaLabel.toString(),\n    title: title\n  }, textProps), /*#__PURE__*/React.createElement(_Ellipsis.default, {\n    enabledMeasure: mergedEnableEllipsis && !cssEllipsis,\n    text: children,\n    rows: rows,\n    width: ellipsisWidth,\n    fontSize: ellipsisFontSize,\n    onEllipsis: onJsEllipsis\n  }, (node, needEllipsis) => {\n    let renderNode = node;\n    if (node.length && needEllipsis && topAriaLabel) {\n      renderNode = /*#__PURE__*/React.createElement(\"span\", {\n        key: \"show-content\",\n        \"aria-hidden\": true\n      }, renderNode);\n    }\n    const wrappedContext = wrapperDecorations(props, /*#__PURE__*/React.createElement(React.Fragment, null, renderNode, renderEllipsis(needEllipsis)));\n    return wrappedContext;\n  })))));\n});\nvar _default = exports.default = Base;"],"mappings":"AAAA,YAAY;AACZ,YAAY;;AAEZ,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,+CAA+C,CAAC,CAACC,OAAO;AAC9F,IAAIC,sBAAsB,GAAGF,OAAO,CAAC,8CAA8C,CAAC,CAACC,OAAO;AAC5FE,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACJ,OAAO,GAAG,KAAK,CAAC;AACxB,IAAIM,cAAc,GAAGL,sBAAsB,CAACF,OAAO,CAAC,iCAAiC,CAAC,CAAC;AACvF,IAAIQ,aAAa,GAAGN,sBAAsB,CAACF,OAAO,CAAC,gCAAgC,CAAC,CAAC;AACrF,IAAIS,aAAa,GAAGP,sBAAsB,CAACF,OAAO,CAAC,gCAAgC,CAAC,CAAC;AACrF,IAAIU,WAAW,GAAGR,sBAAsB,CAACF,OAAO,CAAC,YAAY,CAAC,CAAC;AAC/D,IAAIW,gBAAgB,GAAGT,sBAAsB,CAACF,OAAO,CAAC,mBAAmB,CAAC,CAAC;AAC3E,IAAIY,iBAAiB,GAAGV,sBAAsB,CAACF,OAAO,CAAC,oBAAoB,CAAC,CAAC;AAC7E,IAAIa,QAAQ,GAAGX,sBAAsB,CAACF,OAAO,CAAC,8BAA8B,CAAC,CAAC;AAC9E,IAAIc,gBAAgB,GAAGZ,sBAAsB,CAACF,OAAO,CAAC,mCAAmC,CAAC,CAAC;AAC3F,IAAIe,eAAe,GAAGb,sBAAsB,CAACF,OAAO,CAAC,kCAAkC,CAAC,CAAC;AACzF,IAAIgB,KAAK,GAAGd,sBAAsB,CAACF,OAAO,CAAC,kBAAkB,CAAC,CAAC;AAC/D,IAAIiB,KAAK,GAAGjB,OAAO,CAAC,iBAAiB,CAAC;AACtC,IAAIkB,KAAK,GAAGnB,uBAAuB,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;AACrD,IAAImB,aAAa,GAAGnB,OAAO,CAAC,0BAA0B,CAAC;AACvD,IAAIoB,YAAY,GAAGlB,sBAAsB,CAACF,OAAO,CAAC,yBAAyB,CAAC,CAAC;AAC7E,IAAIqB,eAAe,GAAGrB,OAAO,CAAC,uBAAuB,CAAC;AACtD,IAAIsB,UAAU,GAAGpB,sBAAsB,CAACF,OAAO,CAAC,wBAAwB,CAAC,CAAC;AAC1E,IAAIuB,QAAQ,GAAGrB,sBAAsB,CAACF,OAAO,CAAC,eAAe,CAAC,CAAC;AAC/D,IAAIwB,SAAS,GAAGtB,sBAAsB,CAACF,OAAO,CAAC,aAAa,CAAC,CAAC;AAC9D,IAAIyB,WAAW,GAAGvB,sBAAsB,CAACF,OAAO,CAAC,eAAe,CAAC,CAAC;AAClE,IAAI0B,gBAAgB,GAAGxB,sBAAsB,CAACF,OAAO,CAAC,0BAA0B,CAAC,CAAC;AAClF,IAAI2B,iBAAiB,GAAGzB,sBAAsB,CAACF,OAAO,CAAC,2BAA2B,CAAC,CAAC;AACpF,IAAI4B,SAAS,GAAG1B,sBAAsB,CAACF,OAAO,CAAC,YAAY,CAAC,CAAC;AAC7D,IAAI6B,gBAAgB,GAAG3B,sBAAsB,CAACF,OAAO,CAAC,mBAAmB,CAAC,CAAC;AAC3E,IAAI8B,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAEA,MAAM,IAAI,UAAUC,CAAC,EAAEC,CAAC,EAAE;EACxD,IAAIC,CAAC,GAAG,CAAC,CAAC;EACV,KAAK,IAAIC,CAAC,IAAIH,CAAC,EAAE,IAAI5B,MAAM,CAACgC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACN,CAAC,EAAEG,CAAC,CAAC,IAAIF,CAAC,CAACM,OAAO,CAACJ,CAAC,CAAC,GAAG,CAAC,EAAED,CAAC,CAACC,CAAC,CAAC,GAAGH,CAAC,CAACG,CAAC,CAAC;EAChG,IAAIH,CAAC,IAAI,IAAI,IAAI,OAAO5B,MAAM,CAACoC,qBAAqB,KAAK,UAAU,EAAE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEN,CAAC,GAAG/B,MAAM,CAACoC,qBAAqB,CAACR,CAAC,CAAC,EAAES,CAAC,GAAGN,CAAC,CAACO,MAAM,EAAED,CAAC,EAAE,EAAE;IAC3I,IAAIR,CAAC,CAACM,OAAO,CAACJ,CAAC,CAACM,CAAC,CAAC,CAAC,GAAG,CAAC,IAAIrC,MAAM,CAACgC,SAAS,CAACO,oBAAoB,CAACL,IAAI,CAACN,CAAC,EAAEG,CAAC,CAACM,CAAC,CAAC,CAAC,EAAEP,CAAC,CAACC,CAAC,CAACM,CAAC,CAAC,CAAC,GAAGT,CAAC,CAACG,CAAC,CAACM,CAAC,CAAC,CAAC;EACnG;EACA,OAAOP,CAAC;AACV,CAAC;AACD,SAASU,kBAAkBA,CAACC,IAAI,EAAEC,OAAO,EAAE;EACzC,IAAI;IACFC,IAAI;IACJC,IAAI;IACJC,SAAS;IACTC,MAAM,EAAEC,GAAG;IACXC,MAAM;IACNC,QAAQ;IACRC;EACF,CAAC,GAAGT,IAAI;EACR,IAAIU,cAAc,GAAGT,OAAO;EAC5B,SAASU,IAAIA,CAACC,GAAG,EAAEC,MAAM,EAAE;IACzB,IAAI,CAACA,MAAM,EAAE;MACX;IACF;IACAH,cAAc,GAAG,aAAapC,KAAK,CAACwC,aAAa,CAACF,GAAG,EAAE,CAAC,CAAC,EAAEF,cAAc,CAAC;EAC5E;EACAC,IAAI,CAAC,QAAQ,EAAEJ,MAAM,CAAC;EACtBI,IAAI,CAAC,GAAG,EAAEP,SAAS,CAAC;EACpBO,IAAI,CAAC,KAAK,EAAEL,GAAG,CAAC;EAChBK,IAAI,CAAC,MAAM,EAAER,IAAI,CAAC;EAClBQ,IAAI,CAAC,MAAM,EAAET,IAAI,CAAC;EAClBS,IAAI,CAAC,KAAK,EAAEH,QAAQ,CAAC;EACrBG,IAAI,CAAC,GAAG,EAAEF,MAAM,CAAC;EACjB,OAAOC,cAAc;AACvB;AACA,SAASK,OAAOA,CAACC,GAAG,EAAEC,WAAW,EAAEC,OAAO,EAAE;EAC1C,IAAIF,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAKG,SAAS,EAAE;IACrC,OAAOF,WAAW;EACpB;EACA,OAAOD,GAAG,IAAIE,OAAO,IAAID,WAAW;AACtC;AACA,SAASG,MAAMA,CAACC,GAAG,EAAE;EACnB,IAAIA,GAAG,KAAK,KAAK,EAAE;IACjB,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC;EACvB;EACA,OAAOC,KAAK,CAACC,OAAO,CAACF,GAAG,CAAC,GAAGA,GAAG,GAAG,CAACA,GAAG,CAAC;AACzC;AACA,MAAMG,YAAY,GAAG,KAAK;AAC1B,MAAMC,IAAI,GAAG,aAAanD,KAAK,CAACoD,UAAU,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAK;EACzD,IAAIC,EAAE,EAAEC,EAAE,EAAEC,EAAE;EACd,MAAM;MACFC,SAAS,EAAEC,kBAAkB;MAC7BC,SAAS;MACTC,KAAK;MACLC,IAAI;MACJC,QAAQ;MACRC,QAAQ;MACRC,QAAQ;MACRC,QAAQ;MACRC,QAAQ;MACRC,SAAS;MACTC;IACF,CAAC,GAAGhB,KAAK;IACTiB,SAAS,GAAG1D,MAAM,CAACyC,KAAK,EAAE,CAAC,WAAW,EAAE,WAAW,EAAE,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC;EAC1J,MAAM;IACJkB,YAAY;IACZC;EACF,CAAC,GAAGxE,KAAK,CAACyE,UAAU,CAACtE,eAAe,CAACuE,aAAa,CAAC;EACnD,MAAM,CAACC,UAAU,CAAC,GAAG,CAAC,CAAC,EAAEvE,UAAU,CAACrB,OAAO,EAAE,MAAM,CAAC;EACpD,MAAM6F,aAAa,GAAG5E,KAAK,CAAC6E,MAAM,CAAC,IAAI,CAAC;EACxC,MAAMC,WAAW,GAAG9E,KAAK,CAAC6E,MAAM,CAAC,IAAI,CAAC;EACtC;EACA,MAAMnB,SAAS,GAAGa,YAAY,CAAC,YAAY,EAAEZ,kBAAkB,CAAC;EAChE,MAAMoB,SAAS,GAAG,CAAC,CAAC,EAAEjF,KAAK,CAACf,OAAO,EAAEuF,SAAS,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;EACxH;EACA,MAAM,CAACU,UAAU,EAAEC,UAAU,CAAC,GAAG,CAAC,CAAC,EAAEzE,gBAAgB,CAACzB,OAAO,EAAEmF,QAAQ,CAAC;EACxE,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAG,CAAC,CAAC,EAAEtF,eAAe,CAACd,OAAO,EAAE,KAAK,EAAE;IAChEK,KAAK,EAAE6F,UAAU,CAACC;EACpB,CAAC,CAAC;EACF,MAAM;IACJE,WAAW,GAAG,CAAC,MAAM;EACvB,CAAC,GAAGH,UAAU;EACd,MAAMI,WAAW,GAAGC,IAAI,IAAI;IAC1B,IAAI/B,EAAE;IACN,IAAI+B,IAAI,EAAE;MACR,CAAC/B,EAAE,GAAG0B,UAAU,CAACM,OAAO,MAAM,IAAI,IAAIhC,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACpC,IAAI,CAAC8D,UAAU,CAAC;IACpF;IACAE,UAAU,CAACG,IAAI,CAAC;EAClB,CAAC;EACD;EACA,CAAC,CAAC,EAAE7E,iBAAiB,CAAC1B,OAAO,EAAE,MAAM;IACnC,IAAIwE,EAAE;IACN,IAAI,CAAC2B,OAAO,EAAE;MACZ,CAAC3B,EAAE,GAAGuB,WAAW,CAACU,OAAO,MAAM,IAAI,IAAIjC,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACkC,KAAK,CAAC,CAAC;IAC5E;EACF,CAAC,EAAE,CAACP,OAAO,CAAC,CAAC;EACb,MAAMQ,WAAW,GAAG5E,CAAC,IAAI;IACvBA,CAAC,KAAK,IAAI,IAAIA,CAAC,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,CAAC,CAAC6E,cAAc,CAAC,CAAC;IACxDN,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EACD,MAAMO,YAAY,GAAGxG,KAAK,IAAI;IAC5B,IAAImE,EAAE;IACN,CAACA,EAAE,GAAG0B,UAAU,CAACY,QAAQ,MAAM,IAAI,IAAItC,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACpC,IAAI,CAAC8D,UAAU,EAAE7F,KAAK,CAAC;IAC1FiG,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC;EACD,MAAMS,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIvC,EAAE;IACN,CAACA,EAAE,GAAG0B,UAAU,CAACc,QAAQ,MAAM,IAAI,IAAIxC,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACpC,IAAI,CAAC8D,UAAU,CAAC;IACnFI,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC;EACD;EACA,MAAM,CAACW,UAAU,EAAEC,UAAU,CAAC,GAAG,CAAC,CAAC,EAAEzF,gBAAgB,CAACzB,OAAO,EAAEoF,QAAQ,CAAC;EACxE,MAAM,CAAC+B,MAAM,EAAEC,SAAS,CAAC,GAAGnG,KAAK,CAACoG,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMC,SAAS,GAAGrG,KAAK,CAAC6E,MAAM,CAAC,IAAI,CAAC;EACpC,MAAMyB,WAAW,GAAG,CAAC,CAAC;EACtB,IAAIL,UAAU,CAACM,MAAM,EAAE;IACrBD,WAAW,CAACC,MAAM,GAAGN,UAAU,CAACM,MAAM;EACxC;EACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIH,SAAS,CAACb,OAAO,EAAE;MACrBiB,YAAY,CAACJ,SAAS,CAACb,OAAO,CAAC;IACjC;EACF,CAAC;EACD,MAAMkB,WAAW,GAAG5F,CAAC,IAAI;IACvB,IAAIyC,EAAE;IACNzC,CAAC,KAAK,IAAI,IAAIA,CAAC,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,CAAC,CAAC6E,cAAc,CAAC,CAAC;IACxD7E,CAAC,KAAK,IAAI,IAAIA,CAAC,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,CAAC,CAAC6F,eAAe,CAAC,CAAC;IACzD,CAAC,CAAC,EAAElH,gBAAgB,CAACV,OAAO,EAAEkH,UAAU,CAACW,IAAI,IAAIC,MAAM,CAAC7C,QAAQ,CAAC,IAAI,EAAE,EAAEsC,WAAW,CAAC;IACrFH,SAAS,CAAC,IAAI,CAAC;IACf;IACAK,WAAW,CAAC,CAAC;IACbH,SAAS,CAACb,OAAO,GAAGsB,UAAU,CAAC,MAAM;MACnCX,SAAS,CAAC,KAAK,CAAC;IAClB,CAAC,EAAE,IAAI,CAAC;IACR,CAAC5C,EAAE,GAAG0C,UAAU,CAACc,MAAM,MAAM,IAAI,IAAIxD,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACpC,IAAI,CAAC8E,UAAU,EAAEnF,CAAC,CAAC;EACtF,CAAC;EACDd,KAAK,CAACgH,SAAS,CAAC,MAAMR,WAAW,EAAE,EAAE,CAAC;EACtC;EACA,MAAM,CAACS,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGlH,KAAK,CAACoG,QAAQ,CAAC,KAAK,CAAC;EACzE,MAAM,CAACe,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGpH,KAAK,CAACoG,QAAQ,CAAC,KAAK,CAAC;EAC/E,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGtH,KAAK,CAACoG,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACmB,YAAY,EAAEC,eAAe,CAAC,GAAGxH,KAAK,CAACoG,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACqB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG1H,KAAK,CAACoG,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAACuB,eAAe,EAAEC,kBAAkB,CAAC,GAAG5H,KAAK,CAACoG,QAAQ,CAAC,IAAI,CAAC;EAClE,MAAM,CAACyB,cAAc,EAAEC,cAAc,CAAC,GAAG,CAAC,CAAC,EAAEtH,gBAAgB,CAACzB,OAAO,EAAEkF,QAAQ,EAAE;IAC/E8D,UAAU,EAAE;EACd,CAAC,CAAC;EACF,MAAMC,oBAAoB,GAAGH,cAAc,IAAI,CAACR,QAAQ;EACxD;EACA,MAAM;IACJY,IAAI,GAAG;EACT,CAAC,GAAGH,cAAc;EAClB,MAAMI,mBAAmB,GAAGlI,KAAK,CAACmI,OAAO,CAAC;EAC1C;EACA,CAACH,oBAAoB;EACrB;EACAF,cAAc,CAACM,MAAM,KAAKvF,SAAS,IAAIiF,cAAc,CAACO,UAAU;EAChE;EACAP,cAAc,CAACC,UAAU,IAAI/C,UAAU,IAAIgB,UAAU,EAAE,CAACgC,oBAAoB,EAAEF,cAAc,EAAE9C,UAAU,EAAEgB,UAAU,CAAC,CAAC;EACtH,CAAC,CAAC,EAAEpG,gBAAgB,CAACb,OAAO,EAAE,MAAM;IAClC,IAAI8I,cAAc,IAAI,CAACK,mBAAmB,EAAE;MAC1ChB,qBAAqB,CAAC,CAAC,CAAC,EAAEjH,aAAa,CAACqI,cAAc,EAAE,iBAAiB,CAAC,CAAC;MAC3ElB,wBAAwB,CAAC,CAAC,CAAC,EAAEnH,aAAa,CAACqI,cAAc,EAAE,cAAc,CAAC,CAAC;IAC7E;EACF,CAAC,EAAE,CAACJ,mBAAmB,EAAEL,cAAc,CAAC,CAAC;EACzC,MAAMU,WAAW,GAAGvI,KAAK,CAACmI,OAAO,CAAC,MAAM;IACtC,IAAID,mBAAmB,EAAE;MACvB,OAAO,KAAK;IACd;IACA,IAAID,IAAI,KAAK,CAAC,EAAE;MACd,OAAOd,qBAAqB;IAC9B;IACA,OAAOF,kBAAkB;EAC3B,CAAC,EAAE,CAACiB,mBAAmB,EAAEf,qBAAqB,EAAEF,kBAAkB,CAAC,CAAC;EACpE,MAAMuB,gBAAgB,GAAGR,oBAAoB,KAAKO,WAAW,GAAGd,gBAAgB,GAAGF,YAAY,CAAC;EAChG,MAAMkB,eAAe,GAAGT,oBAAoB,IAAIC,IAAI,KAAK,CAAC,IAAIM,WAAW;EACzE,MAAMG,YAAY,GAAGV,oBAAoB,IAAIC,IAAI,GAAG,CAAC,IAAIM,WAAW;EACpE;EACA,MAAMI,aAAa,GAAG7H,CAAC,IAAI;IACzB,IAAIyC,EAAE;IACN+D,WAAW,CAAC,IAAI,CAAC;IACjB,CAAC/D,EAAE,GAAGuE,cAAc,CAACc,QAAQ,MAAM,IAAI,IAAIrF,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACpC,IAAI,CAAC2G,cAAc,EAAEhH,CAAC,CAAC;EAChG,CAAC;EACD,MAAM,CAAC+H,aAAa,EAAEC,gBAAgB,CAAC,GAAG9I,KAAK,CAACoG,QAAQ,CAAC,CAAC,CAAC;EAC3D,MAAM,CAAC2C,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhJ,KAAK,CAACoG,QAAQ,CAAC,CAAC,CAAC;EACjE,MAAM6C,QAAQ,GAAGA,CAACC,KAAK,EAAEC,OAAO,KAAK;IACnC,IAAI;MACFC;IACF,CAAC,GAAGF,KAAK;IACT,IAAI3F,EAAE;IACNuF,gBAAgB,CAACM,WAAW,CAAC;IAC7BJ,mBAAmB,CAACK,QAAQ,CAAC,CAAC9F,EAAE,GAAG+F,MAAM,CAACC,gBAAgB,MAAM,IAAI,IAAIhG,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACpC,IAAI,CAACmI,MAAM,EAAEH,OAAO,CAAC,CAACK,QAAQ,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC;EAC/I,CAAC;EACD;EACA,MAAMC,YAAY,GAAGC,UAAU,IAAI;IACjC,IAAInG,EAAE;IACNiE,eAAe,CAACkC,UAAU,CAAC;IAC3B;IACA,IAAInC,YAAY,KAAKmC,UAAU,EAAE;MAC/B,CAACnG,EAAE,GAAGuE,cAAc,CAACO,UAAU,MAAM,IAAI,IAAI9E,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACpC,IAAI,CAAC2G,cAAc,EAAE4B,UAAU,CAAC;IAC3G;EACF,CAAC;EACD;EACA1J,KAAK,CAACgH,SAAS,CAAC,MAAM;IACpB,MAAM2C,OAAO,GAAG/E,aAAa,CAACY,OAAO;IACrC,IAAIqC,cAAc,IAAIU,WAAW,IAAIoB,OAAO,EAAE;MAC5C,MAAMC,eAAe,GAAGlB,YAAY,GAAGiB,OAAO,CAACE,YAAY,GAAGF,OAAO,CAACG,YAAY,GAAGH,OAAO,CAACP,WAAW,GAAGO,OAAO,CAACI,WAAW;MAC9H,IAAItC,gBAAgB,KAAKmC,eAAe,EAAE;QACxClC,mBAAmB,CAACkC,eAAe,CAAC;MACtC;IACF;EACF,CAAC,EAAE,CAAC/B,cAAc,EAAEU,WAAW,EAAEvE,QAAQ,EAAE0E,YAAY,EAAEf,eAAe,CAAC,CAAC;EAC1E;EACA;EACA3H,KAAK,CAACgH,SAAS,CAAC,MAAM;IACpB,MAAM2C,OAAO,GAAG/E,aAAa,CAACY,OAAO;IACrC,IAAI,OAAOwE,oBAAoB,KAAK,WAAW,IAAI,CAACL,OAAO,IAAI,CAACpB,WAAW,IAAI,CAACP,oBAAoB,EAAE;MACpG;IACF;IACA;IACA,MAAMiC,QAAQ,GAAG,IAAID,oBAAoB,CAAC,MAAM;MAC9CpC,kBAAkB,CAAC,CAAC,CAAC+B,OAAO,CAACO,YAAY,CAAC;IAC5C,CAAC,CAAC;IACFD,QAAQ,CAACE,OAAO,CAACR,OAAO,CAAC;IACzB,OAAO,MAAM;MACXM,QAAQ,CAACG,UAAU,CAAC,CAAC;IACvB,CAAC;EACH,CAAC,EAAE,CAAC7B,WAAW,EAAEP,oBAAoB,CAAC,CAAC;EACvC;EACA,IAAIqC,YAAY,GAAG,CAAC,CAAC;EACrB,IAAIvC,cAAc,CAACwC,OAAO,KAAK,IAAI,EAAE;IACnCD,YAAY,GAAG;MACbhG,KAAK,EAAE,CAACd,EAAE,GAAG0B,UAAU,CAAC2B,IAAI,MAAM,IAAI,IAAIrD,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGS;IACjE,CAAC;EACH,CAAC,MAAM,KAAK,aAAahE,KAAK,CAACuK,cAAc,CAACzC,cAAc,CAACwC,OAAO,CAAC,EAAE;IACrED,YAAY,GAAG;MACbhG,KAAK,EAAEyD,cAAc,CAACwC;IACxB,CAAC;EACH,CAAC,MAAM,IAAI,OAAOxC,cAAc,CAACwC,OAAO,KAAK,QAAQ,EAAE;IACrDD,YAAY,GAAGpL,MAAM,CAACuL,MAAM,CAAC;MAC3BnG,KAAK,EAAE,CAACb,EAAE,GAAGyB,UAAU,CAAC2B,IAAI,MAAM,IAAI,IAAIpD,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGQ;IACjE,CAAC,EAAE8D,cAAc,CAACwC,OAAO,CAAC;EAC5B,CAAC,MAAM;IACLD,YAAY,GAAG;MACbhG,KAAK,EAAEyD,cAAc,CAACwC;IACxB,CAAC;EACH;EACA,MAAMG,YAAY,GAAGzK,KAAK,CAACmI,OAAO,CAAC,MAAM;IACvC,MAAMuC,OAAO,GAAG3H,GAAG,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC4H,QAAQ,CAAC,OAAO5H,GAAG,CAAC;IAChE,IAAI,CAAC8E,cAAc,IAAIU,WAAW,EAAE;MAClC,OAAO1F,SAAS;IAClB;IACA,IAAI6H,OAAO,CAACzF,UAAU,CAAC2B,IAAI,CAAC,EAAE;MAC5B,OAAO3B,UAAU,CAAC2B,IAAI;IACxB;IACA,IAAI8D,OAAO,CAAC1G,QAAQ,CAAC,EAAE;MACrB,OAAOA,QAAQ;IACjB;IACA,IAAI0G,OAAO,CAACrG,KAAK,CAAC,EAAE;MAClB,OAAOA,KAAK;IACd;IACA,IAAIqG,OAAO,CAACL,YAAY,CAAChG,KAAK,CAAC,EAAE;MAC/B,OAAOgG,YAAY,CAAChG,KAAK;IAC3B;IACA,OAAOxB,SAAS;EAClB,CAAC,EAAE,CAACgF,cAAc,EAAEU,WAAW,EAAElE,KAAK,EAAEgG,YAAY,CAAChG,KAAK,EAAEmE,gBAAgB,CAAC,CAAC;EAC9E;EACA;EACA,IAAItD,OAAO,EAAE;IACX,OAAO,aAAalF,KAAK,CAACwC,aAAa,CAAClC,SAAS,CAACvB,OAAO,EAAE;MACzDK,KAAK,EAAE,CAACqE,EAAE,GAAGwB,UAAU,CAAC2B,IAAI,MAAM,IAAI,IAAInD,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,OAAOO,QAAQ,KAAK,QAAQ,GAAGA,QAAQ,GAAG,EAAE;MAC3G4G,MAAM,EAAEhF,YAAY;MACpBG,QAAQ,EAAED,YAAY;MACtB+E,KAAK,EAAE5F,UAAU,CAAC4F,KAAK;MACvBnH,SAAS,EAAEA,SAAS;MACpBE,SAAS,EAAEA,SAAS;MACpBC,KAAK,EAAEA,KAAK;MACZW,SAAS,EAAEA,SAAS;MACpBJ,SAAS,EAAEA,SAAS;MACpB0G,SAAS,EAAE7F,UAAU,CAAC6F,SAAS;MAC/BC,QAAQ,EAAE9F,UAAU,CAAC8F,QAAQ;MAC7BC,SAAS,EAAE/F,UAAU,CAAC+F;IACxB,CAAC,CAAC;EACJ;EACA;EACA;EACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAM;MACJlD,UAAU;MACVmD;IACF,CAAC,GAAGpD,cAAc;IAClB,IAAI,CAACC,UAAU,EAAE,OAAO,IAAI;IAC5B,IAAIoD,aAAa;IACjB,IAAID,MAAM,EAAE;MACVC,aAAa,GAAGD,MAAM;IACxB,CAAC,MAAM;MACLC,aAAa,GAAGxG,UAAU,KAAK,IAAI,IAAIA,UAAU,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACyG,MAAM;IAC3F;IACA,OAAO,aAAapL,KAAK,CAACwC,aAAa,CAAC,GAAG,EAAE;MAC3C6I,GAAG,EAAE,QAAQ;MACbzH,SAAS,EAAG,GAAEF,SAAU,SAAQ;MAChC4H,OAAO,EAAE3C,aAAa;MACtB,YAAY,EAAEhE,UAAU,KAAK,IAAI,IAAIA,UAAU,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACyG;IACnF,CAAC,EAAED,aAAa,CAAC;EACnB,CAAC;EACD;EACA,MAAMI,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAI,CAACvG,UAAU,EAAE;IACjB,MAAM;MACJwG,IAAI;MACJlB;IACF,CAAC,GAAGrF,UAAU;IACd,MAAMwG,SAAS,GAAG,CAAC,CAAC,EAAE9L,QAAQ,CAACZ,OAAO,EAAEuL,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK3F,UAAU,KAAK,IAAI,IAAIA,UAAU,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACW,IAAI,CAAC;IAChI,MAAMoG,SAAS,GAAG,OAAOD,SAAS,KAAK,QAAQ,GAAGA,SAAS,GAAG,EAAE;IAChE,OAAOrG,WAAW,CAACuF,QAAQ,CAAC,MAAM,CAAC,KAAK,aAAa3K,KAAK,CAACwC,aAAa,CAACnC,QAAQ,CAACtB,OAAO,EAAE;MACzFsM,GAAG,EAAE,MAAM;MACXhH,KAAK,EAAEiG,OAAO,KAAK,KAAK,GAAG,EAAE,GAAGmB;IAClC,CAAC,EAAE,aAAazL,KAAK,CAACwC,aAAa,CAACtC,YAAY,CAACnB,OAAO,EAAE;MACxDuE,GAAG,EAAEwB,WAAW;MAChBlB,SAAS,EAAG,GAAEF,SAAU,OAAM;MAC9B4H,OAAO,EAAE5F,WAAW;MACpB,YAAY,EAAEgG;IAChB,CAAC,EAAEF,IAAI,IAAI,aAAaxL,KAAK,CAACwC,aAAa,CAACjD,aAAa,CAACR,OAAO,EAAE;MACjE4M,IAAI,EAAE;IACR,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI;EACd,CAAC;EACD;EACA,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAI,CAAC5F,UAAU,EAAE;IACjB,MAAM;MACJ6F,QAAQ;MACRL;IACF,CAAC,GAAGvF,UAAU;IACd,MAAM6F,YAAY,GAAGhJ,MAAM,CAAC+I,QAAQ,CAAC;IACrC,MAAME,SAAS,GAAGjJ,MAAM,CAAC0I,IAAI,CAAC;IAC9B,MAAMQ,SAAS,GAAG9F,MAAM,GAAGzD,OAAO,CAACqJ,YAAY,CAAC,CAAC,CAAC,EAAEnH,UAAU,KAAK,IAAI,IAAIA,UAAU,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACuB,MAAM,CAAC,GAAGzD,OAAO,CAACqJ,YAAY,CAAC,CAAC,CAAC,EAAEnH,UAAU,KAAK,IAAI,IAAIA,UAAU,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACsH,IAAI,CAAC;IAClO,MAAMC,SAAS,GAAGhG,MAAM,GAAGvB,UAAU,KAAK,IAAI,IAAIA,UAAU,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACuB,MAAM,GAAGvB,UAAU,KAAK,IAAI,IAAIA,UAAU,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACsH,IAAI;IAC9K,MAAMP,SAAS,GAAG,OAAOM,SAAS,KAAK,QAAQ,GAAGA,SAAS,GAAGE,SAAS;IACvE,OAAO,aAAalM,KAAK,CAACwC,aAAa,CAACnC,QAAQ,CAACtB,OAAO,EAAE;MACxDsM,GAAG,EAAE,MAAM;MACXhH,KAAK,EAAE2H;IACT,CAAC,EAAE,aAAahM,KAAK,CAACwC,aAAa,CAACtC,YAAY,CAACnB,OAAO,EAAE;MACxD6E,SAAS,EAAE,CAAC,CAAC,EAAEpE,WAAW,CAACT,OAAO,EAAG,GAAE2E,SAAU,OAAM,EAAEwC,MAAM,IAAK,GAAExC,SAAU,eAAc,CAAC;MAC/F4H,OAAO,EAAE5E,WAAW;MACpB,YAAY,EAAEgF;IAChB,CAAC,EAAExF,MAAM,GAAGzD,OAAO,CAACsJ,SAAS,CAAC,CAAC,CAAC,EAAE,aAAa/L,KAAK,CAACwC,aAAa,CAACnD,cAAc,CAACN,OAAO,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG0D,OAAO,CAACsJ,SAAS,CAAC,CAAC,CAAC,EAAE,aAAa/L,KAAK,CAACwC,aAAa,CAAClD,aAAa,CAACP,OAAO,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;EACxM,CAAC;EACD,MAAMoN,gBAAgB,GAAGC,cAAc,IAAI,CAACA,cAAc,IAAInB,YAAY,CAAC,CAAC,EAAEM,UAAU,CAAC,CAAC,EAAEK,UAAU,CAAC,CAAC,CAAC;EACzG,MAAMS,cAAc,GAAGC,YAAY,IAAI,CAACA,YAAY,MAAM,aAAatM,KAAK,CAACwC,aAAa,CAAC,MAAM,EAAE;IACjG,aAAa,EAAE,IAAI;IACnB6I,GAAG,EAAE;EACP,CAAC,EAAEnI,YAAY,CAAC,CAAC,EAAE4E,cAAc,CAACM,MAAM,EAAE+D,gBAAgB,CAACG,YAAY,CAAC,CAAC;EACzE,OAAO,aAAatM,KAAK,CAACwC,aAAa,CAAC9C,iBAAiB,CAACX,OAAO,EAAE;IACjEkK,QAAQ,EAAEA,QAAQ;IAClBlF,QAAQ,EAAE,CAACiE,oBAAoB,IAAIO;EACrC,CAAC,EAAEgE,SAAS,MAAM,aAAavM,KAAK,CAACwC,aAAa,CAAC7B,gBAAgB,CAAC5B,OAAO,EAAE;IAC3EsL,YAAY,EAAEA,YAAY;IAC1BmC,eAAe,EAAExE,oBAAoB;IACrCyE,UAAU,EAAEjE;EACd,CAAC,EAAE,aAAaxI,KAAK,CAACwC,aAAa,CAACjC,WAAW,CAACxB,OAAO,EAAEE,MAAM,CAACuL,MAAM,CAAC;IACrE5G,SAAS,EAAE,CAAC,CAAC,EAAEpE,WAAW,CAACT,OAAO,EAAE;MAClC,CAAE,GAAE2E,SAAU,IAAGI,IAAK,EAAC,GAAGA,IAAI;MAC9B,CAAE,GAAEJ,SAAU,WAAU,GAAGK,QAAQ;MACnC,CAAE,GAAEL,SAAU,WAAU,GAAGmE,cAAc;MACzC,CAAE,GAAEnE,SAAU,cAAa,GAAGsE,oBAAoB,IAAIC,IAAI,KAAK,CAAC;MAChE,CAAE,GAAEvE,SAAU,uBAAsB,GAAG+E,eAAe;MACtD,CAAE,GAAE/E,SAAU,yBAAwB,GAAGgF;IAC3C,CAAC,EAAE9E,SAAS,CAAC;IACbF,SAAS,EAAEC,kBAAkB;IAC7BE,KAAK,EAAE5E,MAAM,CAACuL,MAAM,CAACvL,MAAM,CAACuL,MAAM,CAAC,CAAC,CAAC,EAAE3G,KAAK,CAAC,EAAE;MAC7C6I,eAAe,EAAEhE,YAAY,GAAGT,IAAI,GAAGpF;IACzC,CAAC,CAAC;IACFuB,SAAS,EAAEA,SAAS;IACpBd,GAAG,EAAE,CAAC,CAAC,EAAEvD,KAAK,CAAC4M,UAAU,EAAEJ,SAAS,EAAE3H,aAAa,EAAEtB,GAAG,CAAC;IACzDkB,SAAS,EAAEA,SAAS;IACpB8G,OAAO,EAAElG,WAAW,CAACuF,QAAQ,CAAC,MAAM,CAAC,GAAGjF,WAAW,GAAG7C,SAAS;IAC/D,YAAY,EAAE4H,YAAY,KAAK,IAAI,IAAIA,YAAY,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,YAAY,CAACmC,QAAQ,CAAC,CAAC;IACjGvI,KAAK,EAAEA;EACT,CAAC,EAAEU,SAAS,CAAC,EAAE,aAAa/E,KAAK,CAACwC,aAAa,CAAC9B,SAAS,CAAC3B,OAAO,EAAE;IACjE8N,cAAc,EAAE7E,oBAAoB,IAAI,CAACO,WAAW;IACpD3B,IAAI,EAAE5C,QAAQ;IACdiE,IAAI,EAAEA,IAAI;IACV6E,KAAK,EAAEjE,aAAa;IACpBW,QAAQ,EAAET,gBAAgB;IAC1BV,UAAU,EAAEoB;EACd,CAAC,EAAE,CAACsD,IAAI,EAAET,YAAY,KAAK;IACzB,IAAIU,UAAU,GAAGD,IAAI;IACrB,IAAIA,IAAI,CAACxL,MAAM,IAAI+K,YAAY,IAAI7B,YAAY,EAAE;MAC/CuC,UAAU,GAAG,aAAahN,KAAK,CAACwC,aAAa,CAAC,MAAM,EAAE;QACpD6I,GAAG,EAAE,cAAc;QACnB,aAAa,EAAE;MACjB,CAAC,EAAE2B,UAAU,CAAC;IAChB;IACA,MAAMC,cAAc,GAAGxL,kBAAkB,CAAC4B,KAAK,EAAE,aAAarD,KAAK,CAACwC,aAAa,CAACxC,KAAK,CAACkN,QAAQ,EAAE,IAAI,EAAEF,UAAU,EAAEX,cAAc,CAACC,YAAY,CAAC,CAAC,CAAC;IAClJ,OAAOW,cAAc;EACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC;AACF,IAAIE,QAAQ,GAAGhO,OAAO,CAACJ,OAAO,GAAGoE,IAAI"},"metadata":{},"sourceType":"script","externalDependencies":[]}