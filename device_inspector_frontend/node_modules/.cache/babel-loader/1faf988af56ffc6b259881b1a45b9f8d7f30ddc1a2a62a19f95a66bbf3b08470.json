{"ast":null,"code":"var _jsxFileName = \"/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/src/features/latestInspectionImage/components/imageContainer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { Space, Button, Image } from 'antd';\nimport { useImage } from '../context/latestInspectionImageContext';\nimport { useFullScreen } from '../../../hooks/useFullscreen';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ImageContainer = () => {\n  _s();\n  // eslint-disable-next-line no-undef\n  const ref = useRef(null);\n  const imageContext = useImage();\n  const fullScreen = useFullScreen(ref.current);\n  const handleFullScreen = async () => {\n    await fullScreen.toggleFullScreen(true);\n  };\n  const handlePreviousSectorClick = () => {\n    if (imageContext.selectedSector !== undefined) imageContext.updateSector(imageContext.selectedSector -= 1);\n  };\n  const handleNextSectorClick = () => {\n    if (imageContext.selectedSector !== undefined) imageContext.updateSector(imageContext.selectedSector += 1);\n  };\n  const handleBackButtonClick = async () => {\n    imageContext.updateSector(undefined);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    children: /*#__PURE__*/_jsxDEV(Space, {\n      children: [fullScreen.isFullScreen ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(Button, {\n        onClick: async () => await handleBackButtonClick(),\n        children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: imageContext.selectedSector === 1,\n        onClick: handlePreviousSectorClick,\n        children: \"\\u041F\\u0440\\u0435\\u0434\\u044B\\u0434\\u0443\\u0449\\u0438\\u0439 \\u0441\\u0435\\u043A\\u0442\\u043E\\u0440\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        src: imageContext.latestImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: imageContext.selectedSector === 4,\n        onClick: handleNextSectorClick,\n        children: \"\\u0421\\u043B\\u0435\\u0434\\u0443\\u044E\\u0449\\u0438\\u0439 \\u0441\\u0435\\u043A\\u0442\\u043E\\u0440\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: async () => await handleFullScreen(),\n        children: \"\\u041D\\u0430 \\u0432\\u0435\\u0441\\u044C \\u044D\\u043A\\u0440\\u0430\\u043D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 11\n  }, this);\n};\n_s(ImageContainer, \"k5JNlL20NQKEADDh4vv/XXCI/5Q=\", false, function () {\n  return [useImage, useFullScreen];\n});\n_c = ImageContainer;\nvar _c;\n$RefreshReg$(_c, \"ImageContainer\");","map":{"version":3,"names":["React","useRef","Space","Button","Image","useImage","useFullScreen","Fragment","_Fragment","jsxDEV","_jsxDEV","ImageContainer","_s","ref","imageContext","fullScreen","current","handleFullScreen","toggleFullScreen","handlePreviousSectorClick","selectedSector","undefined","updateSector","handleNextSectorClick","handleBackButtonClick","children","isFullScreen","onClick","fileName","_jsxFileName","lineNumber","columnNumber","disabled","src","latestImage","_c","$RefreshReg$"],"sources":["/Users/Rober/dev/work/x_keeper/new_device_inspector/device_inspector_frontend/src/features/latestInspectionImage/components/imageContainer.tsx"],"sourcesContent":["import React, { useRef } from 'react'\nimport { Space, Button, Image } from 'antd'\nimport { useImage } from '../context/latestInspectionImageContext'\nimport { useFullScreen } from '../../../hooks/useFullscreen'\n\nexport const ImageContainer: React.FC = () => {\n  // eslint-disable-next-line no-undef\n  const ref = useRef<HTMLDivElement>(null)\n  const imageContext = useImage()\n  const fullScreen = useFullScreen(ref.current!)\n  const handleFullScreen = async () => {\n    await fullScreen.toggleFullScreen(true)\n  }\n  const handlePreviousSectorClick = () => {\n    if(imageContext.selectedSector !== undefined)\n      imageContext.updateSector(imageContext.selectedSector -= 1 )\n  }\n  const handleNextSectorClick = () => {\n    if(imageContext.selectedSector !== undefined)\n      imageContext.updateSector(imageContext.selectedSector += 1 )\n  }\n  const handleBackButtonClick = async () => {\n    imageContext.updateSector(undefined)\n  }\n\n  return (<div ref={ref}>\n    <Space>\n      {\n        fullScreen.isFullScreen \n          ? <></>\n          : <Button\n            onClick={async () => await handleBackButtonClick()}\n          >Назад</Button>\n      }\n      <Button\n        disabled={imageContext.selectedSector === 1}\n        onClick={handlePreviousSectorClick}\n      >Предыдущий сектор</Button>\n      <Image src={imageContext.latestImage} />\n      <Button\n        disabled={imageContext.selectedSector === 4}\n        onClick={handleNextSectorClick}\n      >Следующий сектор</Button>\n      <Button\n        onClick={async () => await handleFullScreen()}\n      >\n        На весь экран\n      </Button>\n    </Space>\n  </div>)\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}