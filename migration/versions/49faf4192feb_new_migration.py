"""new_migration

Revision ID: 49faf4192feb
Revises: ea0ef1b4588f
Create Date: 2024-07-17 14:20:19.070604

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = '49faf4192feb'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    op.create_table('multiboards',
                    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('multiboards_id_seq'::regclass)"),
                              autoincrement=True, nullable=False),
                    sa.PrimaryKeyConstraint('id', name='multiboards_pkey'),
                    postgresql_ignore_search_path=False
                    )
    op.create_table('boards',
                    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
                    sa.Column('multiboard_id', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('datamatrix', sa.VARCHAR(), autoincrement=False, nullable=True),
                    sa.Column('side', sa.VARCHAR(), autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(['multiboard_id'], ['multiboards.id'], name='boards_multiboard_id_fkey'),
                    sa.PrimaryKeyConstraint('id', name='boards_pkey')
                    )
    op.create_table('sectors',
                    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('sectors_id_seq'::regclass)"),
                              autoincrement=True, nullable=False),
                    sa.Column('step_num', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
                    sa.PrimaryKeyConstraint('id', name='sectors_pkey'),
                    postgresql_ignore_search_path=False
                    )
    op.create_table('inspections',
                    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
                    sa.Column('time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
                    sa.Column('multiboard_id', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('url_image', sa.VARCHAR(), autoincrement=False, nullable=True),
                    sa.Column('sector_id', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True),
                    sa.Column('side', sa.VARCHAR(), autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(['multiboard_id'], ['multiboards.id'],
                                            name='inspections_multiboard_id_fkey'),
                    sa.ForeignKeyConstraint(['sector_id'], ['sectors.id'], name='inspections_sector_id_fkey'),
                    sa.PrimaryKeyConstraint('id', name='inspections_pkey')
                    )
    op.create_table('comments',
                    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
                    sa.Column('inspections_id', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('text', sa.TEXT(), autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(['inspections_id'], ['inspections.id'],
                                            name='comments_inspections_id_fkey'),
                    sa.PrimaryKeyConstraint('id', name='comments_pkey')
                    )
    op.create_table('sectors_dm_position',
                    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
                    sa.Column('id_sector', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('side', sa.VARCHAR(), autoincrement=False, nullable=True),
                    sa.Column('coordinates_1', sa.VARCHAR(), autoincrement=False, nullable=True),
                    sa.Column('coordinates_2', sa.VARCHAR(), autoincrement=False, nullable=True),
                    sa.Column('coordinates_3', sa.VARCHAR(), autoincrement=False, nullable=True),
                    sa.Column('coordinates_4', sa.VARCHAR(), autoincrement=False, nullable=True),
                    sa.Column('coordinates_5', sa.VARCHAR(), autoincrement=False, nullable=True),
                    sa.Column('coordinates_6', sa.VARCHAR(), autoincrement=False, nullable=True),
                    sa.Column('coordinates_7', sa.VARCHAR(), autoincrement=False, nullable=True),
                    sa.Column('coordinates_8', sa.VARCHAR(), autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(['id_sector'], ['sectors.id'], name='sectors_dm_position_id_sector_fkey'),
                    sa.PrimaryKeyConstraint('id', name='sectors_dm_position_pkey')
                    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('DROP TABLE inspections CASCADE;')
    op.execute('DROP TABLE sectors CASCADE;')
    op.execute('DROP TABLE sectors_dm_position CASCADE;')
    op.execute('DROP TABLE comments CASCADE;')
    op.execute('DROP TABLE multiboards CASCADE;')
    op.execute('DROP TABLE boards CASCADE;')
    # ### end Alembic commands ###
